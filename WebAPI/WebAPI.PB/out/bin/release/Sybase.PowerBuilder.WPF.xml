<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sybase.PowerBuilder.WPF</name>
    </assembly>
    <members>
        <member name="T:Sybase.PowerBuilder.WPF.PBInkEdit">
            <summary>
            The PBInkEdit class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDragObject">
            <summary>
            the PBDragObject class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBWindowObject">
            <summary>
            The PBWindowObject class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBGraphicObject">
            <summary>
            the PBGraphicsObject
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraphicObject.control">
            <summary>
            the inner control itself
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraphicObject.tag">
            <summary>
            tag property of Graphic Object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraphicObject.visible">
            <summary>
            to indicate the control is visible or not 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraphicObject.#ctor">
            <summary>
            The contructor of PBGraphicObject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraphicObject.Hide">
            <summary>
            Makes an object or control invisible. Users cannot interact with an 
            invisible object. It does not respond to any events, so the object is also, 
            in effect, disabled.
            This method is meant to be overridden.
            </summary>
            <returns>
            PBInt. Returns 1 if succeeds, -1 if error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraphicObject.Show">
            <summary>
            Makes an object or control visible, if it is hidden. If the object is 
            already visible, Show brings it to the top.
            This method is meant to be overridden.
            </summary>
            <returns>
            PBInt. Returns 1 if succeeds, -1 if error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraphicObject.SetControl(System.Windows.FrameworkElement)">
            <summary>
            Set the inner control a real control object
            </summary>
            <param name="control"> the inner control object </param>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraphicObject.FlowDirection">
            <summary>
            Gets or sets the FlowDirection property indicating the control's FlowDirection
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraphicObject.Tag">
            <summary>
            Gets or sets the tag value 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraphicObject.Visible">
            <summary>
            Gets or sets the Visible property 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraphicObject.WpfControl">
            <summary>
            Gets or sets Inner WPF control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindowObject.afterInitialUpdate">
            <summary>
            indicating whether the control is initialized
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowObject.#ctor">
            <summary>
            The contructor of PBWindowObject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowObject.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves a control or object to another position relative to its parent window, 
            or for some window objects, relative to the screen.
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window. 
            If any argument's value is null, Move returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowObject.OnInitialUpdate">
            <summary>
            whne window control is initialized, this method is called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowObject.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Resizes an object or control by setting its Width and Height 
            properties and then redraws the object.
            </summary>
            <param name="w">The new width in PowerBuilder units</param>
            <param name="h">The new height in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window. 
            If any argument's value is null, Resize returns null.
            </returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindowObject.AfterInitialUpdate">
            <summary>
            Gets or sets a value indicating whether the control is initialized
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragDropEvent">
            <summary>
            drag drop event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragEnterEvent">
            <summary>
            drag enter event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragWithinEvent">
            <summary>
            drag with event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragLeaveEvent">
            <summary>
            drag leave event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.constructorEvent">
            <summary>
            constructor event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.destructorEvent">
            <summary>
            destructor event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.helpEvent">
            <summary>
            help event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.accelerator">
            <summary>
            the acccelerator variable or the control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.accessibleDescription">
            <summary>
            the accessibleDescription variable used to keep the AccessibleDescription property
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.accessibleName">
            <summary>
            the accessibleName variable used to keep the AccessibleName property
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.accessibleRole">
            <summary>
            the accessibleRole variable
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.bringToTop">
            <summary>
            bring the control to top or not 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.bringtoTopInDesignTime">
            <summary>
            the bringToTopInDesignTime variable
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragAuto">
            <summary>
            the dragauto or not
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragIcon">
            <summary>
            the drag icon, to keep the drag icon name of the control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.height">
            <summary>
            the inner height
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.tabOrder">
            <summary>
            the taborder variable
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.width">
            <summary>
            the inner width 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.x">
            <summary>
            the inner x position
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.y">
            <summary>
            the inner y position
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragMode">
            <summary>
            the drag mode local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.isMouseDownWhenBeginDrag">
            <summary>
            the drag mouse status local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.topDragWindow">
            <summary>
            the top window local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragCursor">
            <summary>
            the drag cursor
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragFormatName">
            <summary>
            the dragformat name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragDropOffsetPoint">
            <summary>
            the cursor offset in drag process
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragMouseIsLeftOrRight">
            <summary>
            the local value which indicates whether the dragmouse cab be right
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.dragDropBeginPoint">
            <summary>
            the cursor offset when use drag(begin!)
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.prePointForDragOver">
            <summary>
            the previous pointer for dragover local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.curPointForDragOver">
            <summary>
            the currrent pointer for dragover local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.isDragEntered">
            <summary>
            the drag enter status local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.adorner">
            <summary>
            the dragdrop adnorner local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.ContainerElt">
            <summary>
             the window container UIElement for adnornerlayer
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.canRedraw">
            <summary>
            the local value to indicate whether the control can be redraw immediately
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            dragdrop event stub method
            </summary>
            <param name="source">the source of the event</param>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.dragenter(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            dragenter event stub method
            </summary>
            <param name="source">the source of the event</param>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            dragwithin event stub method
            </summary>
            <param name="source">the source of the event</param>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.dragleave(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            dragleave event stub method
            </summary>        
            <param name="source">the source of the event</param>
            <returns>the return value</returns>     
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.help(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            help event stub method
            </summary>        
            <param name="xpos">the x position</param>
            <param name="ypos">the y position</param>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Drag(Sybase.PowerBuilder.PBDragModesValue)">
            <summary>
            Starts or ends the dragging of a control.
            </summary>
            <param name="m">A value of the DragMode datatype indicating the action you want to take on control.</param>
            <returns>For all controls except OLE controls, returns 1 if it succeeds and -1 if you try to 
            nest drag events or try to cancel the drag when control is not in drag mode.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetControl">
            <summary>
            Get the inner Control 
            </summary>
            <returns>return the control</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.PointerX">
            <summary>
            Gets the distance of the pointer from the left edge of the specified object.
            </summary>
            <returns>Returns the pointer's distance from the left edge of objectname in PowerBuilder units 
            if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.PointerY">
            <summary>
            Gets the distance of the pointer from the top of the specified object.
            </summary>
            <returns> Returns the pointer's distance from the top of objectname in PowerBuilder units
            if it succeeds and -1 if an error occurs. If objectname is null, PointerY returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Includes a visual object, such as a window or a graph control, in a print job 
            that you have started with the PrintOpen function.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">An integer whose value is the x coordinate on the page of the left 
            corner of the object, in thousandths of an inch.</param>
            <param name="y">An integer whose value is the y coordinate on the page of the left
            corner of the object, in thousandths of an inch.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, 
            Print returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Includes a visual object, such as a window or a graph control, in a print job 
            that you have started with the PrintOpen function.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">An integer whose value is the x coordinate on the page of the left 
            corner of the object, in thousandths of an inch.</param>
            <param name="y">An integer whose value is the y coordinate on the page of the left
            corner of the object, in thousandths of an inch.</param>
            <param name="w">An integer specifying the printed width of the object in thousandths of an inch. </param>
            <param name="h">An integer specifying the printed height of the object in thousandths of an inch.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, 
            Print returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetActionCode(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the action code for an event in a DataWindow control. 
            </summary>
            <param name="c">A value specifying the action you want to take in the DataWindow control.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null,
            SetActionCode returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFocus">
            <summary>
            Sets the focus on the specified object or control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, SetFocus returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetPosition(Sybase.PowerBuilder.PBSetPosTypeValue)">
            <summary>
            Specifies the position of a control in the front-to-back order within a window.
            </summary>
            <param name="p">A SetPosType enumerated datatype.</param>
            <returns>Returns 1 when it succeeds and -1 if an error occurs. If 
            any argument's value is null, SetPosition returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetPosition(Sybase.PowerBuilder.PBSetPosTypeValue,Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            Specifies the position of a control in the front-to-back order within a window.
            </summary>
            <param name="p">A SetPosType enumerated datatype.</param>
            <param name="a">The name of the object you want to position objectname behind. Precedingobject
            is required if position is Behind</param>
            <returns>Returns 1 when it succeeds and -1 if an error occurs. If 
            any argument's value is null, SetPosition returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetRedraw(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Controls the automatic redrawing of an object or control after each change to its properties.
            </summary>
            <param name="f">A value indicating let the control redraw or not </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If boolean is null, SetRedraw returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Hide">
            <summary>
            Makes the control invisible
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, Hide returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnInitialUpdate">
            <summary>
            Initialize the control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Show">
            <summary>
            Makes the control visible
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, Hide returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.TriggerConstructorEvent">
            <summary>
            Trigger the control's constructor event
            </summary>
            <returns>the result of trigger constructor</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.TriggerDestructorEvent">
            <summary>
            Trigger the control's destructor event
            </summary>
            <returns>the result of trigger result</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves the control to a specified location
            </summary>
            <param name="x">the x position</param>
            <param name="y">the y position</param>
            <returns>the result of move()</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Resizes an object or control by setting its Width and Height 
            properties and then redraws the object.
            </summary>
            <param name="w">The new width in PowerBuilder units</param>
            <param name="h">The new height in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window. 
            If any argument's value is null, Resize returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the DragObject class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.UpdateDragAdorner(System.Windows.Window)">
            <summary>
            update the drag adorner
            </summary>
            <param name="win">the window</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.RemoveDragDropAdorner">
            <summary>
            remove the dragdrop adorner
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetControl(System.Windows.FrameworkElement)">
            <summary>
            Set the inner control a real control object
            </summary>
            <param name="control"> the inner control object </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragOver event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragLeave event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnDragEnter(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragEnter event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnDragDrop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragDrop event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnGiveFeedback(System.Object,System.Windows.GiveFeedbackEventArgs)">
            <summary>
            Occurs when the input system reports an underlying drag-and-drop event that involves this element. 
            </summary>        
            <param name="sender">sender of the event</param>
            <param name="e">arguments for the event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnQueryContinueDrag(System.Object,System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e"> arguments for the QueryContinueDrag event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            When control is get focus
            </summary>
            <param name="sender">The control fires the event </param>
            <param name="e">The routed focued event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnPreviewGotKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
             When control is get keyboardfocus, remember the control
            </summary>
            <param name="sender">The control fires the event </param>
            <param name="e">The routed focued event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnPreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse down event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnPreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mouse move event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            SizeChanged event handler, fire the PBXYSizeToMarginConverter.ConvertBack(), update X/Y/PBWidth/PBHeight
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Process the MouseMove event
            </summary>
            <param name="sender">The control sent out the event</param>
            <param name="e">The event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the clicked event
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The clicked event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnMouseLButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the MouseLButtonUp event
            </summary>
            <param name="sender">The control sent out the event</param>
            <param name="e">The event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnMouseRButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the MouseMove event
            </summary>
            <param name="sender">The control sent out the event</param>
            <param name="e">The event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            the KeyDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.IsRightToLeft">
            <summary>
            To determine if FlowDirection is RightToLeft or not.
            </summary>
            <returns>True is RightToLeft, False is RightToLeft</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnKeyUp(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            the KeyUp event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.OnTextInput(System.Object,System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            the char event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ExtractExecuteDragArg(Sybase.PowerBuilder.WPF.PBM_EventHandler_drag,System.Windows.DragEventArgs)">
            <summary>
            help functions to execute drag events
            </summary>
            <param name="dragMethod">the drag method</param>
            <param name="e">the drag param</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ExtractExecuteDragArg(Sybase.PowerBuilder.WPF.PBM_EventHandler_dragi,System.Windows.DragEventArgs,Sybase.PowerBuilder.PBInt)">
            <summary>
            extract and execute drag event
            </summary>
            <param name="dragMethod">the dragmethod</param>
            <param name="e">the drag event args</param>
            <param name="i">the drag param</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ExcecuteMouseEvent(Sybase.PowerBuilder.PBM_EventHandler_mouse,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Execute a mouse event
            </summary>
            <param name="eventHandler">The event handler</param>
            <param name="e">Mouse event argument</param>
            /// <returns>the event result</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ParseMouseEventParameters(System.Windows.Input.MouseButtonEventArgs,Sybase.PowerBuilder.PBULong@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            /// parse the parameters that PB event handler needs from .net mouse event argument.
            </summary>
            <param name="e">the mousebutton events args</param>
            <param name="flags">the mouse flags</param>
            <param name="xpos">the x position</param>
            <param name="ypos">the y position</param>        
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ParseMouseEventParameters(System.Windows.Input.MouseButtonEventArgs,Sybase.PowerBuilder.PBULong@)">
            <summary>
            /// parse the parameters that PB event handler needs from .net mouse event argument.
            </summary>
            <param name="e">the mousebutton events args</param>
            <param name="flags">the mouse flags</param>  
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetTextSize(Sybase.PowerBuilder.PBInt)">
            <summary>
            Set control text size
            </summary>
            <param name="value">the font size</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetTextSize">
            <summary>
            Get the control's text size
            </summary>
            <returns>the text size</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetWeight(Sybase.PowerBuilder.PBInt)">
            <summary>
            The the fontweight 
            </summary>
            <param name="value">the font weight value </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetWeight">
            <summary>
            get the font weight
            </summary>
            <returns>the font weight</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFontCharSet(Sybase.PowerBuilder.PBFontCharSetValue)">
            <summary>
            Set FontCharSet
            </summary>
            <param name="value">the fontcharset to be set</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetFontCharSet">
            <summary>
            Get the control's fontcharset
            </summary>
            <returns>the control's fontcharset </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFontPitch(Sybase.PowerBuilder.PBFontPitchValue)">
            <summary>
            Set the FontPictch 
            </summary>
            <param name="value">the fontpitch value to be set</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetFontPitch">
            <summary>
            Get the control's fontpitch
            </summary>
            <returns>the control's fontpitch</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFontFamily(Sybase.PowerBuilder.PBFontFamilyValue)">
            <summary>
            Set the FontFamily 
            </summary>
            <param name="value">the fontfamily to be set</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetFontFamily">
            <summary>
            Get the control's font family
            </summary>
            <returns>the control's fontfamily </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFaceName(Sybase.PowerBuilder.PBString)">
            <summary>
            Set facename 
            </summary>
            <param name="value">the facename to be set</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetFaceName">
            <summary>
            Get the control's facename
            </summary>
            <returns>the control's font facename</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetItalic(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the text to be Italic 
            </summary>
            <param name="value"> true or false indicating the text is italic or not </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetItalic">
            <summary>
            Get if the text is Italic
            </summary>
            <returns>true or false indicating the text is italic or not </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetUnderLine(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the text as underline style
            </summary>
            <param name="value"> true or false indicating the text is underline style  or not</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetUnderLine">
            <summary>
            Get true or false indicating the text is underline style  or not
            </summary>
            <returns>true or false indicating the text is underline style  or not</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.IsDragGesture(System.Windows.Point)">
            <summary>
            checking mouse status whether it should invoke drag process
            </summary>
            <param name="point">mousedown position</param>
            <returns>returns true to invoke drag</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.CreateDragDropAdorner(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            create the dragdrop adorner
            </summary>
            <param name="pbdo">the dragobject</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetTopWindow">
            <summary>
            Get the control's top window
            </summary>
            <returns>the top window</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.BeginDrag">
            <summary>
            drag(begin!) help function
            </summary>
            <returns>result for drag(begin!)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.CancelDrag">
            <summary>
            drag(cancel!) help function
            </summary>
            <returns>result for drag(cancel!)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.EndDrag">
            <summary>
            drag(end!) help function
            </summary>
            <returns>result for drag(end!)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.DoDragDrop(System.Windows.DataObject)">
            <summary>
            local dragdrop method for treeview
            </summary>
            <param name="ob">dragdrop parameter</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.DoAsynDragDropFunc(System.Object)">
            <summary>
            local dragdrop method for asynchronism
            </summary>
            <param name="parameter">dragdrop parameter</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.ProcessKeyEvent(System.Windows.DragDropKeyStates)">
            <summary>
            process the keyboard event in drag process
            </summary>
            <param name="keystate">the key state</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.BringToFront">
            <summary>
            bring to the top position
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SendToBack">
            <summary>
            send to the back position
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetToBehind(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            set to behind target control
            </summary>
            <param name="pbob">the target control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.MouseInControl(System.Windows.Point)">
            <summary>
            check whether the mouse is in control
            </summary>
            <param name="p">mouse position</param>
            <returns>returns true if mouse is in control.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.GetMousePosition(System.Windows.Media.Visual)">
            <summary>
            get the mouse position use interop
            </summary>
            <param name="relativeTo">the target control related to</param>
            <returns>the mouse position</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDragObject.SetFocusFunc">
            <summary>
            Snippet Threading to trigger idle event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDragObject.HelpEvent">
            <summary>
            add or remove the help event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.AccessibleDescription">
            <summary>
            Gets or sets the description of the control and/or its purpose for use by accessibility tools
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.AccessibleName">
            <summary>
            Gets or sets the label that briefly describes the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.AccessibleRole">
            <summary>
            Gets or sets what kind of user interface element the control is. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.BringToTop">
            <summary>
            Gets or sets a value that indicates whether this control is brought to top
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DragAuto">
            <summary>
            Gets or sets a value that indicates whether the control is a drag -auto control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DragIcon">
            <summary>
            Gets or sets the control's icon when dragged
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.Height">
            <summary>
            Gets or sets the Height property of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.TabOrder">
            <summary>
            Gets or sets the tab value of the control within the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.Visible">
            <summary>
            Gets or sets a value that indicates whether the control is visible or not
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.Width">
            <summary>
            Gets or sets the Width property of the control, in PowerBuilder units. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.X">
            <summary>
            Gets or sets the X property of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.Y">
            <summary>
            Gets or sets the Y property of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.BringtoTopInDesignTime">
            <summary>
            Gets or sets a value indicating whether the control will be brought to the top in design time
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.Handle">
            <summary>
             Gets the handle of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DragCursor">
            <summary>
             the drag cursor
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.TopDragWindow">
            <summary>
            the top window for drag adorner
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.CtorEvent">
            <summary>
            Gets or sets the contrutor event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DtorEvent">
            <summary>
            Gets or sets  the destructor event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.HlpEvent">
            <summary>
            Gets or sets  the help event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DrgLeaveEvent">
            <summary>
            Gets or sets  drag leave event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DrgEnterEvent">
            <summary>
            Gets or sets  drag enter event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DrgWithinEvent">
            <summary>
            Gets or sets  drag within event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDragObject.DrgDropEvent">
            <summary>
            Gets or sets  drag drop event 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDragObject.PBDragModesForScript">
            <summary>
            enums for drag mode
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.PBDragModesForScript.Begin">
            <summary>
            begin! value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.PBDragModesForScript.End">
            <summary>
            end! value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.PBDragModesForScript.Cancel">
            <summary>
            cancel! value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDragObject.PBDragModesForScript.None">
            <summary>
            initial status
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.gestureEvent">
            <summary>
            gesture event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.getFocusEvent">
            <summary>
            getFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.loseFocusEvent">
            <summary>
            loseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.modifiedEvent">
            <summary>
            modified event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.recognitionResultEvent">
            <summary>
            recognitionResult event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkEdit.strokeEvent">
            <summary>
            stroke event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.#ctor">
            <summary>
            The contructor of PBInkEdit
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.gesture(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of gesture method
            </summary>
            <param name="gest">Integer identifying the gesture recognized.</param>
            <returns>Return false to accept the gesture and true to ignore it.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.modified">
            <summary>
            stub of modified method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.recognitionresult">
            <summary>
            stub of recognitionresult method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.stroke">
            <summary>
            stub of stroke method
            </summary>
            <returns>Return true to erase the stroke and false otherwise.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control
            </summary>
            <returns>
            returns the number of characters that Clear removed from objectname.
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.Copy">
            <summary>
            Puts selected text or an OLE object on the clipboard.
            </summary>
            <returns>
            returns the number of characters that were copied to the clipboard.
            If an error occurs, Copy returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.Cut">
            <summary>
            Deletes selected text or an OLE object from the specified control and stores it on the clipboard
            </summary>
            <returns>
            returns the number of characters that were cut from controlname and stored in the clipboard.
            If an error occurs, Cut returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control.
            </summary>
            <returns> returns the number of characters that were pasted into  controlname. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.Position">
            <summary>
            Determines the position of the insertion point in an edit control.
            </summary>
            <returns>Returns the location of the insertion point in editname if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.RecognizeText">
            <summary>
            that text in an InkEdit control should be recognized.
            </summary>
            <returns>Returns 1 if text is recognized and 0 otherwise.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in an edit control with a specified string.
            </summary>
            <param name="t">The string that replaces the selected text.</param>
            <returns>
            returns 1 for success and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.SelectedLength">
            <summary>
            Determines the total number of characters in the selected text in an editable control
            </summary>
            <returns>
            Returns the length of the selected text in editname.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.SelectedText">
            <summary>
            Obtains the selected text in an editable control.
            </summary>
            <returns>
            Returns the selected text in editname. 
            If there is no selected text or if an error occurs, SelectedText returns the empty string (""). 
            If editname is null, SelectedText returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkEdit.SelectText(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBULong)">
            <summary>
            Selects text in an editable control.
            </summary>
            <param name="x">the position at which you want to start the selection.</param>
            <param name="y">the number of characters you want to select. </param>
            <returns>
            Returns the number of characters selected. 
            If an error occurs, SelectText returns -1. 
            </returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.GestureEvent">
            <summary>
            Gesture Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.ModifiedEvent">
            <summary>
            Modified Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.RecognitionResultEvent">
            <summary>
            RecognitionResult Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkEdit.StrokeEvent">
            <summary>
            Stroke Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Alignment">
            <summary>
            Gets or sets the alignment of text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.BackColor">
            <summary>
            Gets or sets the numeric value of the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.BorderStyle">
            <summary>
            Gets or sets the border style of the control.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.DisplayOnly">
            <summary>
            Gets or sets a value indicating whether the text is display only and cannot be changed by the user. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Factoid">
            <summary>
            Gets or sets a context for ink recognition.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.HScrollBar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.IgnorePressure">
            <summary>
            Gets or sets a value indicating whether the drawn ink gets wider as the pressure of the pen tip on the tablet surface increases. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkAntiAliased">
            <summary>
            Gets or sets a value indicating whether the foreground and background colors along the edge 
            of the drawn ink are blended (antialiased) to make the stroke smoother and sharper.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkColor">
            <summary>
            Gets or sets the current ink color.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkHeight">
            <summary>
            Gets or sets the height of the side of the rectangular pen tip in pixels.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkMode">
            <summary>
            Gets or sets whether ink collection is enabled and whether ink only or ink and gestures are collected.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkTransparency">
            <summary>
            Gets or sets the transparency of drawn ink.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InkWidth">
            <summary>
            Gets or sets the width of the pen in pixels.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.InsertAsText">
            <summary>
            Gets or sets a value indicating whether the ink is inserted as text or as ink. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Limit">
            <summary>
            Gets or sets the maximum number of characters (0 to 32,767) that can be entered in the control  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Modified">
            <summary>
            Gets or sets a value indicating whether the text in the control has been modified since it was opened or last saved.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.PenTip">
            <summary>
            Gets or sets whether the pen tip is round or rectangular. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.RecognitionTimer">
            <summary>
            Gets or sets the time period in milliseconds between the last ink stroke and the start of text recognition.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.RightToLeft">
            <summary>
            Gets or sets a value indicating whether that characters should be displayed in right-to-left order. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Status">
            <summary>
            Gets a read-only property available at runtime that provides the current status of the control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.Text">
            <summary>
            Gets or sets the text that displays in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.UseMouseForInput">
            <summary>
            Gets or sets a value indicating whether the mouse can be used for input on a Tablet PC.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkEdit.VScrollBar">
            <summary>
            Gets or sets a value indicating whether a vertical scroll bar is displayed on the right of the control. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper">
            <summary>
            This class help pb wpf runtime get a type's property inital value.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.uriStringBuffer">
            <summary>
            buffer uri string
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.instanceBuffer">
            <summary>
            buffer instance value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.setBuffer">
            <summary>
            buffer resource
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.GetPropertyInitalValue(System.Object,System.String)">
            <summary>
            get a specified property inital value
            </summary>
            <param name="var">the properties of the specified type</param>
            <param name="name">property name</param>
            <returns>return the inital value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.GetPropertyInitalValueCollection(System.Collections.Generic.List{Sybase.PowerBuilder.PBVariableDefinition}@,System.Type,System.Type,Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            get a property collections from a target type
            </summary>
            <param name="varlist">the result list</param>
            <param name="targetType">target type</param>
            <param name="type">get class definition for this type</param>
            <param name="instance">the target type instance</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.ConstructURIString(System.Type,Sybase.PowerBuilder.PBPowerObject,System.String@)">
            <summary>
            construct a uri stirng
            </summary>
            <param name="targetType">targe type</param>
            <param name="instance">instance value</param>
            <returns>return the uri string</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.GetContainerInstance(System.String)">
            <summary>
            get the container instance from a uri stirng
            </summary>
            <param name="uriString">uri string</param>
            <returns>return container instance</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.ClassDefinitionHelper.PBClassDefinitionHelper.GetMarkupObject(System.Object,System.Type,Sybase.PowerBuilder.PBPowerObject,System.String)">
            <summary>
            get the markup object for a specified target
            </summary>
            <param name="container">container instance</param>
            <param name="targetType">target type information</param>
            <param name="instance">target type instance</param>
            <returns>markup object instance</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBWPFControlBase">
            <summary>
            base class for WPF control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWPFControlBase._control">
            <summary>
            inner control to actual 3rd party WPF control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWPFControlBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWPFControlBase.BindingEventHandler(System.Reflection.MethodInfo,System.String)">
            <summary>
            BindingEventHandler
            </summary>
            <param name="mi"></param>
            <param name="eventHandlerName"></param>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWPFControlBase.InnerControl">
            <summary>
            InnerControl
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBWindow">
            <summary>
            the PBWindow class
            </summary>
            <summary>
            the PBWindow class
            </summary>    
            <summary>
            the PBWindow class
            </summary>    
            <summary>
            the PBWindow class
            </summary>    
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.controlarray">
            <summary>
            the array holding the control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.canCloseWindow">
            <summary>
            local variable indicating whether the window is closed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.inClosing">
            <summary>
            local variable indicating whether the window is closed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.islayered">
            <summary>
            local variable indicating whether the window is layered or not
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.innerWindow">
            <summary>
             the real wpf window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.inOpenEvent">
            <summary>
            if in processing open event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.isOpened">
            <summary>
            if in processing open event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.isOpenEventTriggered">
            <summary>
            if in processing open event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.icon">
            <summary>
            the local variable holding the icon file string
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.maxbox">
            <summary>
            the local varable to holding status of if the window is maximized of not
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.minbox">
            <summary>
            the local variable to holding the the status indicating whether the mainBox is true of false
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.width">
            <summary>
            local varaible to holding the with of the window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.height">
            <summary>
            the local variable holding the height of the window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.resizable">
            <summary>
            indicating where the window can be resized
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.controlmenu">
            <summary>
            the local variable to holding the control menu
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.backcolor">
            <summary>
            the backcolor 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.center">
            <summary>
            if the window is located in center 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.title">
            <summary>
            the title of the window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.titlebar">
            <summary>
            the local variable to holding the status of whether the title bar shows or not 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.triggerCloseEvent">
            <summary>
            local variable indicating whether the window close event should be triggered
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.closeEventbeIsTrigged">
            <summary>
            local variable indicating whether the window close event is triggered
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.isMDIChild">
            <summary>
            local variable indicating whether the window is MDIChild window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mouseX">
            <summary>
            local variable indicating current cursor's x position
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mouseY">
            <summary>
            local variable indicating current cursor's y position
            </summary>        
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.modKeys">
            <summary>
            local variable indicating current key pressed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.menuID">
            <summary>
            local variable indicating current menu
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.activeMenu">
            <summary>
            local variable indicating current menu
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.deferedMDIChildren">
            <summary>
            the mdichildren need to be attached to MDI
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mdiParent">
            <summary>
            the window's mdi parent local variable
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.curSheet">
            <summary>
            the mdi window's current sheet
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.MdiListItemPosition">
            <summary>
            the menu item for displaying mdi list. set by opensheet()
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragFormatName">
            <summary>
            the dragformat name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.pbDraggedObj">
            <summary>
            the drag object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.adorner">
            <summary>
            the dragdrop adnorner local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.containerElt">
            <summary>
             the window container UIElement for adnornerlayer
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragDropOffsetPoint">
            <summary>
            the dragdrop offset point local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.handle">
            <summary>
            the window handle local value
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.#ctor">
            <summary>
            The constructor the PBWindow
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Close">
            <summary>
            close the window
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.InitializeContainerTabPage">
            <summary>
            initialize the container tabpage
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.InitializeContainerUO">
            <summary>
            initialize the container userobject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ResetSessionMessageParm">
            <summary>
            reset the current session's message param
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.TriggerWindowCloseEvent">
            <summary>
            trigger window's close event
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.TriggerUserResizeEvent(Sybase.PowerBuilder.PBULong,System.Int32,System.Int32)">
            <summary>
            trigger the window's resize event
            </summary>
            <param name="sizeType">resize event type</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.RemoveWindowFromSession">
            <summary>
            remove the window from session
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ResetSessionActiveWindow">
            <summary>
            reset session's active window if current window is response window
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.InitializeWindow">
            <summary>
            initialize the window with event handlers
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetMouseInformation(System.Windows.Input.MouseEventArgs)">
            <summary>
            get the current mouse's x, y and key information
            </summary>
            <param name="e">mouser event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ApplyWPFToolbarSetting(Sybase.PowerBuilder.WPF.PBMenu)">
            <summary>
            Apply the wpf toolbar settings
            </summary>
            <param name="menu">the target menu</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.IsSameTitleToolbar">
            <summary>
            Check if the application is set to same title toolbar
            </summary>
            <returns>returns true if has same title toolbar</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ExtractExecuteDragArg(Sybase.PowerBuilder.WPF.PBM_EventHandler_drag,System.Windows.DragEventArgs)">
            <summary>
            execute the drag method
            </summary>
            <param name="dragMethod">the drag method</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetActiveTopMenu">
            <summary>
            get the window's active menu
            </summary>
            <returns>the active menu</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.TriggerShortCutKey(System.Windows.Input.KeyEventArgs,Sybase.PowerBuilder.WPF.Controls.Menu)">
            <summary>
            trigger the menu's click event by shortcut
            </summary>
            <param name="e">key event args</param>
            <param name="menu">the active menu</param>
            <returns>returns true if has the shortcut</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.TriggerShortCutKeyInMenu(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Windows.Controls.ItemsControl)">
            <summary>
            trigger menuitem's click event by shortcut
            </summary>
            <param name="key">shortcut key</param>
            <param name="alt">the alt key</param>
            <param name="shift">the shift key</param>
            <param name="ctrl">the ctrl key</param>
            <param name="items">the menu items</param>
            <returns>returns true if has the shortcut.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.PopToolbarOptionMenu(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            popup toolbar's option menu
            </summary>
            <param name="e">mousebutton event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.WpfMenu_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            toolbar's popup menuitem's event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">the event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ApplyToolbarAlignment(System.Boolean)">
            <summary>
            move the toolbars of the window by the specific alignment or saved toolbar status. 
            </summary>
            <param name="alignment"></param>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.activateEvent">
            <summary>
            activate event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.closeEvent">
            <summary>
            close event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.closeQueryEvent">
            <summary>
            closeQuery event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.deactivateEvent">
            <summary>
            deactivate event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.doubleClickedEvent">
            <summary>
            doubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragDropEvent">
            <summary>
            dragDrop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragEnterEvent">
            <summary>
            dragEnter event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragLeaveEvent">
            <summary>
            dragLeave event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.dragWithinEvent">
            <summary>
            dragWithin event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.helpEvent">
            <summary>
            help event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.hideEvent">
            <summary>
            hide event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.hotLinkAlarmEvent">
            <summary>
            hotLinkAlarm event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.keyEvent">
            <summary>
            key event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mouseDownEvent">
            <summary>
            mouseDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mouseMoveEvent">
            <summary>
            mouseMove event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.mouseUpEvent">
            <summary>
            mouseUp event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.openEvent">
            <summary>
            the event handler of open event 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.remoteExecEvent">
            <summary>
            remoteExec event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.remoteHotLinkStartEvent">
            <summary>
            remoteHotLinkStart event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.remoteHotLinkStopEvent">
            <summary>
            remoteHotLinkStop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.remoteRequestEvent">
            <summary>
            remoteRequest event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.remoteSendEvent">
            <summary>
            remoteSend event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.resizeEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.showEvent">
            <summary>
            show event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.systemKeyEvent">
            <summary>
            systemKey event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.timerEvent">
            <summary>
            timer event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWindow.toolbarMovedEvent">
            <summary>
            toolbarMoved event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.activate">
            <summary>
            stub method of activate event
            </summary>
            <returns> default is zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.clicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub method of clicked event
            </summary>
            <param name="flags">flag to indicate which button is pressed</param>
            <param name="xpos">xposition  of the mouse </param>
            <param name="ypos">yposition of the mouse</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.close">
            <summary>
            the clone method
            </summary>
            <returns>default return of zero </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.closequery">
            <summary>
            closequery event 
            </summary>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.deactivate">
            <summary>
            stub method of deactivate event
            </summary>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.doubleclicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub method of doubleclicked event
            </summary>
            <param name="flags">flag to indicate which button is pressed</param>
            <param name="xpos">xposition  of the mouse </param>
            <param name="ypos">yposition of the mouse</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            stub method of dragdrop event
            </summary>
            <param name="source">source object of the event</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.dragenter(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            stub method of dragenter event
            </summary>
            <param name="source">source object of the event</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.dragleave(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            stub mehtod of dragleave event
            </summary>
            <param name="source">source object of the event</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            stub method dragwith method
            </summary>
            <param name="source">source object of the event</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.help(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub mehtod of help 
            </summary>
            <param name="xpos">x postion of the mouse</param>
            <param name="ypos">y position of the mouse</param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.hide">
            <summary>
            stub of event hide
            </summary>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.hotlinkalarm">
            <summary>
            stub of hotlinkalarm event 
            </summary>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.key(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub  of key event
            </summary>
            <param name="key"> key value of the current pressed key</param>
            <param name="keyflags">key flags inidcating which keys are pressed </param>
            <returns>default rturn zero </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.mousedown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of meouse down event
            </summary>
            <param name="flags">flags indicating which mouse button is pressed</param>
            <param name="xpos">x position of the mouse</param>
            <param name="ypos">y position of the mouse </param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.mousemove(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of meouse move  event
            </summary>
            <param name="flags">flags indicating which mouse button is pressed</param>
            <param name="xpos">x position of the mouse</param>
            <param name="ypos">y position of the mouse </param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.mouseup(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of meouse up event
            </summary>
            <param name="flags">flags indicating which mouse button is pressed</param>
            <param name="xpos">x position of the mouse</param>
            <param name="ypos">y position of the mouse </param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.open">
            <summary>
            stub of window open event 
            </summary>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other 
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown event
            </summary>
            <param name="flags">flags indicating which mouse button is pressed</param>
            <param name="xpos">x position of the mouse</param>
            <param name="ypos">y position of the mouse </param>
            <returns>default return of zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.remoteexec">
            <summary>
            stub of remoteexec event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.remotehotlinkstart">
            <summary>
            stub of remotehotlinkstart event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.remotehotlinkstop">
            <summary>
            stub of remotehotlinkstop event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.remoterequest">
            <summary>
            stub of remoterequest event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.remotesend">
            <summary>
            stub of remotesend event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.resize(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of resize event 
            </summary>
            <param name="flags">UnsignedLong by value. The values are</param>
            <param name="xpos">Integer by value (the width of the client area of a window or DataWindow control in PowerBuilder units).</param>
            <param name="ypos">Integer by value (the height of the client area of a window or DataWindow control in PowerBuilder units).</param>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.show(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub method of show event
            </summary>
            <param name="b">Boolean by value (whether the window is being shown). The value is always true.</param>
            <param name="i">Long by value (the status of the window).</param>
            <returns>Return code choices (specify in a RETURN statement)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.systemkey(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub method of systemkey event
            </summary>
            <param name="key">the key value indicating which key is pressed</param>
            <param name="keyflags">the key flags combination</param>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.timer">
            <summary>
            stub of timer event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.toolbarmoved">
            <summary>
            stub of tollbarmoved event
            </summary>
            <returns>default rturn zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnOpen">
            <summary>
            when the window is opened, this method is called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnShow">
            <summary>
            when the window is showed, this method is called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.InitializeObjectAndTraceConstructor(System.Object)">
            <summary>
            trace the contructor event 
            </summary>
            <param name="o"> control object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnAddControl(System.Object)">
            <summary>
            call when control is added to the control array
            </summary>
            <param name="o"> the control object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnClosing(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
             when the window is closing, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">cancel event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnClosed(System.Object,System.EventArgs)">
            <summary>
            when the window is closed, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            when the window is on key down, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">key event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            when the window is on key down, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">key event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.FindCancelButton(Sybase.PowerBuilder.PBArray)">
            <summary>
            Find the button that responds to ESCAPE key.
            </summary>
            <param name="controls">The controls array to search</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.FindCancelButton(Sybase.PowerBuilder.WPF.PBTab)">
            <summary>
            Find the Cancel button in a PBTab control.
            </summary>
            <param name="tab">The PBTab control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            when the window is size changed, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">sizechanged event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnMdiClientSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            when the window mdiclient is size changed, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">sizechanged event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            when the window is on mouse move, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            when the window is on mouse up, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">mousebutton event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            when the window is on mouse double clicked, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">mousebutton event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            when the window is on mouse down, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">mousebutton event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnVisibleChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Boolean})">
            <summary>
            when the window is on visible changed, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnActivated(System.Object,System.EventArgs)">
            <summary>
            when the window is activated, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnDeactivated(System.Object,System.EventArgs)">
            <summary>
            when the window is deactivated, this method is called
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the dragover event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the dragleave event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnDragEnter(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the dragenter event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnDrop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the drop event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ToolBarPanel_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            the toolbar panel mouse right button down event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">mouse button event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the window loaded event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">routed event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnPreviewDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the preview dragleave event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnPreviewDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the preview dragover event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnPreviewDragEnter(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the preview dragenter event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnActiveMenuChanged">
            <summary>
            the toolbar moved event handler
            </summary>        
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OnCreate(System.Boolean)">
            <summary>
            the method will be called when the window is created 
            </summary>
            <param name="init"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Hide">
            <summary>
            Makes the window invisible.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Show">
            <summary>
            Makes the window visible.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ChangeMenu``1(``0@)">
            <summary>
            Changes the menu associated with a window.
            </summary>
            <typeparam name="T0">the type of PBMenu</typeparam>
            <param name="m">the menu you want to make the current menu.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ChangeMenu``1(``0@,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the menu associated with a window.
            </summary>
            <typeparam name="T0">the type of PBMenu</typeparam>
            <param name="m">the menu you want to make the current menu.</param>
            <param name="w">The number of the item on the menu bar to which you want to append the names of the open sheets.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ArrangeSheets(Sybase.PowerBuilder.PBArrangeTypesValue)">
            <summary>
            Arranges the windows contained in an MDI frame.
            </summary>
            <param name="t">A value specifying how you want the open sheets arranged in the MDI frame window.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetActiveSheet">
            <summary>
            Returns the currently active sheet in an MDI frame window.
            </summary>
            <returns>
            Returns the sheet that is currently active in mdiframewindow. 
            If no sheet is active, GetActiveSheet returns an invalid value.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetFirstSheet">
            <summary>
            Obtains the top sheet in the MDI frame
            </summary>
            <returns>
            Returns the first (top) sheet in the MDI frame. 
            If no sheet is open in the frame, GetFirstSheet returns an invalid value.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetNextSheet(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Obtains the sheet that is behind the specified sheet in the MDI frame.
            </summary>
            <param name="s">The sheet for which you want the sheet that is behind it</param>
            <returns>
            Returns the sheet that is behind sheet in the MDI frame. 
            If there is no sheet behind sheet, GetNextSheet returns an invalid value. 
            If any argument's value is null, GetNextSheet returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.CloseUserObject(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            Closes a user object by removing it from view and executing the scripts for its Destructor event.
            </summary>
            <param name="o">The name of the user object you want to close</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, CloseUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject``1(``0@)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="n">the name of the user object you want to display.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="n">the name of the user object you want to display.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the window's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Places the window in a new location specified by the X and Y arguments.        
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window. 
            If any argument's value is null, Move returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the size of the window to the size specified in the width and height arguments.
            </summary>
            <param name="w">The new width in PowerBuilder units</param>
            <param name="h">The new height in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window. 
            If any argument's value is null, Resize returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetPosition(Sybase.PowerBuilder.PBSetPosTypeValue)">
            <summary>
            Specifies the position of the window in the front-to-back order of the application.
            </summary>
            <param name="p">A SetPosType enumerated datatype. </param>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetPosition returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetPosition(Sybase.PowerBuilder.PBSetPosTypeValue,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Specifies the position of the window in the front-to-back order of the application.
            </summary>
            <param name="p">A SetPosType enumerated datatype. </param>
            <param name="a">The name of the object you want to position objectname behind. </param>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetPosition returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Gets the current values for alignment, visibility, and title of the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar for which you want the current settings</param>
            <param name="v">a value indicating whether the toolbar is visible</param>
            <returns>
            Returns 1 if it succeeds.  
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean@,Sybase.PowerBuilder.PBToolbarAlignmentValue@)">
            <summary>
            Gets the current values for alignment, visibility, and title of the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar for which you want the current settings</param>
            <param name="v">a value indicating whether the toolbar is visible</param>
            <param name="a">A variable of the ToolbarAlignment enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds.  
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean@,Sybase.PowerBuilder.PBToolbarAlignmentValue@,Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets the current values for alignment, visibility, and title of the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar for which you want the current settings</param>
            <param name="v">a value indicating whether the toolbar is visible</param>
            <param name="a">A variable of the ToolbarAlignment enumerated datatype</param>
            <param name="t">
            A string variable in which you want to store the toolbar title that is 
            displayed when the alignment is Floating!
            </param>
            <returns>
            Returns 1 if it succeeds.  
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetToolbarPos(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Gets the position of a docked toolbar.
            </summary>
            <param name="i">the index of the toolbar for which you want the current settings.</param>
            <param name="r">the number of the docking row for the specified toolbar</param>
            <param name="o">the offset of the toolbar from the beginning of the docking row. </param>
            <returns>
            Returns 1 if it succeeds.  
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, GetToolbarPos returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetToolbarPos(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Gets position information (coordinates) for a floating toolbar.
            </summary>
            <param name="i">the index of the toolbar for which you want the current settings.</param>
            <param name="x">the x coordinate of the floating toolbar. </param>
            <param name="y">the y coordinate of the floating toolbar.</param>
            <param name="w">the width of the floating toolbar.</param>
            <param name="h">the height of the floating toolbar.</param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Specifies the visibility for the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar whose settings you want to change.</param>
            <param name="v">specifying whether to make the toolbar visible. </param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBToolbarAlignmentValue)">
            <summary>
            Specifies the alignment and visibility for the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar whose settings you want to change.</param>
            <param name="v">specifying whether to make the toolbar visible. </param>
            <param name="a">A value specifying the alignment for the toolbar.</param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetToolbar(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBToolbarAlignmentValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies the alignment, visibility, and title for the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar whose settings you want to change.</param>
            <param name="v">specifying whether to make the toolbar visible. </param>
            <param name="a">A value specifying the alignment for the toolbar.</param>
            <param name="t">
            A string whose value is the title for the toolbar when its alignment is Floating!.
            </param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetToolbarPos(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sets the position of the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar whose settings you want to change.</param>
            <param name="r">the number of the docking row for the toolbar. </param>
            <param name="o">the distance of the toolbar from the beginning of the docking row.</param>
            <param name="b">
            A boolean value specifying whether you want to insert the specified toolbar 
            before the toolbars in dockrow or you want to add toolbarindex to  dockrow.
            </param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetToolbarPos(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the position of the specified toolbar.
            </summary>
            <param name="i">the index of the toolbar whose settings you want to change</param>
            <param name="x">the x coordinate of the floating toolbar</param>
            <param name="y">the y coordinate of the floating toolbar</param>
            <param name="w">the width of the floating toolbar</param>
            <param name="h">the height of the floating toolbar</param>
            <returns>
            Returns 1 if it succeeds. 
            returns -1 if there is no toolbar for the index you specify or if an error occurs. 
            If any argument's value is null, SetToolbarPos returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.WorkSpaceHeight">
            <summary>
            Obtains the height of the workspace within the boundaries of the specified window.
            </summary>
            <returns>
            Returns the height of the workspace area in PowerBuilder units in  windowname. 
            If an error occurs, WorkSpaceHeight returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.WorkSpaceWidth">
            <summary>
            Obtains the width of the workspace within the boundaries of the specified window.
            </summary>
            <returns>
            Returns the width of the workspace area (in PowerBuilder units) in  windowname. 
            If an error occurs, WorkSpaceWidth returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.WorkSpaceX">
            <summary>
            Obtains the distance between the left edge of a window's workspace and the 
            left edge of the screen.
            </summary>
            <returns>
            Returns the distance that the left edge of the workspace area of  windowname 
            is from the left edge of the screen (in PowerBuilder units). 
            WorkSpaceX returns -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.WorkSpaceY">
            <summary>
            Obtains the distance between the top of a window's workspace and the top of the screen.
            </summary>
            <returns>
            Returns the distance that the top of the workspace area of  windowname is from 
            the top of the screen (in PowerBuilder units). 
            If an error occurs, WorkSpaceY returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.CloseChannel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Closes a DDE channel.
            </summary>
            <param name="h">The handle to the PowerBuilder window that is acting as the DDE client.</param>
            <returns>
            Returns 1 if it succeeds.
            If an error occurs, CloseChannel returns a negative integer.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ExecRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong)">
            <summary>
            Asks a DDE server application to execute the specified command.
            </summary>
            <param name="s">the command you want a DDE server application to execute. </param>
            <param name="c">A long that identifies the channel to the DDE server application.</param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, ExecRemote returns a negative integer.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ExecRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Asks a DDE server application to execute the specified command.
            </summary>
            <param name="c">the command you want a DDE server application to execute. </param>
            <param name="a">the DDE name of the server application.</param>
            <param name="t">the data or the instance of the DDE application you want to use with the command.</param>
            <returns>
            Returns 1 if it succeeds. 
            If it fails, it returns a negative integer.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetCommandDDE(Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the command sent by the client application when your application is a DDE server.
            </summary>
            <param name="t">A string variable in which GetCommandDDE will store the command</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs 
            If string is null, GetCommandDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetCommandDDEOrigin(Sybase.PowerBuilder.PBString@)">
            <summary>
            obtains the application name parameter used by the DDE client sending the command.
            </summary>
            <param name="a">the name of the server application</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If applstring is null, GetCommandDDEOrigin returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetDataDDE(Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains data sent from another DDE application and stores it in the specified string variable. 
            </summary>
            <param name="s">
            A string variable in which GetDataDDE will put the data received from a remote DDE application
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If string is null, GetDataDDE returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetDataDDEOrigin(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@)">
            <summary>
            Determines the origin of data from a hot-linked DDE server application or a 
            DDE client application, and if successful, stores the application's DDE 
            identifiers in the specified strings.
            </summary>
            <param name="a">the name of the server application</param>
            <param name="t">A string variable in which GetDataDDEOrigin will store the topic </param>
            <param name="i">store the item identification</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If any argument's value is null, GetDataDDEOrigin returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBLong)">
            <summary>
            Asks a DDE server application to provide data and stores that data in the specified variable.
            </summary>
            <param name="l">the location of the data you want returned.</param>
            <param name="t">A PowerBuilder string variable into which the returned data will be placed.</param>
            <param name="c">The handle to the window that is acting as the DDE client.</param>
            <returns>Returns 1 if it succeeds and a negative integer if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Asks a DDE server application to provide data and stores that data in the specified variable.
            </summary>
            <param name="l">the location of the data you want returned.</param>
            <param name="t">A PowerBuilder string variable into which the returned data will be placed.</param>
            <param name="c">The handle to the window that is acting as the DDE client.</param>
            <param name="b">A boolean identifying whether the string to get from the DDE server is in ANSI format.</param>
            <returns>Returns 1 if it succeeds and a negative integer if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Asks a DDE server application to provide data and stores that data in the specified variable.
            </summary>
            <param name="l">the location of the data you want returned from the DDE server application.</param>
            <param name="t">A string variable into which the returned data will be placed.</param>
            <param name="a">the DDE name of the DDE server application.</param>
            <param name="p">the data or the instance of the application you want to use with the command </param>
            <returns>
            Returns 1 if it succeeds and a negative integer if an error occurs
            If any argument's value is null, GetRemote returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.GetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Asks a DDE server application to provide data and stores that data in the specified variable.
            </summary>
            <param name="l">the location of the data you want returned from the DDE server application.</param>
            <param name="t">A string variable into which the returned data will be placed.</param>
            <param name="a">the DDE name of the DDE server application.</param>
            <param name="p">the data or the instance of the application you want to use with the command </param>
            <param name="b">A boolean identifying whether the string to get from the DDE server is in ANSI format.</param>
            <returns>
            Returns 1 if it succeeds and a negative integer if an error occurs
            If any argument's value is null, GetRemote returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenChannel(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a channel to a DDE server application.
            </summary>
            <param name="a">the DDE name of the DDE server application.</param>
            <param name="t">the data or the instance of the application you want to use</param>
            <returns>
            Returns the handle to the channel (a positive integer) if it succeeds. 
            If an error occurs, OpenChannel returns a negative integer
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.RespondRemote(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends a DDE message indicating whether the command or data received from a 
            remote DDE application was acceptable.
            </summary>
            <param name="f">A boolean expression.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If boolean is null, RespondRemote returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetDataDDE(Sybase.PowerBuilder.PBString)">
            <summary>
            Sends data to a DDE client application when PowerBuilder is acting as a DDE server. 
            </summary>
            <param name="s">The data you want to send to a DDE client application</param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, SetDataDDE returns a negative integer.
            If any argument's value is null, SetDataDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetDataDDE(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sends data to a DDE client application when PowerBuilder is acting as a DDE server. 
            </summary>
            <param name="s">The data you want to send to a DDE client application</param>
            <param name="a">The DDE name for the client application</param>
            <param name="t">A string whose value is the basic data grouping the DDE client application referenced</param>
            <param name="i">A string (data within topic)</param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, SetDataDDE returns a negative integer.
            If any argument's value is null, SetDataDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong)">
            <summary>
            Asks a DDE server application to accept data and store it in the specified location.
            </summary>
            <param name="l">the location of the data in the server application that will accept the data. </param>
            <param name="r">A string whose value you want to send to the remote application.</param>
            <param name="c">the channel to the DDE server application</param>
            <returns>Returns 1 if it succeeds and a negative integer if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Asks a DDE server application to accept data and store it in the specified location.
            </summary>
            <param name="l">the location of the data in the server application that will accept the data. </param>
            <param name="r">A string whose value you want to send to the remote application.</param>
            <param name="c">the channel to the DDE server application</param>
            <param name="b">A boolean identifying whether the string to send to the DDE server is in ANSI format.</param>
            <returns>Returns 1 if it succeeds and a negative integer if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Asks a DDE server application to accept data and store it in the specified location.
            </summary>
            <param name="l">the location of the data in the server application that will accept the data.</param>
            <param name="r">A string whose value you want to send to the remote application.</param>
            <param name="a">the DDE name of the server application.</param>
            <param name="t">the data or the instance of the application that will accept the data</param>
            <returns>
            Returns 1 if it succeeds and a negative integer if an error occurs.
            If any argument's value is null, SetRemote returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetRemote(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Asks a DDE server application to accept data and store it in the specified location.
            </summary>
            <param name="l">the location of the data in the server application that will accept the data.</param>
            <param name="r">A string whose value you want to send to the remote application.</param>
            <param name="a">the DDE name of the server application.</param>
            <param name="t">the data or the instance of the application that will accept the data</param>
            <param name="b">A boolean identifying whether the string to send to the DDE server is in ANSI format.</param>
            <returns>
            Returns 1 if it succeeds and a negative integer if an error occurs.
            If any argument's value is null, SetRemote returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.StartHotLink(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Establishes a hot link with a DDE server application
            </summary>
            <param name="l">the location of the data in which a change of value triggers a HotLinkAlarm event.</param>
            <param name="a">the DDE name of the server application.</param>
            <param name="t">the data or the instance of the application in which a change triggers a HotLinkAlarm event </param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, StartHotLink returns a negative integer.
            If any argument's value is null, StartHotLink returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.StartHotLink(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Establishes a hot link with a DDE server application
            </summary>
            <param name="l">the location of the data in which a change of value triggers a HotLinkAlarm event.</param>
            <param name="a">the DDE name of the server application.</param>
            <param name="t">the data or the instance of the application in which a change triggers a HotLinkAlarm event </param>
            <param name="b">A boolean identifying whether the string to get from the DDE server is in ANSI format.</param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, StartHotLink returns a negative integer.
            If any argument's value is null, StartHotLink returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.StartServerDDE(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Establishes your application as a DDE server. 
            </summary>
            <param name="a">The DDE name for your application.</param>
            <param name="t">the basic data grouping the DDE client application references.</param>
            <param name="args">other args</param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, StartServerDDE returns -1
            If any argument's value is null, StartServerDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.StopHotLink(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Terminates a hot link with a DDE server application.
            </summary>
            <param name="l">the location at which you want to end the hot link</param>
            <param name="a">the DDE name of the server application</param>
            <param name="t">the data or the instance of the application in which the hot link is stopped,</param>
            <returns>
            Returns 1 if it succeeds. 
            If an error occurs, StopHotLink returns a negative integer.
            If any argument's value is null, StopHotLink returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.StopServerDDE(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Causes your application to stop acting as a DDE server application.
            </summary>
            <param name="a">The DDE name for your PowerBuilder application.</param>
            <param name="t">the topic you declared when you called StartServerDDE.</param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, StopServerDDE returns -1
            If any argument's value is null, StopServerDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ParentWindow">
            <summary>
            get the parent window of the window
            </summary>
            <returns>this window's parent window</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.PointerX">
            <summary>
            Gets the distance of the pointer from the left edge of the specified object.
            </summary>
            <returns>
            Returns the pointer's distance from the left edge of objectname in PowerBuilder units if it succeeds 
            and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.PointerY">
            <summary>
            Gets the distance of the pointer from the top of the specified object.
            </summary>
            <returns>
            Returns the pointer's distance from the top of objectname in PowerBuilder units if it succeeds 
            and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints the window.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">the x coordinate on the page of the left corner of the object</param>
            <param name="y">the y coordinate on the page of the left corner of the object</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints the window.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">the x coordinate on the page of the left corner of the object</param>
            <param name="y">the y coordinate on the page of the left corner of the object</param>
            <param name="w">the printed width of the object in thousandths of an inch.</param>
            <param name="h">the printed height of the object in thousandths of an inch.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetFocus">
            <summary>
            Sets focus to the specified window.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If objectname is null, SetFocus returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetMicroHelp(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies the text to be displayed in the MicroHelp box in an MDI frame window.
            </summary>
            <param name="t">A string whose value is the new MicroHelp text</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetMicroHelp returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetRedraw(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Controls the automatic redrawing of an object or control after each change to its properties.
            </summary>
            <param name="f">Specifies the state of the redraw flag</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If boolean is null, SetRedraw returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            open userobject help functions
            </summary>
            <param name="o">the target userobject</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.OpenUserObject(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            open userobject help functions
            </summary>
            <param name="o">target userobject</param>
            <param name="x">x position value</param>
            <param name="y">y position value</param>
            <returns>if succeeds returns 1, else returns -1</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ContainsControl(Sybase.PowerBuilder.WPF.PBWindowObject)">
            <summary>
            checking the window if contains the child control
            </summary>
            <param name="control">the target control</param>
            <returns>return true if the window contains the control, else return false.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.TriggerControlDestructorEvent(Sybase.PowerBuilder.WPF.PBWindowObject)">
            <summary>
            trigger the control's desctructor event
            </summary>
            <param name="pbwin">the target control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.SetWindowPosType(Sybase.PowerBuilder.PBSetPosTypeValue)">
            <summary>
            set the window position type
            </summary>
            <param name="p">the position type</param>
            <returns>if succeeds returns 1, else returns -1</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ChangeMenu(Sybase.PowerBuilder.WPF.PBMenu)">
            <summary>
            change the window's menu
            </summary>
            <param name="m">the target menu</param>
            <returns>if succeeds, returns true</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.ActiveMDIChildMenu(Sybase.PowerBuilder.WPF.Controls.Window)">
            <summary>
            active the mdi child window menu
            </summary>
            <param name="curWindow">the MDI child window</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindow.IsRightToLeft">
            <summary>
            To determine if FlowDirection is RightToLeft or not.
            </summary>
            <returns>True is RightToLeft, False is RightToLeft</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Handle">
            <summary>
            Gets the handle of the window
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.ActivateEvent">
            <summary>
            Activate Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.ClickedEvent">
            <summary>
            Clicked Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.CloseEvent">
            <summary>
            Close Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.CloseQueryEvent">
            <summary>
            CloseQuery Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DeactivateEvent">
            <summary>
            Deactivate Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DoubleClickedEvent">
            <summary>
            DoubleClicked Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DragDropEvent">
            <summary>
            DragDrop Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DragEnterEvent">
            <summary>
            DragEnter Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DragLeaveEvent">
            <summary>
            DragLeave Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.DragWithinEvent">
            <summary>
            DragWithin Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.HelpEvent">
            <summary>
            Help Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.HideEvent">
            <summary>
            Hide Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.HotLinkAlarmEvent">
            <summary>
            HotLinkAlarm Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.KeyEvent">
            <summary>
            the Event of KeyEvent 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.MouseDownEvent">
            <summary>
            MouseDown Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.MouseMoveEvent">
            <summary>
            MouseMove Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.MouseUpEvent">
            <summary>
            MouseUp Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.OpenEvent">
            <summary>
            the event of OpenEvent
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.OtherEvent">
            <summary>
            Other Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RButtonDownEvent">
            <summary>
            RButtonDown Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RemoteExecEvent">
            <summary>
            RemoteExec Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RemoteHotLinkStartEvent">
            <summary>
            RemoteHotLinkStart Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RemoteHotLinkStopEvent">
            <summary>
            RemoteHotLinkStop Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RemoteRequestEvent">
            <summary>
            RemoteRequest Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.RemoteSendEvent">
            <summary>
            RemoteSend Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.ResizeEvent">
            <summary>
            Resize Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.ShowEvent">
            <summary>
            Show Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.SystemKeyEvent">
            <summary>
            SystemKey Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.TimerEvent">
            <summary>
            Timer Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBWindow.ToolbarMovedEvent">
            <summary>
            ToolbarMoved Event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.IsMdiFrame">
            <summary>
            if windowtype is mdi or mdichild, returns true
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Visible">
            <summary>
            Gets or sets the visible of the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.AccessibleDescription">
            <summary>
            Gets or sets the description of the window and/or its purpose for use by accessibility tools
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.AccessibleName">
            <summary>
            Gets or sets the label that briefly describes the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.AccessibleRole">
            <summary>
            Gets or sets what kind of user interface element the control is. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.AnimationTime">
            <summary>
            Gets or sets how long an animation plays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.BackColor">
            <summary>
            Gets or sets the numeric value of the background color.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Border">
            <summary>
            Gets or sets a value indicating whether the window has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.BringToTop">
            <summary>
            Gets or sets a value indicating whether PowerBuilder moves the window to the 
            top of the front-to-back order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Center">
            <summary>
            Gets or sets the window's center property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ClientEdge">
            <summary>
            Gets or sets a value indicating whether the client area of the window appears 
            sunken within the frame. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.CloseAnimation">
            <summary>
            Gets or sets an optional animation effect that displays when the window closes. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ColumnsPerPage">
            <summary>
            Gets or sets the number of columns on a page
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ContextHelp">
            <summary>
            Gets or sets a value indicating whether the small question mark button appears in the title bar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Control">
            <summary>
            Gets or sets the array holding the Control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ControlMenu">
            <summary>
            Gets or sets a value that indicates whether the Control Menu box displays in the title bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Enabled">
            <summary>
            Gets or sets a value indicating whether the window is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Height">
            <summary>
            Gets or sets the Height property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.HScrollBar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar displays in the window.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Icon">
            <summary>
             Gets or sets a stock icon or an ICO file that displays when the window is minimized.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.KeyboardIcon">
            <summary>
            Gets or sets a value indicating whether the keyboardicon displays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.LinesPerPage">
            <summary>
            Gets or sets the number of lines on a page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.MaxBox">
            <summary>
            Gets or sets a value that indicates whether a Maximize Box displays in the title bar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.MenuID">
            <summary>
            Gets or sets the ID of a menu
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.MenuName">
            <summary>
            Gets or sets the name of a menu.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.MinBox">
            <summary>
            Gets or sets a value that indicates whether a Minimize Box displays in the title bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.OpenAnimation">
            <summary>
            Gets or sets an optional animation effect that displays when the window opens. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.PaletteWindow">
            <summary>
            Gets or sets a value indicating whether the window has an appearance 
            appropriate for small palette windows that display over the application.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Pointer">
            <summary>
            Gets or sets the name of the file containing the pointer that is used for the window.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Resizable">
            <summary>
            Gets or sets a value that indicates whether the window is resizable.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.RightToLeft">
            <summary>
            Gets or sets a value indicating whether the characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Title">
            <summary>
            Gets or sets the text of the window title.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.TitleBar">
            <summary>
            Gets or sets a value that indicates whether a title bar displays. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarAlignment">
            <summary>
            Gets or sets where the toolbar displays in window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarHeight">
            <summary>
            Gets or sets the height of the toolbar when it is a floating toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarVisible">
            <summary>
            Gets or sets a value indicating whether the toolbar displays 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarWidth">
            <summary>
            Gets or sets the width of the toolbar when it is a floating toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarX">
            <summary>
            Gets or sets the X coordinate of the toolbar when it is a floating toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ToolbarY">
            <summary>
            Gets or sets the Y coordinate of the toolbar when it is a floating toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Transparency">
            <summary>
            Gets or sets the transparency of a window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.UnitsPerColumn">
            <summary>
            Gets or sets the number of PowerBuilder units to be scrolled right or left 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.UnitsPerLine">
            <summary>
            Gets or sets the number of PowerBuilder units to be scrolled up or down
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.VScrollBar">
            <summary>
            Gets or sets a value indicating whether a vertical scroll bar displays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Width">
            <summary>
            Gets or sets Width property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.WindowState">
            <summary>
            Gets or sets the state in which you want to run a window. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.WindowType">
            <summary>
            Gets or sets the window type 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.X">
            <summary>
            Gets or sets the X position (distance from left edge of screen) of the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Y">
            <summary>
            Gets or sets the Y position (distance from the top of the screen) of the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Skin">
            <summary>
            Gets or sets the skin of the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.Tag">
            <summary>
            Gets or sets the tag value 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.DeferedChildren">
            <summary>
            mdi window's mdi children need to be be ownered by mdi
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ContainerUO">
            <summary>
            Gets or sets the window's container userobject
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.ContainerTabPage">
            <summary>
            Gets or sets the window's container tabpage
            </summary>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.InnerControl">
            <summary>
             the the inner window control
            </summary>
            <returns>the inner window control </returns>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.IsLayered">
            <summary>
            Gets or sets a value indicating whether the window is layered or not 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.IsMainWindow">
            <summary>
            Gets a value indicating whether the window is a main window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.WinControl">
            <summary>
            Gets or sets the window's inner control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.WindowClosed">
            <summary>
            Gets or sets a value indicating whether the window is closed
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWindow.IsMDIChild">
            <summary>
            Gets or sets a value indicating whether the window is MDIChild
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBSystemFunctions">
            <summary>
            Implementation of Library funtions
            </summary>
            <summary>
            Implementation of window funtions
            </summary>
            <summary>
            Implementation of registry funtions
            </summary>
            <summary>
            class of system functions
            </summary>
            <summary>
            Implementation of print funtions
            </summary>
            <summary>
            Implementation of MessageBox funtions
            </summary>
            <summary>
            Implementation of File funtions
            </summary>
            <summary>
            Implementation of Miscellaneous Functions
            </summary>
            <summary>
            Implementation of File funtions
            </summary>
            <summary>
            Implementation of print funtions
            </summary>
            <summary>
            Implementation of System and Environment Functions
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSystemFunctions.PRINTERINFOLENGTH">
            <summary>
            the print info length
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSystemFunctions.PRINTERDRIVERINFOLENGTH">
            <summary>
            PRINTERDRIVER INFO LENGTH
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSystemFunctions.PRINTERDRIVER_INFO_LENGTH">
            <summary>
            PRINTERDRIVER_INFO_LENGTH
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.AddToLibraryList(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds new files to the library search path of an application or component at runtime.
            </summary>
            <param name="l">A comma-separated list of file names. Specify the full file name with its extension. </param>
            <returns>Returns 1 if it succeeds. If an error occurs, it returns:
              -1   The application or component is being run in the PowerBuilder development environment, rather than from a 
                     standalone executable or server.
              -2   The new library list or existing library list is empty, or another internal error has occurred.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetLibraryList">
            <summary>
            Gets the files in the library search path of the application.
            </summary>
            <returns>Returns the current library list with complete paths. Multiple libraries are separated by commas.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryCreate(Sybase.PowerBuilder.PBString)">
            <summary>
            Creates an empty PowerBuilder library with optional comments.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library you want to create. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, LibraryCreate returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryCreate(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Creates an empty PowerBuilder library with optional comments.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library you want to create. </param>
            <param name="c">A string whose value is the comments you want to associate with the library.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, LibraryCreate returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryDelete(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes a library file or, if you specify a DataWindow object, deletes the DataWindow object from the library.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library you want to delete or from 
            which you want to delete a DataWindow object. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryDelete(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibImportTypeValue)">
            <summary>
            Deletes a library file or, if you specify a DataWindow object, deletes the DataWindow object from the library.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library you want to delete or from 
            which you want to delete a DataWindow object. </param>
            <param name="e">A string whose value is the name of the DataWindow object you want to delete from libraryname.</param>
            <param name="t">A value of the LibImportType enumerated datatype identifying the type of object you want to delete. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryDirectory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibDirTypeValue)">
            <summary>
            Obtains a list of the objects in a PowerBuilder library. 
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library for which you want the contents. </param>
            <param name="e">A value of the LibDirType enumerated datatype identifying the type of objects you want listed</param>
            <returns>LibraryDirectory returns a tab-separated list with one object per line. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryDirectoryEx(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibDirTypeValue)">
            <summary>
            Obtains a list of the objects in a PowerBuilder library.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library for which you want the contents.</param>
            <param name="e">A value of the LibDirType enumerated datatype identifying the type of objects you want listed</param>
            <returns>LibraryDirectory returns a tab-separated list with one object per line. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryExport(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibExportTypeValue)">
            <summary>
            Exports an object from a library. The object is exported as syntax.
            </summary>
            <param name="l">A string whose value is the name of the PowerBuilder library from which you want to export an object. I</param>
            <param name="e">A string whose value is the name of the object you want to export</param>
            <param name="t">A value of the LibExportType enumerated datatype identifying the type of objects you want to export.</param>
            <returns>Returns the syntax of the object if it succeeds. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryImport(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibImportTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
             Imports a DataWindow object into a library. LibraryImport uses the syntax of the DataWindow object, 
             which is specified in text format, to recreate the object in the library.
            </summary>
            <param name="l">A string specifying the name of the PowerBuilder library into which you want to import the entry.</param>
            <param name="e">A string specifying the name of the DataWindow object you want to import.</param>
            <param name="t">A value of the LibImportType enumerated datatype identifying the type of object you want to import. </param>
            <param name="s">A string specifying the syntax of the DataWindow object you want to import.</param>
            <param name="r">A string variable that you want to fill with any error messages that occur.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, LibraryImport returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.LibraryImport(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLibImportTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString)">
            <summary>
              Imports a DataWindow object into a library. LibraryImport uses the syntax of the DataWindow object, 
              which is specified in text format, to recreate the object in the library.
            </summary>
            <param name="l">A string specifying the name of the PowerBuilder library into which you want to import the entry.</param>
            <param name="e">A string specifying the name of the DataWindow object you want to import.</param>
            <param name="t">A value of the LibImportType enumerated datatype identifying the type of object you want to import. </param>
            <param name="s">A string specifying the syntax of the DataWindow object you want to import.</param>
            <param name="r">A string variable that you want to fill with any error messages that occur.</param>
            <param name="c">A string specifying the comments you want to associate with the entry.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, LibraryImport returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SetLibraryList(Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the files in the library search path of the application at runtime.
            </summary>
            <param name="l">A comma-separated list of file names. </param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, it returns:
              -1   The application is being run from PowerBuilder, rather than from a standalone executable.
              -2   A currently instantiated object is in a library that is not on the new list. 
              If any argument's value is null, SetLibraryList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.AddAssemblyReference(Sybase.PowerBuilder.PBString)">
            <summary>
            Dynamically add a reference of a PB assembly at runtime
            </summary>
            <param name="fullpathAssembly"></param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, it returns -1.
            If any argument's value is null, AddAssemblyReference returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SetAssemblyReference(Sybase.PowerBuilder.PBString)">
            <summary>
            Dynamically set a reference of a PB assembly at runtime
            </summary>
            <param name="fullpathAssembly"></param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, it returns -1.
            If any argument's value is null, AddAssemblyReference returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetAssemblyReference">
            <summary>
            Get referenced assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Close(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Closes a window and releases the storage occupied by the window and all the controls in the window.
            </summary>
            <param name="w">The name of the window you want to close</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If windowname is null, Close returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.CloseWithReturn(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Closes a window and stores a return value in the Message object. You should use CloseWithReturn only for response windows.
            </summary>
            <param name="o">The name of the window you want to close.</param>
            <param name="r">The value you want to store in the Message object when the window is closed. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.CloseWithReturn(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            Closes a window and stores a return value in the Message object. You should use CloseWithReturn only for response windows.
            </summary>
            <param name="o">The name of the window you want to close.</param>
            <param name="r">The value you want to store in the Message object when the window is closed. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.CloseWithReturn(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBString)">
            <summary>
            Closes a window and stores a return value in the Message object. You should use CloseWithReturn only for response windows.
            </summary>
            <param name="o">The name of the window you want to close.</param>
            <param name="r">The value you want to store in the Message object when the window is closed. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Open``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a window object of a known datatype
            </summary>
            <typeparam name="T0">the type of the window to be open</typeparam>
            <param name="o">the window to be open</param>
            <param name="n">class name of the parent window</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, Open returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Open``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype
            </summary>
            <typeparam name="T0">the type of the window to be open</typeparam>
            <param name="o">the window to be open</param>
            <param name="n">class name of the parent window</param>
            <param name="p">parent window </param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, Open returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Open``1(``0@,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype
            </summary>
            <typeparam name="T0"> the type of the window to be open</typeparam>
            <param name="o">the window to be open</param>
            <param name="p">the parent window</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, Open returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Open``1(``0@)">
            <summary>
            Opens a window object of a known datatype
            </summary>
            <typeparam name="T0"> the type of the window to be opened</typeparam>
            <param name="w">the window to be opened</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, Open returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="typeName">A string whose value is the datatype of the window you want to open.</param>
            <param name="frame">he name of an MDI frame window.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="typeName">A string whose value is the datatype of the window you want to open.</param>
            <param name="frame">he name of an MDI frame window.</param>
            <param name="position">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="typeName">A string whose value is the datatype of the window you want to open.</param>
            <param name="parent">he name of an MDI frame window.</param>
            <param name="position">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="ao">A value of the ArrangeOpen enumerated datatype specifying how you want the sheet arranged in the MDI frame in relation to other sheets when it is opened</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="frame">he name of an MDI frame window.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="frame">he name of an MDI frame window.</param>
            <param name="position">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheet``1(``0@,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu.
            </summary>
            <typeparam name="T0">PBWindow type</typeparam>
            <param name="sheet">The name of any window variable that is not an MDI frame window. </param>
            <param name="frame">he name of an MDI frame window.</param>
            <param name="position">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="ao">A value of the ArrangeOpen enumerated datatype specifying how you want the sheet arranged in the MDI frame in relation to other sheets when it is opened</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="n">A string whose value is the datatype of the window you want to open. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenSheetWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBArrangeOpenValue)">
            <summary>
            Opens a sheet within an MDI (multiple document interface) frame window and creates a menu item for selecting the sheet on the specified menu, as OpenSheet does. 
            OpenSheetWithParm also stores a parameter in the system's Message object so that it is accessible to the opened sheet.
            </summary>
            <typeparam name="T0">The PBWinodow type</typeparam>
            <param name="o">The name of any window variable that is not an MDI frame window. OpenSheetWithParm places a reference to the open sheet in sheetrefvar.</param>
            <param name="a">The parameter you want to store in the Message object when the sheet is opened. </param>
            <param name="p">The name of the MDI frame window in which you want to open this sheet.</param>
            <param name="w">The number of the menu item (in the menu associated with the sheet) to which you want to append the names of the open sheets. </param>
            <param name="t">A value of the ArrangeOpen enumerated datatype specifying how you want the sheets arranged in the MDI frame when they are opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenSheetWithParm returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="n">The name of the window </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.OpenWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Opens a window object of a known datatype. OpenWithParm displays the window and makes 
            all its properties and controls available to scripts. It also stores a parameter in the system's Message object.
            </summary>
            <typeparam name="T0">The PBWindow type</typeparam>
            <param name="o">The name of the window you want to display. </param>
            <param name="a">The parameter you want to store in the Message object when the window is opened. </param>
            <param name="p">The window you want make the parent of the child or pop-up window you are opening. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryDelete(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes a key or a value for a key in the Windows system registry.
            </summary>
            <param name="k">A string whose value is the key in the system registry you want to delete or whose value you want to delete.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryGet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryGet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryGet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBULong@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryGet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="c">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryGet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryKeys(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">>A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistrySet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistrySet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistrySet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistrySet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBRegistryValueTypeValue,Sybase.PowerBuilder.PBArray)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="t">A value of the RegistryValueType enumerated datatype identifying the datatype of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistrySet(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A string containing the name of a value in the registry. </param>
            <param name="v">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RegistryValues(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Gets a value from the Windows system registry.
            </summary>
            <param name="k">A string whose value names the key in the system registry whose value you want.</param>
            <param name="n">A variable corresponding to the datatype of valuetype in which you want to store the value obtained from
            the system registry for the specified key and value name.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.DraggedObject">
            <summary>
            Returns a reference to the control that triggered a drag event.
            </summary>
            <returns>DragObject, a special datatype that includes all draggable controls (
            all the controls but no drawing objects). Returns a reference to the control that is currently being dragged.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetApplication">
            <summary>
            Gets the handle of the current Application object so you can get and set properties of the application.
            </summary>
            <returns>Application. Returns the handle of the current application object.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetEnvironment``1(``0@)">
            <summary>
            Gets information about the operating system, processor, and screen display of the system.
            </summary>
            <typeparam name="T0">PBEnvironment type </typeparam>
            <param name="env">The name of the Environment object that will hold the information about the environment</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If environmentinfo is null, GetEnvironment returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFocus">
            <summary>
            Determines the control that currently has focus.
            </summary>
            <returns>Returns the control that currently has focus. Returns an invalid control reference if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Handle(Sybase.PowerBuilder.WPF.PBApplication,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Obtains the Windows handle of a PowerBuilder object. You can get the handle of the 
            application, a window, or a control, but not a drawing object.
            </summary>
            <param name="a">The name of the PowerBuilder object for which you want the handle. </param>
            <param name="p">A boolean indicating whether you want the handle of the previous instance of an application. Y</param>
            <returns> Returns the handle of objectname. If objectname is an application and  previous is true, Handle always returns 0.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Handle(Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            Obtains the Windows handle of a PowerBuilder object. You can get the handle of the 
            application, a window, or a control, but not a drawing object.
            </summary>
            <param name="p">A boolean indicating whether you want the handle of the previous instance of an application. Y</param>
            <returns> Returns the handle of objectname. If objectname is an application and  previous is true, Handle always returns 0.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Idle(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets a timer so that PowerBuilder triggers an Application Idle event 
            when there has been no user activity for a specified number of seconds.
            
            The timer is reset when any of the following activities occur:
            ?A mouse movement or mouse click in any window of the application
            ?Any keyboard activity when a window of the PowerBuilder application 
            is current
            ?A mouse click or any mouse movement over the icon when a PowerBuilder 
            application is minimized
            ?Any retrieval on a visible DataWindow that causes the edit control to 
            be painted
            ?Any keyboard activity when the PowerBuilder application is minimized 
            and is current (its name is highlighted)
            </summary>
            <param name="s">The number of seconds of user inactivity allowed before PowerBuilder 
            triggers an Application Idle event. A value of 0 terminates Idle detection.</param>
            <returns>Returns 1 if it starts the timer, and -1 if it cannot start the timer or n is 0 and the timer has not been started. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Restart">
            <summary>
            Stops the execution of all scripts, closes all windows (without executing 
            the scripts for the Close events), commits and disconnects from the database, 
            restarts the application, and executes the application-level script for the 
            Open event
            
            Returns:
            Integer. Returns 1 if it succeeds and -1 if it fails. The return value is 
            usually not used
            </summary>
            <returns>Returns 1 if it succeeds and -1 if it fails. The return value is usually not used.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Timer(Sybase.PowerBuilder.PBDouble)">
            <summary>
            Causes a Timer event in a window to occur repeatedly at the specified interval. When you call Timer, 
            it starts a timer. When the interval is over, PowerBuilder triggers the Timer event and resets the timer.
            </summary>
            <param name="v">The number of seconds that you want between Timer events.</param>
            <returns>Returns 1 if succeeds and -1 if an error occurs. If any argument's value is null, Timer returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Timer(Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Causes a Timer event in a window to occur repeatedly at the specified interval. When you call Timer, 
            it starts a timer. When the interval is over, PowerBuilder triggers the Timer event and resets the timer.
            </summary>
            <param name="v">The number of seconds that you want between Timer events.</param>
            <param name="o">The window in which you want the timer event to be triggered. The window must be an open window.</param>
            <returns>Returns 1 if succeeds and -1 if an error occurs. If any argument's value is null, Timer returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions._timer_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            helper implementation of timer 
            </summary>
            <param name="sender">the object sender the timer event </param>
            <param name="e">the arguments </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintDataWindow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.IPBDataWindowBase)">
            <summary>
            Prints the contents of a DataWindow control or DataStore as a print job.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job</param>
            <param name="d">The name of the DataWindow control, child DataWindow, or DataStore containing the DataWindow object you want to print</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintGetPrinter">
            <summary>
            Gets the current printer name.
            </summary>
            <returns>Returns current printer information in a tab-delimited format: printername ~t drivername ~t port.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintGetPrinters">
            <summary>
            Gets the list of available printers.
            </summary>
            <returns>Each printer is listed in the string in the format printername ~t drivername ~t port ~n.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintScreen(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints the screen image as part of a print job.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">An integer whose value is the x coordinate on the page, in thousandths of an inch, of the upper-left corner of the screen image.</param>
            <param name="y">An integer whose value is the y coordinate on the page, in thousandths of an inch, of the upper-left corner of the screen image.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, PrintScreen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintScreen(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints the screen image as part of a print job.
            </summary>
            <param name="j">The number the PrintOpen function assigns to the print job.</param>
            <param name="x">An integer whose value is the x coordinate on the page, in thousandths of an inch, of the upper-left corner of the screen image.</param>
            <param name="y">An integer whose value is the y coordinate on the page, in thousandths of an inch, of the upper-left corner of the screen image.</param>
            <param name="w">The integer width of the printed screen in thousandths of an inch. If you omit width, PowerBuilder prints the screen at its original width. If you specify width, you must also specify height.</param>
            <param name="h">The integer height of the printed screen in thousandths of an inch. If you omit height, PowerBuilder prints the screen at its original height.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, PrintScreen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintSend(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Obsolete function      PrintSend is an obsolete function and is provided for 
            backward compatibility only. The ability to use this function is dependent 
            upon the printer driver
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">A string you want to send to the printer. In the string, use ASCII values for nonprinting characters.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, PrintSend returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintSend(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obsolete function      PrintSend is an obsolete function and is provided for 
            backward compatibility only. The ability to use this function is dependent 
            upon the printer driver
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">A string you want to send to the printer. In the string, use ASCII values for nonprinting characters.</param>
            <param name="r">An ASCII value (1 to 255) that you want to use to represent the number zero in string.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, PrintSend returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintSetPrinter(Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the printer to use for the next print function call. This function does not affect open jobs.
            </summary>
            <param name="p">String for the name of the printer you want to use.</param>
            <returns>Returns 1 if the function succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintSetupPrinter">
            <summary>
            Displays the printer setup dialog box
            </summary>
            <returns>Returns 1 if the function succeeds, 0 for cancel, -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintSetUp">
            <summary>
            Calls the Printer Setup dialog box provided by the system printer driver and lets the user specify settings for the printer.
            </summary>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints a single line of text starting at the specified coordinates.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">A string whose value is the text you want to print.</param>
            <param name="x">An integer specifying the x coordinate in thousandths of an inch of the beginning of the text.</param>
            <param name="y">An integer specifying the y coordinate in thousandths of an inch of the beginning of the text.</param>
            <returns>Integer.Returns the x coordinate of the new cursor location (that is, the value of the parameter x plus the width of the text) if it succeeds. PrintText returns -1 if an error occurs. If any argument's value is null, PrintText returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Prints a single line of text starting at the specified coordinates
            
            NOTE:
            PrintText does change the position of the print cursor, unlike the other 
            print functions for which you specify coordinates. The print cursor moves 
            to the end of the printed text. PrintText also returns the x coordinate 
            of the print cursor. You can use the return value to determine where to 
            begin printing additional text.
            PrintText does not change the print cursor's y coordinate, which is its 
            vertical position on the page.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">A string whose value is the text you want to print.</param>
            <param name="x">An integer specifying the x coordinate in thousandths of an inch of the beginning of the text.</param>
            <param name="y">An integer specifying the y coordinate in thousandths of an inch of the beginning of the text.</param>
            <param name="n">The number (1 to 8) of a font defined for the job by using the PrintDefineFont function or 0 (the default font for the printer). If you omit fontnumber, the text prints in the current font for the print job.</param>
            <returns>Integer. Returns the x coordinate of the new cursor location 
            (that is, the value of the parameter x plus the width of the text) if 
            it succeeds. PrintText returns -1 if an error occurs. If any argument's 
            value is null, PrintText returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            String print functions:
            Sends one or more lines of text as part of a print job that you have opened with the 
            PrintOpen function. You can specify tab settings before or after the text. The tab 
            settings control the text's horizontal position on the page.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">The string you want to print. If the string includes carriage return-newline 
            character pairs (~r~n), the string will print on multiple lines. However, the initial 
            tab position is ignored on subsequent lines.</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, Print returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            See Print (PBLong j, PBInt t1, PBString s, PBInt t2)
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="s">The string you want to print. If the string includes carriage return-newline 
            character pairs (~r~n), the string will print on multiple lines. However, the initial 
            tab position is ignored on subsequent lines.</param>
            <param name="n">The number (1 to 8) of a font defined for the job by using the PrintDefineFont function or 0 (the default font for the printer). If you omit fontnumber, the text prints in the current font for the print job.</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            String print functions:
            Sends one or more lines of text as part of a print job that you have opened with the 
            PrintOpen function. You can specify tab settings before or after the text. The tab 
            settings control the text's horizontal position on the page.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="t1"> (optional)	The position, measured from the left edge of the print 
            area in thousandths of a inch, to which the print cursor should move before string is 
            printed. If the print cursor is already at or beyond the position or if you omit tab1, 
            Print starts printing at the current position of the print cursor.</param>
            <param name="s">The string you want to print. If the string includes carriage return-newline 
            character pairs (~r~n), the string will print on multiple lines. However, the initial 
            tab position is ignored on subsequent lines.</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, Print returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Print(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            String print functions:
            Sends one or more lines of text as part of a print job that you have opened with the 
            PrintOpen function. You can specify tab settings before or after the text. The tab 
            settings control the text's horizontal position on the page.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="t1"> (optional)	The position, measured from the left edge of the print 
            area in thousandths of a inch, to which the print cursor should move before string is 
            printed. If the print cursor is already at or beyond the position or if you omit tab1, 
            Print starts printing at the current position of the print cursor.</param>
            <param name="s">The string you want to print. If the string includes carriage return-newline 
            character pairs (~r~n), the string will print on multiple lines. However, the initial 
            tab position is ignored on subsequent lines.</param>
            <param name="t2"> (optional)	The new position, measured from the left edge of the 
            print area in thousandths of a inch, of the print cursor after string printed. If the 
            print cursor is already at or beyond the specified position, Print ignores tab2 and 
            the print cursor remains at the end of the text. If you omit tab2, Print moves the 
            print cursor to the beginning of a new line.</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, Print returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintBitmap(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Writes a bitmap at the specified location on the current page.
            
            USAGE: PrintBitmap does not change the position of the print cursor, which remains where 
            it was before the function was called. In general, print functions in which you specify 
            coordinates do not affect the print cursor (see the functions listed in See also).
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="f">A string whose value is the file name of the bitmap image</param>
            <param name="x">An integer whose value is the x coordinate (in thousandths of an inch) on 
            the page of the bitmap image.</param>
            <param name="y">An integer whose value is the y coordinate (in thousandths of an inch) on 
            the page of the bitmap image</param>
            <param name="w">The integer width of the bitmap image in thousandths of an inch. If width 
            is 0, PowerBuilder uses the original width of the image</param>
            <param name="h">The integer height of the bitmap image in thousandths of an inch. If 
            height is 0, PowerBuilder uses the original height of the image</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, PrintBitmap returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintRoundRect(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Draws a white rectangle with rounded corners and a border of the specified thickness 
            on the print page.
            
            NOTE:
            The PrintOval, PrintRect, and PrintRoundRect functions draw filled shapes. To print 
            other shapes or text inside the shapes, draw the filled shape first and then add text 
            and other shapes or lines inside it. If you draw the filled shape after other printing 
            functions, it will cover anything inside it. For example, to draw a border around text 
            and lines, draw the oval or rectangular border first and then use PrintLine and PrintText 
            to position the lines and text inside.
            PrintRoundRect does not change the position of the print cursor, which remains where 
            it was before the function was called. In general, print functions in which you specify 
            coordinates do not affect the print cursor.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="x">An integer specifying the x coordinate in thousandths of an inch of the upper-left corner of the rectangle</param>
            <param name="y">An integer specifying the y coordinate in thousandths of an inch of the upper-left corner of the rectangle</param>
            <param name="w">An integer specifying the rectangle's width in thousandths of an inch</param>
            <param name="h">An integer specifying the rectangle's height in thousandths of an inch</param>
            <param name="x1">An integer specifying the x radius of the corner rounding</param>
            <param name="y1">An integer specifying the y radius of the corner rounding</param>
            <param name="t">An integer specifying the thickness of the rectangle's border line in thousandths of an inch</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, PrintRoundRect returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintLine(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Draws a line of a specified thickness between the specified endpoints on the current 
            print page
            
            NOTE:
            PrintLine does not change the position of the print cursor, which remains where it 
            was before the function was called
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="x1">An integer specifying the x coordinate in thousandths of an inch of the start of the line</param>
            <param name="y1">An integer specifying the y coordinate in thousandths of an inch of the start of the line</param>
            <param name="x2">An integer specifying the x coordinate in thousandths of an inch of the end of the line</param>
            <param name="y2">An integer specifying the y coordinate in thousandths of an inch of the end of the line</param>
            <param name="t">An integer specifying the thickness of the line in thousandths of an inch</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, PrintLine returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PrintOval(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Draws a white oval outlined in a line of the specified thickness on the print page.
            
            NOTE:
            The PrintOval, PrintRect, and PrintRoundRect functions draw filled shapes. To print 
            other shapes or text inside the shapes, draw the filled shape first and then add 
            text and other shapes or lines inside it. If you draw the filled shape after other 
            printing functions, it will cover anything inside it. For example, to draw a border 
            around text and lines, draw the oval or rectangular border first and then use 
            PrintLine and PrintText to position the lines and text inside.
            PrintOval does not change the position of the print cursor, which remains where it 
            was before the function was called. In general, print functions in which you specify 
            coordinates do not affect the print cursor.
            </summary>
            <param name="j">The number the PrintOpen function assigned to the print job.</param>
            <param name="x">An integer specifying the x coordinate in thousandths of an inch of the upper-left corner of the oval's bounding box</param>
            <param name="y">An integer specifying the y coordinate in thousandths of an inch of the upper-left corner of the oval's bounding box</param>
            <param name="w">An integer specifying the width in thousandths of an inch of the oval's bounding box</param>
            <param name="h">An integer specifying the height in thousandths of an inch of the oval's bounding box</param>
            <param name="t">An integer specifying the thickness of the line that outlines the oval in thousandths of an inch</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. If any 
            argument's value is null, PrintOval returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GlobalFree(System.IntPtr)">
            <summary>
             Frees the specified global memory object and invalidates its handle.
            </summary>
            <param name="hmem">memory handle </param>
            <returns>
            If the function succeeds, the return value is NULL.
            If the function fails, the return value is equal to a handle to the global memory object. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GlobalLock(System.IntPtr)">
            <summary>
            Locks a global memory object and returns a pointer to the first byte of the object's memory block.
            </summary>
            <param name="hmem">Handle to the global memory object</param>
            <returns>
            If the function succeeds, the return value is a pointer to the first byte of the memory block.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            popup a message box
            </summary>
            <param name="c"> A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBIconValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value. </param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <param name="d">The number of the button you want to be the default button. The default is 1. If you specify a number larger than the number of buttons displayed, </param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            popup a message box
            </summary>
            <param name="c"> A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBIconValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value. </param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <param name="d">The number of the button you want to be the default button. The default is 1. If you specify a number larger than the number of buttons displayed, </param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLongLong)">
            <summary>
            popup a message box
            </summary>
            <param name="c"> A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLongLong,Sybase.PowerBuilder.PBIconValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value. </param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLongLong,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLongLong,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <param name="d">The number of the button you want to be the default button. The default is 1. If you specify a number larger than the number of buttons displayed, </param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            popup a message box
            </summary>
            <param name="c"> A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBIconValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba </param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value. </param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.MessageBox(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBIconValue,Sybase.PowerBuilder.PBButtonValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            popup a message box
            </summary>
            <param name="c">A string specifying the title of the message box, which appears in the box's title ba</param>
            <param name="t">The text you want to display in the message box. The text can be a numeric datatype, a string, or a boolean value.</param>
            <param name="i">A value of the Icon enumerated datatype indicating the icon you want to display on the left side of the message box.</param>
            <param name="b">A value of the Button enumerated datatype indicating the set of CommandButtons you want to display at the bottom of the message box. The buttons are numbered in the order listed in the enumerated datatype.</param>
            <param name="d">The number of the button you want to be the default button. The default is 1. If you specify a number larger than the number of buttons displayed, </param>
            <returns>Returns the number of the selected button (1, 2, or 3) if it succeeds and -1 if an error occurs. If any argument's value is null, MessageBox returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetActiveControl">
            <summary>
            Get the activate control
            </summary>
            <returns>the activate control</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.IsChmHelp(System.String)">
            <summary>
            To determine if the help file is a chm format file.
            </summary>
            <param name="f">The help file name</param>
            <returns>True if the file is chm extension</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.IsWinHelp(System.String,System.String@)">
            <summary>
            Is winHelp 
            </summary>
            <param name="f">help file name</param>
            <param name="ext">the extension </param>
            <returns>true or false indicating whether the file is a WinHelp file or not</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ShowHelp(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBHelpCommandValue)">
            <summary>
            Provides access to a Microsoft Windows-based Help system or to compiled HTML Help files that you have 
            created for your PowerBuilder application. 
            </summary>
            <param name="f">A string whose value is the name of the compiled HLP file or the CHM (HTML Help) file.</param>
            <param name="c">A value of the HelpCommand enumerated type. </param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. ShowHelp returns -1 if you specify typeid when 
            helpcommand is Finder! or Index!. If any argument's value is null, ShowHelp returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ShowHelp(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBHelpCommandValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Provides access to a Microsoft Windows-based Help system or to compiled HTML Help files that you have 
            created for your PowerBuilder application. 
            </summary>
            <param name="f">A string whose value is the name of the compiled HLP file or the CHM (HTML Help) file.</param>
            <param name="c">A value of the HelpCommand enumerated type. </param>
            <param name="i">A number identifying the topic if helpcommand is Topic! or a string whose value is a keyword of a help topic if helpcommand is Keyword!.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. ShowHelp returns -1 if you specify typeid when 
            helpcommand is Finder! or Index!. If any argument's value is null, ShowHelp returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ShowHelp(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBHelpCommandValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Provides access to a Microsoft Windows-based Help system or to compiled HTML Help files that you have 
            created for your PowerBuilder application. 
            </summary>
            <param name="f">A string whose value is the name of the compiled HLP file or the CHM (HTML Help) file.</param>
            <param name="c">A value of the HelpCommand enumerated type. </param>
            <param name="k">A number identifying the topic if helpcommand is Topic! or a string whose value is a keyword of a help topic if helpcommand is Keyword!.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. ShowHelp returns -1 if you specify typeid when 
            helpcommand is Finder! or Index!. If any argument's value is null, ShowHelp returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ShowPopupHelp(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBLong)">
            <summary>
            Displays pop-up help for the specified control.
            </summary>
            <param name="h">String for the Help file name to be used</param>
            <param name="c">Dragobject for which the pop-up help is displayed</param>
            <param name="l">Long for the context ID number</param>
            <returns>Returns 1 if the function succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetHtmlHelpCmd(Sybase.PowerBuilder.PBHelpCommand)">
            <summary>
            Get htnml Help Command
            </summary>
            <param name="c"> command string </param>
            <returns>the command code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetWinHelpCmd(Sybase.PowerBuilder.PBHelpCommand)">
            <summary>
            Get Win Help Command
            </summary>
            <param name="c"> command string </param>
            <returns>the command code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Is3ParamHelpCommand(Sybase.PowerBuilder.PBHelpCommand)">
            <summary>
            If is a 3 parameter help command
            </summary>
            <param name="c"> command string </param>
            <returns>the command code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Beep(Sybase.PowerBuilder.PBInt)">
            <summary>
            Causes the computer to beep up to 10 times.
            </summary>
            <param name="count">The number of times you want the computer to beep. If n is greater than 10, the computer beeps 10 times.</param>
            <returns>Returns 1 if it succeeds and -1 if it fails. If n is null, Beep returns null. The return value usually is not used.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ChooseColor(Sybase.PowerBuilder.PBLong@)">
            <summary>
            Displays the standard color selection dialog box.
            </summary>
            <param name="l">A long passed by reference that represents the color selected in the dialog box</param>
            <returns> Returns 1 if the function succeeds, 0 if the user selects cancel (or the dialog box is closed),
            -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ChooseColor(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Displays the standard color selection dialog box.
            </summary>
            <param name="l">A long passed by reference that represents the color selected in the dialog box</param>
            <param name="c">A long array of custom colors passed by reference to the color selection dialog box</param>
            <returns> Returns 1 if the function succeeds, 0 if the user selects cancel (or the dialog box is closed),
            -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFolder(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Displays a folder selection dialog box.
            </summary>
            <param name="t">String for a title that displays above a list box containing a tree view for folder selection.</param>
            <param name="d">String for the directory name passed by reference to the folder selection dialog box.</param>
            <returns>Returns 1 if the function succeeds, 0 if the user selects cancel (or the dialog box is closed), -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.PopulateError(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Fills in the Error object without causing a SystemError event.
            </summary>
            <param name="i">The integer to be stored in the number property of the Error object</param>
            <param name="s">The string to be stored in text property of the Error object</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. The return value is usually not used.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Post(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Adds a message to the message queue for a window, either a PowerBuilder window or window of another application.
            </summary>
            <param name="h">A long whose value is the system handle of a window (that you have created in
            PowerBuilder or another application) to which you want to post a message.</param>
            <param name="m">An UnsignedInteger whose value is the system message number of the message you want to post.</param>
            <param name="w">A long whose value is the integer value of the message.</param>
            <param name="l">he long value of the message or a string.</param>
            <returns>If any argument's value is null, Post returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Post(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a message to the message queue for a window, either a PowerBuilder window or window of another application.
            </summary>
            <param name="h">A long whose value is the system handle of a window (that you have created in
            PowerBuilder or another application) to which you want to post a message.</param>
            <param name="m">An UnsignedInteger whose value is the system message number of the message you want to post.</param>
            <param name="w">A long whose value is the integer value of the message.</param>
            <param name="s">he long value of the message or a string.</param>
            <returns>If any argument's value is null, Post returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Run(Sybase.PowerBuilder.PBString)">
            <summary>
            Runs the specified application program.
            </summary>
            <param name="n">A string whose value is the file name of the program you want to execute. </param>
            <returns>Returns 1 if it is successful and -1 if an error occurs. If any argument's value is null, Run returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Run(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBWindowStateValue)">
            <summary>
            Runs the specified application program.
            </summary>
            <param name="n">A string whose value is the file name of the program you want to execute. </param>
            <param name="s">A value of the WindowState enumerated datatype indicating the state in which you want to run the program.</param>
            <returns>Returns 1 if it is successful and -1 if an error occurs. If any argument's value is null, Run returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Send(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Sends a message to a window so that it is executed immediately.
            </summary>
            <param name="h">A long whose value is the system handle of a window (that you have created in
            PowerBuilder or another application) to which you want to post a message.</param>
            <param name="m">An UnsignedInteger whose value is the system message number of the message you want to send.</param>
            <param name="w">A long whose value is the integer value of the message.</param>
            <param name="l">he long value of the message or a string.</param>
            <returns>If any argument's value is null, Send returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Send(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Sends a message to a window so that it is executed immediately.
            </summary>
            <param name="h">A long whose value is the system handle of a window (that you have created in
            PowerBuilder or another application) to which you want to post a message.</param>
            <param name="m">An UnsignedInteger whose value is the system message number of the message you want to send.</param>
            <param name="w">A long whose value is the integer value of the message.</param>
            <param name="s">he long value of the message or a string.</param>
            <returns>If any argument's value is null, Send returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SetPointer(Sybase.PowerBuilder.PBPointerValue)">
            <summary>
            Sets the mouse pointer to the specified shape.
            </summary>
            <param name="p">A value of the Pointer enumerated datatype indicating the type of pointer you want.</param>
            <returns>Returns the enumerated type of the pointer it replaced so the script can restore it, 
            if necessary. If type is null, SetPointer returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SignalError">
            <summary>
            Causes a SystemError event at the application level.
            </summary>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. The return value is usually not used.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SignalError(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Causes a SystemError event at the application level.
            </summary>
            <param name="i">The integer (stored in the number property of the Error object) to be used in the message object</param>
            <param name="s">The string (stored in the text property of the Error object) to be used in the message object</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. The return value is usually not used.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.StartServerDDE(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,System.Object[])">
            <summary>
            Not supported
            </summary>
            <param name="o">The name of the server window. The default is the current window.</param>
            <param name="a">The DDE name for your application.</param>
            <param name="t">A string whose value is the basic data grouping the DDE client application references.</param>
            <param name="args">A comma-separated list of one or more strings (data within topic) that specify what
            your DDE server application supports (for example, "Table1","Table2").</param>
            <returns>Returns 1 if it succeeds. If an error occurs, StartServerDDE returns -1, meaning the your
              application is already started as a server. If any argument's value is null, StartServerDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.StopServerDDE(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Causes your application to stop acting as a DDE server application. Any subsequent requests from a DDE client application fail.
            </summary>
            <param name="o">The name of the server window. T</param>
            <param name="a">The DDE name for your PowerBuilder application.</param>
            <param name="t">A string whose value is the topic you declared when you called StartServerDDE.</param>
            <returns>
            Returns 1 if it succeeds. If an error occurs, StopServerDDE returns -1, meaning the DDE server was not started.
            If any argument's value is null, StopServerDDE returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions._DotNet2PBCursor(System.Windows.Forms.Cursor)">
            <summary>
            From dot net cursor to pb cursor
            </summary>
            <param name="cursor"> the name of the cursor </param>
            <returns>dot net cursor</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions._PBCursor2DotNet(Sybase.PowerBuilder.PBPointer)">
            <summary>
            From PB cursor to dotnet cursor
            </summary>
            <param name="p"> the pb cursor to be transformmed </param>
            <returns>dot net cursor </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ChangeDirectory(Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the current directory.
            </summary>
            <param name="d">String for the name of the directory you want to set as the current directory</param>
            <returns>Returns 1 if the function succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.CreateDirectory(Sybase.PowerBuilder.PBString)">
            <summary>
            Creates a directory.
            </summary>
            <param name="d">String for the name of the directory you want to create</param>
            <returns>Returns 1 if the function succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.DirectoryExists(Sybase.PowerBuilder.PBString)">
            <summary>
            Determines if the named directory exists.
            </summary>
            <param name="d">String for the name of the directory you want to verify as existing</param>
            <returns>Returns true if the directory exists. Returns false if the directory does not exist 
            or if you pass a file name in the directoryname argument</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileClose(Sybase.PowerBuilder.PBInt)">
            <summary>
            Closes the file associated with the specified file number. The file number was assigned to the file with the FileOpen function.
            </summary>
            <param name="f">The integer assigned to the file you want to close.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If file# is null, FileClose returns null. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileCopy(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Copies one file to another, optionally overwriting the target file.
            </summary>
            <param name="s">String for the name of the file you want to copy</param>
            <param name="t">String for the name of the file you are copying to</param>
            <returns> Returns values as follows:
                1 - Success
                -1 - Error opening sourcefile
                -2 - Error writing targetfile
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileCopy(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Copies one file to another, optionally overwriting the target file.
            </summary>
            <param name="s">String for the name of the file you want to copy</param>
            <param name="t">String for the name of the file you are copying to</param>
            <param name="a">Boolean specifying whether to replace the target file (true) or not (false)</param>
            <returns> Returns values as follows:
                1 - Success
                -1 - Error opening sourcefile
                -2 - Error writing targetfile
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileDelete(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes the named file.
            </summary>
            <param name="f">A string whose value is the name of the file you want to delete</param>
            <returns> Returns true if it succeeds, false if an error occurs. If filename is null, FileDelete returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileEncoding(Sybase.PowerBuilder.PBString)">
            <summary>
            Checks the encoding of the specified file. 
            </summary>
            <param name="fileName">The name of the file you want to test for encoding type</param>
            <returns>A value of the enumerated datatype Encoding.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileExists(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports whether the specified file exists.
            </summary>
            <param name="f">A string whose value is the name of a file</param>
            <returns> Returns true if the file exists, false if it does not exist. If  filename is null, 
            FileExists returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileLength(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the length of a file whose size does not exceed 2GB in bytes.
            </summary>
            <param name="f">A string whose value is the name of the file for which you want to know the length.</param>
            <returns>Returns the length in bytes of the file identified by filename. If the file does not exist, FileLength returns -1. 
            If filename is null, FileLength returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileLength64(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the length of a file of any size in bytes.
            </summary>
            <param name="fileName">A string whose value is the name of the file for which you want to know the length. If filename is not on the 
            current application library search path, you must specify the fully qualified name.</param>
            <returns>Returns the length in bytes of the file identified by filename. If the file does not exist, 
            FileLength64 returns -1. If filename is null, FileLength64 returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileMove(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Moves a file.
            </summary>
            <param name="s">String for the name of the file you want to move</param>
            <param name="t">String for the name of the location you are moving the file</param>
            <returns>
             Returns values as follows:
              1 - Success
             -1 - Error opening sourcefile
             -2 - Error writing targetfile
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileModeValue)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <param name="m">A value of the FileMode enumerated type that specifies how the end of a file read or file write is determined. </param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileModeValue,Sybase.PowerBuilder.PBFileAccessValue)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <param name="m">A value of the FileMode enumerated type that specifies how the end of a file read or file write is determined. </param>
            <param name="a">(optional)	A value of the FileAccess enumerated type that specifies whether the file is opened for reading or writing. </param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileModeValue,Sybase.PowerBuilder.PBFileAccessValue,Sybase.PowerBuilder.PBFileLockValue)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <param name="m">A value of the FileMode enumerated type that specifies how the end of a file read or file write is determined. </param>
            <param name="a">(optional)	A value of the FileAccess enumerated type that specifies whether the file is opened for reading or writing. </param>
            <param name="l">A value of the FileLock enumerated type specifying whether others have access to the opened file. </param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileModeValue,Sybase.PowerBuilder.PBFileAccessValue,Sybase.PowerBuilder.PBFileLockValue,Sybase.PowerBuilder.PBWriteModeValue)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <param name="m">A value of the FileMode enumerated type that specifies how the end of a file read or file write is determined. </param>
            <param name="a">(optional)	A value of the FileAccess enumerated type that specifies whether the file is opened for reading or writing. </param>
            <param name="l">A value of the FileLock enumerated type specifying whether others have access to the opened file. </param>
            <param name="w">A value of the WriteMode enumerated datatype.</param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileOpen(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileModeValue,Sybase.PowerBuilder.PBFileAccessValue,Sybase.PowerBuilder.PBFileLockValue,Sybase.PowerBuilder.PBWriteModeValue,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Opens the specified file for reading or writing and assigns it a unique integer file number.
            </summary>
            <param name="f">A string whose value is the name of the file you want to open.</param>
            <param name="m">A value of the FileMode enumerated type that specifies how the end of a file read or file write is determined. </param>
            <param name="a">(optional)	A value of the FileAccess enumerated type that specifies whether the file is opened for reading or writing. </param>
            <param name="l">A value of the FileLock enumerated type specifying whether others have access to the opened file. </param>
            <param name="w">A value of the WriteMode enumerated datatype.</param>
            <param name="e">Character encoding of the file you want to create. </param>
            <returns> Returns the file number assigned to filename if it succeeds and -1 if an error occurs. If any argument's value is null, 
            FileOpen returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileRead(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Reads data from the file associated with the specified file number, which was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when it was opened</param>
            <param name="b">The name of the string or blob variable into which you want to read the data</param>
            <returns>Returns the number of bytes read. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileRead(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Reads data from the file associated with the specified file number, which was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when it was opened</param>
            <param name="s">The name of the string or blob variable into which you want to read the data</param>
            <returns>Returns the number of bytes read. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileReadEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Reads data from the file associated with the specified file number, which was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when it was opened</param>
            <param name="b">The name of the string or blob variable into which you want to read the data</param>
            <returns>Returns the number of bytes read. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileReadEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBULong)">
            <summary>
            Reads data from the file associated with the specified file number, which was assigned to the file with the FileOpen function.
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="b">The name of the string or blob variable into which you want to read the data.</param>
            <param name="l">In text or stream mode, the number of bytes a retrieve requires. </param>
            <returns>Returns the number of bytes read. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileReadEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Reads data from the file associated with the specified file number, which was assigned to the file with the FileOpen function.
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="s">The name of the string or blob variable into which you want to read the data.</param>
            <returns>Returns the number of bytes read. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileSeek(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLong)">
            <summary>
            Moves the file pointer to the specified position in a file whose size does not exceed 2GB.
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="p">A long whose value is the new position of the file pointer relative to the position specified in origin, in bytes.</param>
            <returns>Returns the file position after the seek operation has been performed. If any argument's value is null, FileSeek returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileSeek(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBSeekTypeValue)">
            <summary>
            Moves the file pointer to the specified position in a file whose size does not exceed 2GB.
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="p">A long whose value is the new position of the file pointer relative to the position specified in origin, in bytes.</param>
            <param name="s">The value of the SeekType enumerated datatype specifying where you want to start the seek.</param>
            <returns>Returns the file position after the seek operation has been performed. If any argument's value is null, FileSeek returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileSeek64(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLongLong)">
            <summary>
            Moves the file pointer to the specified position in a file of any size. 
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="p">A long whose value is the new position of the file pointer relative to the position specified in origin, in bytes.</param>
            <returns>Returns the file position after the seek operation has been performed. If any argument's value is null, FileSeek returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileSeek64(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLongLong,Sybase.PowerBuilder.PBSeekTypeValue)">
            <summary>
            Moves the file pointer to the specified position in a file of any size. 
            </summary>
            <param name="f">The integer assigned to the file when it was opened.</param>
            <param name="p">A long whose value is the new position of the file pointer relative to the position specified in origin, in bytes.</param>
            <param name="s">The value of the SeekType enumerated datatype specifying where you want to start the seek.</param>
            <returns>Returns the file position after the seek operation has been performed. If any argument's value is null, FileSeek returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileWrite(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Writes data to the file associated with the specified file number. 
            </summary>
            <param name="f">The integer assigned to the file when the file was opened</param>
            <param name="s">A string or blob whose value is the data you want to write to the file</param>
            <returns>Returns the number of bytes written if it succeeds and it returns -1 if an error occurs. If any argument's value is null, FileWrite returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileWrite(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Writes data to the file associated with the specified file number. 
            </summary>
            <param name="f">The integer assigned to the file when the file was opened</param>
            <param name="s">A string or blob whose value is the data you want to write to the file</param>
            <returns>Returns the number of bytes written if it succeeds and it returns -1 if an error occurs. If any argument's value is null, FileWrite returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileWriteEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob)">
            <summary>
            WWrites data to the file associated with the specified file number. The file number was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when the file was opened</param>
            <param name="s">A string or blob whose value is the data you want to write to the file</param>
            <returns>Returns the number of bytes written if it succeeds and it returns -1 if an error occurs. 
            If any argument's value is null, FileWrite returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileWriteEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBlob,Sybase.PowerBuilder.PBULong)">
            <summary>
            WWrites data to the file associated with the specified file number. The file number was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when the file was opened</param>
            <param name="s">A string or blob whose value is the data you want to write to the file</param>
            <param name="length">In text or stream mode, the number of bytes to be written. The default value is the length of the file.</param>
            <returns>Returns the number of bytes written if it succeeds and it returns -1 if an error occurs. 
            If any argument's value is null, FileWrite returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.FileWriteEx(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            WWrites data to the file associated with the specified file number. The file number was assigned to the file with the FileOpen function. 
            </summary>
            <param name="f">The integer assigned to the file when the file was opened</param>
            <param name="s">A string or blob whose value is the data you want to write to the file</param>
            <returns>Returns the number of bytes written if it succeeds and it returns -1 if an error occurs. 
            If any argument's value is null, FileWrite returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetCurrentDirectory">
            <summary>
            Gets the current directory for your target application.
            </summary>
            <returns>Returns the full path name for the current directory.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBULong)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <param name="o">An unsigned long whose value determines which options are enabled in the dialog box. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBULong)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <param name="o">An unsigned long whose value determines which options are enabled in the dialog box. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileOpenName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Open File dialog box and allows the user to select a file or enter a file name. 
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable in which you want to store the returned path. </param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which 
            multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension. </param>
            <param name="l">A string whose value is a text description of the files to include in the list box and the file mask that you wa
            nt to use to select the displayed files </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <returns>Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. 
            If any argument's value is null, GetFileOpenName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBULong)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <param name="o">An unsigned long whose value determines which options are enabled in the dialog box. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBULong)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <param name="o">An unsigned long whose value determines which options are enabled in the dialog box. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.GetFileSaveName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBArray@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the system's Save File dialog box with the specified file name displayed in the File name box. The user can enter a file name or select a file from the grayed list.
            </summary>
            <param name="t">A string whose value is the title of the dialog box.</param>
            <param name="p">A string variable whose value is the default path name and which stores the returned path.</param>
            <param name="f">A string variable in which the returned file name is stored or an array of string variables in which multiple selected file names are stored. </param>
            <param name="x">A string whose value is a 1- to 3-character default file extension.</param>
            <param name="l">A string whose value is the description of the displayed files and the file extension that you want use to select the displayed files (the filter). </param>
            <param name="d">A string whose value is the initial directory name. </param>
            <returns> Returns 1 if it succeeds, 0 if the user clicks the Cancel button or Windows cancels the display, and -1 if an error occurs. If any argument's value is null,
            GetFileSaveName returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.RemoveDirectory(Sybase.PowerBuilder.PBString)">
            <summary>
            Removes a directory.
            </summary>
            <param name="d">String for the name of the directory you want to remove. I</param>
            <returns>Returns 1 if the function succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBValSchemeTypeValue,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="v">A value of the ValSchemeType enumerated datatype specifying the validation method used by the SAX parser. </param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XMLParseString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Parses an XML file and determines whether the file is well formed or complies with a specified grammar.
            </summary>
            <param name="x">A string whose value is the name of the XML file to be parsed.</param>
            <param name="e">A string buffer to which error messages can be saved. If not specified or set to null, errors display in a message box.</param>
            <param name="ns">A boolean specifying whether name space rules are enforced. When set to true, the parser 
            enforces the constraints and rules defined by the W3C recommendation on namespaces in XML.</param>
            <param name="s">A boolean specifying whether schema support is enabled. </param>
            <param name="sf">A boolean specifying whether schema constraints are checked. When set to true, the schema grammar is checked for errors. </param>
            <returns>
               Returns 0 for success and one of the following negative values if an error occurs:
                -1   Parsing error
                -2   Argument error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Clipboard">
            <summary>
            Retrieves or replaces the contents of the system clipboard with text.
            </summary>
            <returns>Returns the current contents of the clipboard if the clipboard contains text. 
            If string is specified, Clipboard returns the current contents and replaces it with string.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Clipboard(Sybase.PowerBuilder.PBString)">
            <summary>
            Retrieves or replaces the contents of the system clipboard with text.
            </summary>
            <param name="s">A string whose value is the text you want to place in the clipboard. 
            The string replaces the current contents of the clipboard, if any.</param>
            <returns>Returns the current contents of the clipboard if the clipboard contains text. 
            If string is specified, Clipboard returns the current contents and replaces it with string.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.CommandParm">
            <summary>
            Retrieves the argument string, if any, that followed the program name when the application was executed.
            </summary>
            <returns>Returns the application's argument string if it succeeds and the empty string ("") if it fails or 
            if there were no arguments.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ProfileInt(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the integer value of a setting in the profile file for your application.
            </summary>
            <param name="fileName">A string whose value is the name of the profile file. If you do not specify a full path, 
            ProfileInt uses the operating system's standard file search order to find the file.</param>
            <param name="section">A string whose value is the name of a group of related values in the profile file.
            In the file, section names are in square brackets. </param>
            <param name="key">A string specifying the setting name in section whose value you want. The setting name is followed by an equal sign in the file. </param>
            <param name="defaultvalue">An integer value that ProfileInt will return if filename is not found,</param>
            <returns>
             Returns default if filename is not found, section is not found in  filename, or key is not found in section, 
             or the value of key is not an integer. Returns -1 if an error occurs. If any argument's value is null, ProfileInt returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.ProfileString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the string value of a setting in the profile file for your application.
            </summary>
            <param name="fileName">A string whose value is the name of the profile file. If you do not specify a full path, 
            ProfileInt uses the operating system's standard file search order to find the file.</param>
            <param name="section">A string whose value is the name of a group of related values in the profile file.
            In the file, section names are in square brackets. </param>
            <param name="key">A string specifying the setting name in section whose value you want. The setting name is followed by an equal sign in the file. </param>
            <param name="defaultvalue">An integer value that ProfileInt will return if filename is not found,</param>
            <returns>
             Returns the string from key within section within filename. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.SetProfileString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Writes a value in a profile file for a PowerBuilder application.
            </summary>
            <param name="fileName">A string whose value is the name of the profile file. </param>
            <param name="section">A string whose value is the name of a group of related values in the profile file.</param>
            <param name="key">A string whose value is the key in section for which you want to specify a value.</param>
            <param name="keyValue">A string whose value is the value you want to specify for key.</param>
            <returns>Returns 1 when it succeeds and -1 if it fails because filename is not found or cannot be accessed. 
            If any argument's value is null, SetProfileString returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.Yield">
            <summary>
            Yields control to other graphic objects, including objects that are not PowerBuilder objects. 
            Yield checks the message queue and if there are messages in the queue, it pulls them from the queue.
            </summary>
            <returns>Returns true if it pulls messages from the message queue and false if there are no messages.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XWPFPixelsToUnits(System.Int32)">
            <summary>
            convert wpf pixel to pb unit
            </summary>
            <param name="v">x value(wpf pixels)</param>
            <returns>x value(pb unit)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.YWPFPixelsToUnits(System.Int32)">
            <summary>
            convert wpf pixel to pb unit
            </summary>
            <param name="v">y value(wpf pixel)</param>
            <returns>y value(pb unit)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.XUnitsToWPFPixels(System.Int32)">
            <summary>
            convert pb unit to wpf pixel
            </summary>
            <param name="v">x value(pb unit)</param>
            <returns>x value(wpf pixel)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSystemFunctions.YUnitsToWPFPixels(System.Int32)">
            <summary>
            convert pb unit to wpf pixel
            </summary>
            <param name="v">y value(pb unit)</param>
            <returns>y value(wpf pixel)</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBListViewItem">
            <summary>
            PBListViewItem class  
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.cutHighlighted">
            <summary>
            holding CutHightLighted 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.data">
            <summary>
            holding Data 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.dropHighlighted">
            <summary>
            holding DropHighlighted 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.hasFocus">
            <summary>
            holding HasFocus 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.itemX">
            <summary>
            holding ItemX 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.itemY">
            <summary>
            holding ItemY 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.label">
            <summary>
            holding Label 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.overlayPictureIndex">
            <summary>
            holding OverlayPictureIndex 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.pictureIndex">
            <summary>
            holding PictureIndex 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.selected">
            <summary>
            holding Selected 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListViewItem.statePictureIndex">
            <summary>
            holding StatePictureIndex 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListViewItem.Clone">
            <summary>
            Clone the object 
            </summary>
            <returns>Return the new object</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.CutHighlighted">
            <summary>
            Gets or sets CutHighlighted property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.Data">
            <summary>
            Gets or sets Data property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.DropHighlighted">
            <summary>
            Gets or sets DropHighlighted property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.HasFocus">
            <summary>
            Gets or sets HasFocus property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.ItemX">
            <summary>
            Gets or sets ItemX property
            </summary>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.ItemY">
            <summary>
            Gets or sets ItemY property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.Label">
            <summary>
            Gets or sets Label property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.OverlayPictureIndex">
            <summary>
            Gets or sets OverlayPictureIndex property
            </summary>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.PictureIndex">
            <summary>
            Gets or sets PictureIndex property
            </summary>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.Selected">
            <summary>
            Gets or sets Selected property
            </summary>        
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListViewItem.StatePictureIndex">
            <summary>
            Gets or sets StatePictureIndex property
            </summary>        
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMonthCalendar">
            <summary>
            The PBMonthCalendar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.dateChangedEvent">
            <summary>
            dateChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.dateSelectedEvent">
            <summary>
            dateSelected event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.lostFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMonthCalendar.wpfMonthCalendar">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.#ctor">
            <summary>
            The contructor of PBMonthCalendar
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.clicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of clicked method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window workspace or control in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace or control in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.datechanged">
            <summary>
            stub of datechanged method
            </summary>
            <returns>Return code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.dateselected">
            <summary>
            stub of dateselected method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.doubleclicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of doubleclicked method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.ClearBoldDates">
            <summary>
            Clears all bold date settings
            </summary>
            <returns>Returns 0 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetDateLimits(Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Retrieves the maximum and minimum date limits specified for the calendar.
            </summary>
            <param name="dmin">the minimum date that can be referenced or displayed in the calendar</param>
            <param name="dmax">the maximum date that can be referenced or displayed in the calendar</param>
            <returns>Returns 0 when both limits are retrieved successfully and negative values otherwise</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetDisplayRange(Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Retrieves the first and last date of the currently displayed date range and 
            returns the number of months than span the display.
            </summary>
            <param name="dstart">the first date in the displayed range </param>
            <param name="dend">the last date in the displayed range</param>
            <returns>Returns the number of months in the display range if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetDisplayRange(Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBMonCalDisplayStateValue)">
            <summary>
            Retrieves the first and last date of the currently displayed date range and 
            returns the number of months than span the display.
            </summary>
            <param name="dstart">the first date in the displayed range</param>
            <param name="dend">the last date in the displayed range</param>
            <param name="ds">A value of the MonthCalDisplayState enumerated variable.</param>
            <returns>Returns the number of months in the display range if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetSelectedDate(Sybase.PowerBuilder.PBDate@)">
            <summary>
            Retrieves the selected date.
            </summary>
            <param name="d">the date selected </param>
            <returns>
            Returns 0 for success;
            -1 A range of dates is selected;
            -2 for an unknown failure.
            If a range of dates is selected, GetSelectedDate returns -1 and retrieves the earliest selected date
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetSelectedRange(Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Retrieves the range of selected dates.
            </summary>
            <param name="dstart">the earliest date selected</param>
            <param name="dend">the latest date selected</param>
            <returns>
            Returns 0 for success, -1 if only one date is selected, and -2 for an unknown failure
            If only one date is selected, GetSelectedRange returns -1 and the selected date is retrieved in the start and end parameters
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetToday">
            <summary>
            Returns the value that the calendar uses as today's date.
            </summary>
            <returns>return the Date.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetBoldDate(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Displays the specified date in bold.
            </summary>
            <param name="d">The date to be set in bold</param>
            <param name="onoff">A boolean specifying whether the date is to be set to bold. </param>
            <returns>Returns 0 for success and negative values for failure</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetBoldDate(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBMonCalRepeatTypeValue)">
            <summary>
            Displays the specified date in bold.
            </summary>
            <param name="d">The date to be set in bold</param>
            <param name="onoff">A boolean specifying whether the date is to be set to bold. </param>
            <param name="rt">A value of the MonthCalRepeatType enumerated variable. </param>
            <returns>Returns 0 for success and negative values for failure</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetDateLimits(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDate)">
            <summary>
            Sets the maximum and minimum date limits for the calendar.
            </summary>
            <param name="dmin">
            A date value to be set as the minimum date that can be referenced or 
            displayed in the calendar
            </param>
            <param name="dmax">
            A date value to be set as the maximum date that can be referenced or 
            displayed in the calendar
            </param>
            <returns>Returns 0 when both limits are set successfully and negative values otherwise</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetSelectedDate(Sybase.PowerBuilder.PBDate)">
            <summary>
            Selects a specified date.
            </summary>
            <param name="d">A date value to be set as the date selected </param>
            <returns>Returns 0 for success and negative values otherwise</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetSelectedRange(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDate)">
            <summary>
            Sets the range of selected dates.
            </summary>
            <param name="dstart">A date value to be set as the earliest date selected </param>
            <param name="dend">A date value to be set as the latest date selected</param>
            <returns>Returns 0 for success and negative values otherwise</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.SetToday(Sybase.PowerBuilder.PBDate)">
            <summary>
            Sets the value that is used by the calendar as today's date.
            </summary>
            <param name="d">The date you want to specify as the Today date</param>
            <returns>Returns 0 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMonthCalendar.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Resizes an object or control by setting its Width and Height 
            properties and then redraws the object.
            </summary>
            <param name="w">The new width in PowerBuilder units</param>
            <param name="h">The new height in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window. 
            If any argument's value is null, Resize returns null.
            </returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DateChangedEvent">
            <summary>
            DateChanged Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DateSelectedEvent">
            <summary>
            DateSelected Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMonthCalendar.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Height">
            <summary>
            Gets or sets the Height property of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.PBTag">
            <summary>
            Gets or sets the Tag value 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Width">
            <summary>
            Gets or sets the Width property of the control, in PowerBuilder units. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TabOrder">
            <summary>
            Gets or sets the TabOrder property indicating the tab order value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Visible">
            <summary>
            Gets or sets a value indicating whether the control is visible or not
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.X">
            <summary>
            Gets or sets the X position (distance from left edge of screen) of the window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Y">
            <summary>
            Gets or sets the Y property of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Accelerator">
            <summary>
            Gets or sets Accelerator property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.AutoSize">
            <summary>
            Gets or sets a value indicating whether the calendar is sized automatically 
            to hold a single month
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.BackColor">
            <summary>
            Gets or sets the numeric value of the background color of the control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets which day of the week displays on the left in the calendar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.MaxSelectCount">
            <summary>
            Gets or sets the maximum number of days the user can select from the calendar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.MonthBackColor">
            <summary>
            Gets or sets the numeric value of the background color of a month 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.RightToLeft">
            <summary>
            Gets or sets a value indicating whether the characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.ScrollRate">
            <summary>
            Gets or sets the number of months the calendar scrolls when the user clicks a scroll button. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text within a month 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TitleBackColor">
            <summary>
            Gets or sets the numeric value of the background color of the calendar's title 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TitleTextColor">
            <summary>
            Gets or sets the numeric value of the color used for text in the calendar's title 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TodayCircle">
            <summary>
            Gets or sets a value indicating whether the border of today's date on the calendar displays in red.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TodaySection">
            <summary>
            Gets or sets a value indicating whether the label "Today:" followed by the 
            current date displays at the bottom of the calendar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.TrailingTextColor">
            <summary>
            Gets or sets the numeric value of the color used for leading and trailing days in the calendar 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMonthCalendar.WeekNumbers">
            <summary>
            Gets or sets a value indicating whether a number representing the number of 
            the week in the year displays to the left of each row in the calendar.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBLine">
            <summary>
            The PBLine class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDrawObject">
            <summary>
            The PBDrawObject class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDrawObject.constructorEvent">
            <summary>
            constructor event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDrawObject.destructorEvent">
            <summary>
            destructor event handler 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.#ctor">
            <summary>
            The contructor of PBDrawObject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            SizeChanged event handler, fire the PBXYSizeToMarginConverter.ConvertBack(), update X/Y/PBWidth/PBHeight
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.SetControl(System.Windows.FrameworkElement)">
            <summary>
            Set the WpfControl points to a real control object.
            </summary>
            <param name="control">The inner control object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.Hide">
            <summary>
            Makes the control invisible.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, Hide returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.Show">
            <summary>
            Makes the control visible.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, Show returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.TriggerConstructorEvent">
            <summary>
            Trigger pb control's constructor event.
            </summary>
            <returns>Return the ExecuteEvent executed value if constructorEvent is not null, else return 1.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDrawObject.TriggerDestructorEvent">
            <summary>
            Trigger pb control's destructor event.
            </summary>
            <returns>Return the ExecuteEvent executed value if constructorEvent is not null,else return 1.</returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDrawObject.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDrawObject.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDrawObject.LineColor">
            <summary>
            Gets or sets the numeric value of the line color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDrawObject.LineStyle">
            <summary>
            Gets or sets the style of the line used to draw the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDrawObject.LineThickness">
            <summary>
            Gets or sets the thickness of the line used to draw the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDrawObject.Visible">
            <summary>
            Gets or sets a value that indicates whether the control is visible.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBLine.wpfLine">
            <summary>
            The inner line object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBLine.#ctor">
            <summary>
            The contructor of PBLine
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBLine.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Move the control to a specified position.
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units.</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window. 
            If any argument's value is null, Move returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBLine.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the length of the control.
            </summary>
            <param name="w">The new width in PowerBuilder units.</param>
            <param name="h">The new height in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window.
            If any argument's value is null, Resize returns null.</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.BeginX">
            <summary>
            Gets or sets the X position of one end of the line (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.BeginY">
            <summary>
            Gets or sets the Y position of one end of the line (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.EndX">
            <summary>
            Gets or sets the X position of the other end of the line (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.EndY">
            <summary>
            Gets or sets the Y position of the other end of the line (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.LineColor">
            <summary>
            Gets or sets the numeric value of the line color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.LineStyle">
            <summary>
            Gets or sets the style of the line.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.LineThickness">
            <summary>
            Gets or sets the thickness of the line, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBLine.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBEncodingDialog">
            <summary>
            Interaction logic for PBEncodingDialog.xaml
            </summary>
            <summary>
            PBEncodingDialog
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEncodingDialog.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.BackPrinting.PrintPendingJob">
            <summary>
            PrintPendingJob is used for customed printing.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintPendingJob.#ctor(System.String)">
            <summary>
            this is the summary 
            </summary>
            <param name="jobName"> jobName params </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintPendingJob.SendToPrinter">
            <summary>
             the sealed function
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintPendingJob.CustomizePrinter(System.Drawing.Printing.PrinterSettings)">
            <summary>
            CustomizePrinter method
            </summary>
            <param name="printer"> printer settings </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintPendingJob.LoadImageFromFile(System.String)">
            <summary>
            LoadImageFromFile settings
            </summary>
            <param name="f"> the file name </param>
            <returns>the image of the file</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBStaticHyperLink">
            <summary>
            The PBStaticHyperLink class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBStaticText">
            <summary>
            The PBStaticText class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.clickedEvent">
            <summary>
            Clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.doubleClickedEvent">
            <summary>
            DoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.rbuttonDownEvent">
            <summary>
            RButtonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticText.wpfStaticText">
            <summary>
            The real inner StaticText object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.#ctor">
            <summary>
            Constructor of PBStaticText class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the clicked event
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The clicked event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the clicked event
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The clicked event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticText.OnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the LostFocus event
            </summary>
            <param name="sender">The control sent out the LostFocus event</param>
            <param name="e">The LostFocus event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DragEnterEvent">
            <summary>
            DragEnter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.OtherEvent">
            <summary>
            Other event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBStaticText.RButtonDownEvent">
            <summary>
            RButtonDown event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Italic">
            <summary>
            Gets or sets a value that indicates whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.UnderLine">
            <summary>
            Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Alignment">
            <summary>
            Gets or sets the text alignment in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.BorderColor">
            <summary>
            Gets or sets the numerical value of the border color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.DisabledLook">
            <summary>
            Gets or sets a value that indicates whether the control appears to be enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FillPattern">
            <summary>
            Gets or sets the hatch pattern used to fill the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled (can be selected).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.FocusRectangle">
            <summary>
            Gets or sets a value that indicates whether a dotted rectangle frames the control when it has focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.Text">
            <summary>
            Gets or sets the text that displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.TextColor">
            <summary>
            Gets or sets the numeric value of the text color in the control: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticText.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBStaticHyperLink.wpfStaticHyperLink">
            <summary>
            The inner object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBStaticHyperLink.#ctor">
            <summary>
            Constructor of PBStaticHyperLink class
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticHyperLink.URL">
            <summary>
            Gets or sets the URL to open in the user's Web browser when the text control is clicked.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBStaticHyperLink.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBPictureHyperLink">
            <summary>
            The PBPictureHyperLink class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBPicture">
            <summary>
            The PBPicture class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPicture.wpfPicture">
            <summary>
            The real inner wpf Picture object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.#ctor">
            <summary>
            The contructor of PBPicture
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.Draw(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Draws a picture control at a specified location in the current window.
            </summary>
            <param name="x">The x coordinate of the location (in PowerBuilder units) at which you want to draw the picture.</param>
            <param name="y">The y coordinate of the location (in PowerBuilder units) at which you want to draw the picture.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, Draw returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.SetPicture(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Assigns an image stored in a blob to be the image in a Picture control.
            </summary>
            <param name="b">A blob containing the new bitmap.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetPicture returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the clicked event
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The clicked event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.OnDoubleClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the DoubleClicked event
            </summary>
            <param name="sender">The control sent out the DoubleClicked event</param>
            <param name="e">The DoubleClicked event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.OnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the LostFocus event
            </summary>
            <param name="sender">The control sent out the LostFocus event</param>
            <param name="e">The LostFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPicture.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.ClickedEvent">
            <summary>
            Clicked Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBPicture.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled (can be selected).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.FocusRectangle">
            <summary>
            Gets or sets a value that indicates whether a dotted rectangle frames the picture when it has focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.Invert">
            <summary>
            Gets or sets a value that indicates whether the control displays with its colors inverted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.Map3DColors">
            <summary>
            Gets or sets a value that indicates whether the system 3D colors are mapped to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.OriginalSize">
            <summary>
            Gets or sets a value that indicates whether the width and height properties of
            a bitmap image are set to their original values.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.PictureMaskColor">
            <summary>
            Gets or sets the numeric value of the color to be used to mask user-defined bitmaps.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.PictureName">
            <summary>
            Gets or sets the name of the file that contains the picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.PowerTipText">
            <summary>
            Gets or sets a PowerTip for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPicture.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureHyperLink.wpfPictureHyperLink">
            <summary>
            The inner PictureHpyerLink object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureHyperLink.#ctor">
            <summary>
            The contructor of PBPictureHyperLink
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureHyperLink.URL">
            <summary>
            Gets or sets the URL to open in the user's Web browser when the text control is clicked.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureHyperLink.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOmControl">
            <summary>
            The PBOmControl class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.dataChangeEvent">
            <summary>
            dataChange event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.doubleClickedEvent">
            <summary>
            doubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.errorEvent">
            <summary>
            error event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.externalExceptionEvent">
            <summary>
            externalException event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.loseFocusEvent">
            <summary>
            lose Focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.propertyChangedEvent">
            <summary>
            propertyChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.propertyRequestEditEvent">
            <summary>
            propertyRequestEdit event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmControl.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.#ctor">
            <summary>
            The contructor of PBOmControl
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.OleEventCallback(System.Type,System.Object[])">
            <summary>
            The general callback function invoked by CommonEventHandler
            </summary>
            <param name="EventType"></param>
            <param name="args"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.CLSIDFromProgID(System.String,System.Guid@)">
            <summary>
            CLSIDFromProgID
            </summary>
            <param name="lpszProgID"></param>
            <param name="pclsid"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.InsertClass(Sybase.PowerBuilder.PBString)">
            <summary>
            InsertClass just for DSOFramer.dll
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.BindingEventHandler">
            <summary>
            BindingEventHandler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.IsImplementedEvent(System.Reflection.MethodInfo)">
            <summary>
            return ture if attributes of the passed method are PBEventAttribute and 
            are not PBNoImplementAttribute.
            </summary>
            <param name="mi"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetActualComObject">
            <summary>
            GetActualComObject
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.datachange">
            <summary>
            stub of datachange method
            </summary>
            <returns>Return code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.error(Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBExceptionActionValue@,Sybase.PowerBuilder.PBAny@)">
            <summary>
            stub of error method
            </summary>
            <param name="errornumber">PowerBuilder's error number</param>
            <param name="errortext">PowerBuilder's error message</param>
            <param name="errorwindowmenu">
            the name of the window or menu that is the parent of the object whose script caused the error
            </param>
            <param name="errorobject">the name of the object whose script caused the error</param>
            <param name="errorscript">the full text of the script in which the error occurred</param>
            <param name="errorline">the line in the script where the error occurred</param>
            <param name="action">specify to control the application's course of action as a result of the error.</param>
            <param name="returnvalue">
            a value whose datatype matches the expected value that the OLE server or DataWindow would have returned
            </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.externalexception(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBExceptionActionValue@,Sybase.PowerBuilder.PBAny@)">
            <summary>
            stub of externalexception method
            </summary>
            <param name="resultcode">
            a PowerBuilder number identifying the exception that occurred on the server
            </param>
            <param name="exceptioncode">a number identifying the error that occurred on the server.</param>
            <param name="source">the name of the server</param>
            <param name="description">a description of the exception</param>
            <param name="helpfile">the name of a Help file containing information about the exception</param>
            <param name="helpcontext">the context ID of a Help topic in helpfile containing information about the exception</param>
            <param name="action">specify to control the application's course of action as a result of the error.</param>
            <param name="returnvalue">
            A value whose datatype matches the expected value that the OLE server would have returned.
            </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.propertychanged(Sybase.PowerBuilder.PBString)">
            <summary>
            stub of propertychanged method
            </summary>
            <param name="propertyname">The name of the property whose value changed</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.propertyrequestedit(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            stub of propertyrequestedit method
            </summary>
            <param name="propertyname">the name of the property whose value changed</param>
            <param name="cancelchange">determines whether the change will be canceled</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetData(Sybase.PowerBuilder.PBClipBoardFormatValue,Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets data from the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="format">The format for the data. </param>
            <param name="data">A string or blob variable that will contain the data from the OLE server.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetData(Sybase.PowerBuilder.PBClipBoardFormatValue,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Gets data from the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="format">The format for the data. </param>
            <param name="data">A string or blob variable that will contain the data from the OLE server.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets data from the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="clipBoardFormatValue">The format for the data. </param>
            <param name="data">A string or blob variable that will contain the data from the OLE server.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Gets data from the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="clipBoardFormatValue">The format for the data. </param>
            <param name="data">A string or blob variable that will contain the data from the OLE server.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.GetNativePointer(Sybase.PowerBuilder.PBULong@)">
            <summary>
            Gets a pointer to the OLE object associated with the OLE control. 
            </summary>
            <param name="pointer">A UnsignedLong variable in which you want to store the pointer.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.ReleaseNativePointer(Sybase.PowerBuilder.PBULong@)">
            <summary>
            Releases the pointer to an OLE object that you got with GetNativePointer.
            </summary>
            <param name="pointer">A UnsignedLong variable that holds the pointer you want to release.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.SetData(Sybase.PowerBuilder.PBClipBoardFormatValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets data in the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="format">The format of the data. </param>
            <param name="data">A string or blob whose value is the data you want to transfer.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.SetData(Sybase.PowerBuilder.PBClipBoardFormatValue,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Sets data in the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="format">The format of the data. </param>
            <param name="data">A string or blob whose value is the data you want to transfer.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.SetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets data in the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="clipBoardFormatValue">The format of the data. </param>
            <param name="data">A string or blob whose value is the data you want to transfer.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmControl.SetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Sets data in the OLE server associated with an OLE control using Uniform Data Transfer.
            </summary>
            <param name="clipBoardFormatValue">The format of the data. </param>
            <param name="data">A string or blob whose value is the data you want to transfer.</param>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DataChangeEvent">
            <summary>
            DataChange Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.ErrorEvent">
            <summary>
            Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.ExternalExceptionEvent">
            <summary>
            ExternalException Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.PropertyChangedEvent">
            <summary>
            PropertyChanged Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.PropertyRequestEditEvent">
            <summary>
            PropertyRequestEdit Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmControl.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.BackColor">
            <summary>
            Gets or sets the numeric value of the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.ClassLongName">
            <summary>
            Gets the long name for the server application associated with the OLE object in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.ClassShortName">
            <summary>
            Gets the short name for the server application associated with the OLE object in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.DisplayName">
            <summary>
            Gets or sets User-readable name for your OLE control when the control is activated in place.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.FocusRectangle">
            <summary>
            Gets or sets a value indicating whether a dotted rectangle (the focus rectangle) frames the control when it has focus. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.IsDragTarget">
            <summary>
            Gets or sets a value indicating whether an OLE object can be dropped on the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.Object">
            <summary>
            Gets a value indicating Used in scripts to apply server commands to 
            the linked or embedded OLE object within the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.BinaryIndex">
            <summary>
            Gets or sets a value Internal use only. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmControl.BinaryKey">
            <summary>
            Gets or sets a value Internal use only.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMultiLineEdit">
            <summary>
            The PBMultiLineEdit class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.modifiedEvent">
            <summary>
            Modified event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.otherEvent">
            <summary>
            Other event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.rbuttonDownEvent">
            <summary>
            RButtonDown event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.wpfMultiLineEdit">
            <summary>
            The real inner wpf MultiLineEdit object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.multiLineEditTxtChanged">
            <summary>
            The local variable indicating whether the text is changed 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.triggerTextChanged">
            <summary>
            The local variable indicating wheter the property Text or TextCase is changing.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMultiLineEdit.text">
            <summary>
            The local variable hold the text of control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.#ctor">
            <summary>
            Constructor of PBStaticText class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.modified">
            <summary>
            stub of modified mthod
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="ul"> UnsignedLong by value </param>
            <param name="l"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.CreateInnerControl">
            <summary>
            Create the inner control instance and attach event functions on it.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.CanUndo">
            <summary>
            Tests whether Undo can reverse the most recent edit for an editable control.
            </summary>
            <returns>
            Returns true if the last edit can be reversed (undone) using the Undo function 
            and false if the last edit cannot be reversed.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control, 
            but does not store it in the clipboard.
            </summary>
            <returns>
            Returns the number of characters that Clear removed from objectname.
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Copy">
            <summary>
            Puts selected text or an OLE object on the clipboard. 
            Copy does not change the source text or object.
            </summary>
            <returns>
            Copy returns the number of characters that were copied to the clipboard. 
            If no text is selected in objectref, no characters are copied and Copy returns 0.
            If an error occurs, Copy returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Cut">
            <summary>
            Deletes selected text or an OLE object from the specified control and stores it on the clipboard, 
            replacing the clipboard contents with the deleted text or object.
            </summary>
            <returns>
            Cut returns the number of characters that were cut from controlname and stored in the clipboard. 
            If no text is selected, no characters are cut and Cut returns 0. 
            If an error occurs, Cut returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.LineCount">
            <summary>
            Determines the number of lines in an edit control that allows multiple lines.
            </summary>
            <returns>
            Returns the number of lines in control 
            if it succeeds and -1 if an error occurs. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.LineLength">
            <summary>
            Determines the length of the line containing the insertion point in an edit control.
            </summary>
            <returns>
            Returns the length of the line containing the insertion point in control. 
            Returns -1 if an error occurs. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control. 
            For editable controls, text on the clipboard is pasted at the insertion point
            </summary>
            <returns> 
            Returns the number of characters that were pasted into control. 
            If nothing has been cut or copied (the clipboard is empty), 
            the Paste function does not change the contents of the edit control and returns 0. 
            If the clipboard contains nontext data (for example, a bitmap or OLE object) 
            and the control cannot accept that data, Paste does not change the contents and returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Position">
            <summary>
            Determines the position of the insertion point in an edit control.
            </summary>
            <returns>
            Returns the location of the insertion point in control.
            if it succeeds and -1 if an error occurs. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in an edit control with a specified string.
            </summary>
            <param name="replString">The string that replaces the selected text.</param>
            <returns>
            Returns the number of characters in string and -1 if an error occurs. 
            If any argument's value is null, ReplaceText returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Scroll(Sybase.PowerBuilder.PBLong)">
            <summary>
            Scrolls a multiline edit control a specified number of lines up or down.
            </summary>
            <param name="n">
            A long specifying the direction and number of lines you want to scroll.
            To scroll down, use a positive long value. To scroll up, use a negative long value.
            </param>
            <returns>
            Scroll returns the line number of the first visible line in editname if it succeeds. 
            Scroll returns -1 if an error occurs. 
            If any argument's value is null, Scroll returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.SelectedLength">
            <summary>
            Determines the total number of characters in the selected text in an editable control, 
            including spaces and line endings.
            </summary>
            <returns>
            Returns the length of the selected text in control. 
            If no text is selected, SelectedLength returns 0. 
            If an error occurs, it returns -1. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.SelectedLine">
            <summary>
            Obtains the number of the line that contains the insertion point in an editable control.
            </summary>
            <returns>
            Returns the number of the line containing the insertion point in control. 
            If an error occurs, SelectedLine returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.SelectedStart">
            <summary>
            Reports the position of the first selected character in an editable control.
            </summary>
            <returns>
            Long. Returns the starting position of the selected text in control. 
            If no text is selected, SelectedStart returns the position of the character immediately following the insertion point. 
            If an error occurs, SelectedStart returns -1. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.SelectedText">
            <summary>
            Obtains the selected text in an editable control
            </summary>
            <returns>
            Returns the selected text in control. 
            If there is no selected text or if an error occurs, SelectedText returns the empty string (""). 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.SelectText(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBULong)">
            <summary>
            Selects text in an editable control. 
            You specify where the selection begins and how many characters to select.
            </summary>
            <param name="selStartIndex">A long specifying the position at which you want to start the selection</param>
            <param name="noofChars">
            A long specifying the number of characters you want to select. 
            If length is 0, no text is selected but PowerBuilder moves the insertion point to the location specified in start.
            </param>
            <returns>
            Returns the number of characters selected. If an error occurs, SelectText returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.TextLine">
            <summary>
            Obtains the text of the line that contains the insertion point. 
            TextLine works for controls that can contain multiple lines.
            </summary>
            <returns>
            Returns the text on the line with the insertion point in control. 
            If an error occurs, TextLine returns the empty string (""). 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Undo">
            <summary>
            Cancels the last edit in an edit control, restoring the text to the content before the last change.
            </summary>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OnInitialUpdate">
            <summary>
            when initialize the SingleLineEdit control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OnTextModified(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            the TextModified event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            the KeyDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DragWithinEvent">
            <summary>
            DragWithin event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.LoseFocusEvent">
            <summary>
            LoseFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.ModifiedEvent">
            <summary>
            Modified event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMultiLineEdit.RButtonDownEvent">
            <summary>
            RButtonDown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Italic">
            <summary>
            Gets or sets a value that indicates whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.UnderLine">
            <summary>
            Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Accelerator">
            <summary>
            Gets or sets the ASCII value of the key you want to assign as the accelerator key for a control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Alignment">
            <summary>
            Gets or sets the text alignment in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.AutoHScroll">
            <summary>
            Gets or sets a value that indicates whether the control automatically scrolls horizontally when data is entered or deleted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.AutoVScroll">
            <summary>
            Gets or sets a value that indicates whether the control automatically scrolls vertically when data is entered or deleted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.DisplayOnly">
            <summary>
            Gets or sets a value that indicates whether the text in the control is display only and cannot be changed by user.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.HideSelection">
            <summary>
            Gets or sets a value that indicates whether selected text stays selected even when the control does not have focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.HScrollBar">
            <summary>
            Gets or sets a value that indicates whether a horizontal scroll bar displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.IgnoreDefaultButton">
            <summary>
            Gets or sets a value that indicates whether the Clicked event for the window's Default command button is triggered when
            user presses Enter.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.IMEMode">
            <summary>
            Gets or sets the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Limit">
            <summary>
            Gets or sets the maximum number of character that can be entered in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.TabStop">
            <summary>
            Gets or sets a value that indicates the positions of the tab stops in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.Text">
            <summary>
            Gets or sets the text that displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.TextCase">
            <summary>
            Gets or sets the case in which text entered in the control display.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.VScrollBar">
            <summary>
            Gets or sets a value that indicates whether a vertical scroll bar is display on the right of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMultiLineEdit.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDatePicker">
            <summary>
            The PBDatePicker class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.closeUpEvent">
            <summary>
            closeUp event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.dropDownEvent">
            <summary>
            dropDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.precreateWindowEvent">
            <summary>
            precreate window event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.userStringEvent">
            <summary>
            userString event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.valueChangedEvent">
            <summary>
            valueChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDatePicker.wpfDateTimePicker">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.#ctor">
            <summary>
            The contructor of PBDatePicker
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.clicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of clicked method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window workspace or control in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace or control in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.closeup">
            <summary>
            stub of closeup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.doubleclicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of doubleclicked method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.dropdown">
            <summary>
            stub of dropdown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.precreatewindow(Sybase.PowerBuilder.PBULong@,Sybase.PowerBuilder.PBULong@,Sybase.PowerBuilder.PBULong@)">
            <summary>
            stub of precreatewindow method
            </summary>
            <param name="style">the new window's style</param>
            <param name="styleEx">the extended style for the new window</param>
            <param name="other">UnsignedLong by reference</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.userstring(Sybase.PowerBuilder.PBULong@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            stub of userstring method
            </summary>
            <param name="flag">The value of flag is 0 by default and should not be changed.</param>
            <param name="userstr">String entered in the control by the user.</param>
            <param name="dtm">A DateTime value by reference to which the validated date should be assigned. </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.valuechanged(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            stub of valuechanged method
            </summary>
            <param name="flag">Unsigned long that defaults to 0 and can be ignored</param>
            <param name="dtm">The new DateTime value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.GetCalendar">
            <summary>
            This function is reserved for future use
            </summary>
            <returns>the Calendar</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.GetText">
            <summary>
            Get the text displayed in the control
            </summary>
            <returns>the Value property as a text string with the specified Format or CustomFormat applied.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.GetToday">
            <summary>
            Get the date that the calendar uses as today's date
            </summary>
            <returns>the value that the calendar uses as today's date</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.GetValue(Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBTime@)">
            <summary>
            Get the date and time in the Value property
            </summary>
            <param name="dt">The date value in the Value property returned by reference</param>
            <param name="tm">The time value in the Value property returned by reference</param>
            <returns>
            Returns 1 for success and one of the following negative values for failure:
            -1  Invalid date and/or time values
            -2  Other error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.GetValue(Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Get the date and time in the Value property
            </summary>
            <param name="dt">The DateTime value in the Value property returned by reference</param>
            <returns>
            Returns 1 for success and one of the following negative values for failure:
            -1  Invalid date and/or time values
            -2  Other error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.SetToday(Sybase.PowerBuilder.PBDate)">
            <summary>
            Sets the value that is used by the calendar as today's date
            </summary>
            <param name="dt">The date you want to specify as the Today date</param>
            <returns>Returns 0 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.SetValue(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBTime)">
            <summary>
            Sets the date and time in the Value property
            </summary>
            <param name="dt">The date value to be set in the Value property</param>
            <param name="tm">The time value to be set in the Value property </param>
            <returns>
            Returns 1 for success and one of the following negative values for failure:
            -1  The value cannot be set
            -2  Other error
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDatePicker.SetValue(Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Sets the date and time in the Value property
            </summary>
            <param name="dt">The DateTime value to be set in the Value property</param>
            <returns>
            Returns 1 for success and one of the following negative values for failure:
            -1  The value cannot be set
            -2  Other error
            </returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.CloseUpEvent">
            <summary>
            CloseUp Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.DropDownEvent">
            <summary>
            DropDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.PrecreateWindowEvent">
            <summary>
            PrecreateWindow Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.UserStringEvent">
            <summary>
            UserString Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDatePicker.ValueChangedEvent">
            <summary>
            ValueChanged Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FontWeight">
            <summary>
            Gets or sets the weight of the font in the control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Accelerator">
            <summary>
            Gets or sets the ASCII value of the key you want to assign as the accelerator key for a control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.AllowEdit">
            <summary>
            Gets or sets a value indicating whether the user can select the text string in the control and edit it.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarBackColor">
            <summary>
            Gets or sets the numeric value of the background color of the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarFontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the calendar.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarFontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the calendar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarFontName">
            <summary>
            Gets or sets the name of the typeface in which the text in the calendar displays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarFontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the calendar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarFontWeight">
            <summary>
            Gets or sets the weight of the font in the calendar 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarItalic">
            <summary>
            Gets or sets a value indicating whether the text in the calendar is italic 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarTextColor">
            <summary>
            Gets or sets the numeric value of the text color in the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarTextSize">
            <summary>
            Gets or sets the size of text in the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarTitleBackColor">
            <summary>
            Gets or sets the numeric value of the background color of the calendar's title
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarTitleTextColor">
            <summary>
            Gets or sets the numeric value of the color used for text in the calendar's title
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarTrailingTextColor">
            <summary>
            Gets or sets the numeric value of the color used for leading and trailing days in the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CalendarUnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the calendar is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.CustomFormat">
            <summary>
            Gets or sets a custom format for the display of the date in a DatePicker control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.DateValue">
            <summary>
            Gets the date value assigned to the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.DropDownRight">
            <summary>
            Gets or sets a value indicating whether the drop-down calendar is aligned 
            with the right or left side of the DatePicker control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.FirstDayOfWeek">
            <summary>
            Gets or sets which day of the week displays on the left in the calendar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Format">
            <summary>
            Gets or sets the format of the date displayed in a DatePicker control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.MaxDate">
            <summary>
            Gets or sets the latest date the user can select from the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.MinDate">
            <summary>
            Gets or sets the earliest date the user can select from the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.RightToLeft">
            <summary>
            Gets or sets a value indicating whether the characters should be displayed in right-to-left order
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether the control uses an up-down control to change the date and/or time 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Text">
            <summary>
            Gets the text associated with the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.TimeValue">
            <summary>
            Gets the time value assigned to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.TodayCircle">
            <summary>
            Gets or sets a value indicating whether the border of today's date on the calendar displays in red.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.TodaySection">
            <summary>
            Gets or sets a value indicating whether the label "Today:" followed by 
            the current date displays at the bottom of the calendar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDatePicker.WeekNumbers">
            <summary>
            Gets or sets a value indicating whether a number representing the number 
            of the week in the year displays to the left of each row in the calendar. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBCheckBox">
            <summary>
            The PBCheckBox class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.loseFocusEvent">
            <summary>
            lose Focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCheckBox.wpfCheckBox">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.#ctor">
            <summary>
            The contructor of PBCheckBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.WPFCheckBox_Constructor(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.WPFfCheckBox_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the clicked event
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The clicked event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.WPFCheckBox_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the LostFocus event
            </summary>
            <param name="sender">The control sent out the LostFocus event</param>
            <param name="e">The LostFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCheckBox.OnDestroy">
            <summary>
            To clear the memeory occupied by the control
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCheckBox.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215. For more information about color, see the RGB function 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            The application must be running on an appropriate version of PowerBuilder under an operating system that supports the selected 
            character set. For a complete list of possible values, see the list of properties for the
            FontCharSet variable on the Enumerated tab page of the Browser.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Automatic">
            <summary>
            Gets or sets a value indicating whether the control displays a mark when the user clicks it. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Checked">
            <summary>
            Gets or sets a value indicating whether the control is selected. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.LeftText">
            <summary>
            Gets or sets a value indicating whether the text displays on the left of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Pointer">
            <summary>
            Gets or sets the name of the stock pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.RightToLeft">
            <summary>
            Gets or sets a value indicating whether characters should be displayed in right-to-left order
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.Text">
            <summary>
            Gets or sets the text that displays next to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.ThirdState">
            <summary>
            Gets or sets a value indicating whether the control is in the third 
            state when the control has been defined to have three states.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCheckBox.ThreeState">
            <summary>
            Gets or sets a value indicating whether the control has three states. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBTiming">
            <summary>
            PBTiming class definition
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTiming.timerEvent">
            <summary>
            Timer event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTiming.stopTime">
            <summary>
            Used to caculate intervals
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTiming.timerID">
            <summary>
            The identifer of the timer
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTiming.interval">
            <summary>
            The interval variable
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTiming.cb">
            <summary>
            The timer proess block
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.#ctor">
            <summary>
            Constructor of PBTiming class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.timer">
            <summary>
            stub of timer method
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.Start(Sybase.PowerBuilder.PBDouble)">
            <summary>
            Activates a timing object causing a Timer event to occur repeatedly at the specified interval. 
            </summary>
            <param name="interval">An expression of type double specifying the number of seconds that
            you want between timer events. </param>
            <returns>Returns 1 if it succeeds and -1 if the timer is already running, the interval 
            specified is invalid, or there are no system timers available. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.Stop">
            <summary>
            Deactivates a timing object. 
            </summary>
            <returns>Returns 1 if it succeeds and -1 if the timer is not running or could not be stopped.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.Dispose(System.Boolean)">
            <summary>
            Local implementation of dispose method
            </summary>
            <param name="disposing">If the disposing process is going on</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTiming.OnElapsed(System.IntPtr,System.UInt32,System.UInt32,System.Int64)">
            <summary>
            Implementation of a timer event 
            </summary>
            <param name="hwnd">Handle to the window associated with the timer. </param>
            <param name="nmsg">Specifies the WM_TIMER message. </param>
            <param name="nidevent">Specifies the timer's identifier. </param>
            <param name="dwtime">Specifies the number of milliseconds that have elapsed since the system was started. </param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTiming.TimerEvent">
            <summary>
            Timer event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTiming.Running">
            <summary>
            Gets a vlaue indicating if the timing object has been started and is currently running
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTiming.Interval">
            <summary>
            Gets the minimum number of seconds the timing object waits between calls to the Timer event. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBRoundRectangle">
            <summary>
            The PBRoundRectangle class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRoundRectangle.wpfRRect">
            <summary>
            The inner line object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRoundRectangle.#ctor">
            <summary>
            The contructor of PBRoundRectangle
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRoundRectangle.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves the control to a specified location.
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units.</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window.
            If any argument's value is null, Move returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRoundRectangle.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the size of the control.
            </summary>
            <param name="w">The new width in PowerBuilder units.</param>
            <param name="h">The new height in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window.
            If any argument's value is null, Resize returns null.</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.CornerHeight">
            <summary>
            Gets or sets the radius of the vertical part of the corners of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.CornerWidth">
            <summary>
            Gets or sets the radius of the horizontal part of the corners of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.FillColor">
            <summary>
            Gets or sets the numeric value of the color used to fill the control: 2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.FillPattern">
            <summary>
            Gets or sets the hatch pattern used to fill the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.Height">
            <summary>
            Gets or sets the height of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.LineColor">
            <summary>
            Gets or sets the numeric value of the line color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.LineStyle">
            <summary>
            Gets or sets the style of the line used to draw the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.LineThickness">
            <summary>
            Gets or sets the thickness of the line used to draw the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.Width">
            <summary>
            Gets or sets the width of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.X">
            <summary>
            Gets or sets the X position (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.Y">
            <summary>
            Gets or sets the Y position (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRoundRectangle.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOval">
            <summary>
            The PBOval class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOval.wpfOval">
            <summary>
            The inner line object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOval.#ctor">
            <summary>
            The contructor of PBOval
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOval.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves the control to a specified location.
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units.</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window.
            If any argument's value is null, Move returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOval.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the size of the control.
            </summary>
            <param name="w">The new width in PowerBuilder units.</param>
            <param name="h">The new height in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window.
            If any argument's value is null, Resize returns null.</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.FillColor">
            <summary>
            Gets or sets the numeric value of the color used to fill the control: 2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.FillPattern">
            <summary>
            Gets or sets the hatch pattern used to fill the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.Height">
            <summary>
            Gets or sets the height of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.LineColor">
            <summary>
            Gets or sets the numeric value of the line color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.LineStyle">
            <summary>
            Gets or sets the style of the line used to draw the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.LineThickness">
            <summary>
            Gets or sets the thickness of the line used to draw the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.Width">
            <summary>
            Gets or sets the width of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.X">
            <summary>
            Gets or sets the X position (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.Y">
            <summary>
            Gets or sets the Y position (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOval.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOmCustomControl">
            <summary>
            The PBOmCustomControl class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmCustomControl.#ctor">
            <summary>
            The contructor of PBOmCustomControl
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.Alignment">
            <summary>
            Gets or sets the text alignment in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.Cancel">
            <summary>
            Gets or sets a value indicating whether the control acts as the Cancel button in the window 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.Default">
            <summary>
            Gets or sets a value indicating whether the button-style OLE control is the default control in the window 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmCustomControl.TextColor">
            <summary>
            Gets or sets the color that you want the control to use for text  
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOleHelper">
            <summary>
            Summary description for OleHost.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOleHelper.RegisterEvent(System.Windows.Forms.Control,System.String,System.Reflection.MethodInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="oleCtrl"></param>
            <param name="eventName"></param>
            <param name="callback"></param>
            <param name="target"></param>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl">
            <summary>
            The PBOmEmbeddedControl class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.closeEvent">
            <summary>
            close event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.renameEvent">
            <summary>
            rename event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.saveEvent">
            <summary>
            save event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.saveObjectEvent">
            <summary>
            saveObject event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.viewChangeEvent">
            <summary>
            viewChange event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.#ctor">
            <summary>
            The contructor of PBOmEmbeddedControl
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.close">
            <summary>
            stub of close method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.rename">
            <summary>
            stub of rename method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.save">
            <summary>
            stub of save method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.saveobject">
            <summary>
            stub of saveobject method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.viewchange">
            <summary>
            stub of viewchange method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Activate(Sybase.PowerBuilder.PBOMActivateTypeValue)">
            <summary>
            Activates the object in an OLE container
            </summary>
            <param name="t">
            A value of the enumerated datatype omActivateType specifying where the user 
            will work with the OLE object.
            </param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, Activate returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control
            </summary>
            <returns>returns 0 if it succeeds and -9 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Copy">
            <summary>
            Puts selected text or an OLE object on the clipboard
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Cut">
            <summary>
            Deletes selected text or an OLE object from the specified control and stores it on the clipboard
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.DoVerb(Sybase.PowerBuilder.PBInt)">
            <summary>
            Requests the OLE server application to execute the specified verb for the OLE object
            </summary>
            <param name="v">An integer identifying a verb known to the OLE server application</param>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Drag">
            <summary>
            Starts or ends the dragging of a control.
            </summary>
            <returns>returns 1 if it succeeds and -1 if you try to nest drag events or try to cancel the drag</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertClass(Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a new object of the specified OLE class in an OLE control.
            </summary>
            <param name="c">A string whose value is the name of the class of the object you want to create</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertClass(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a new object of the specified OLE class in an OLE control.
            </summary>
            <param name="c">A string whose value is the name of the class of the object you want to create</param>
            <param name="s">The name of an object variable of OLEStorage containing the object</param>
            <param name="n">the name of a substorage that contains the desired object within storagename</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertFile(Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts an object into an OLE control.
            </summary>
            <param name="f">the name of the file</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts an object into an OLE control.
            </summary>
            <param name="f">the name of the file</param>
            <param name="s">The name of an object variable of OLEStorage containing the object</param>
            <param name="n">the name of a substorage that contains the desired object within storagename</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertObject">
            <summary>
            Displays the standard Insert Object dialog box, allowing the user to choose a 
            new or existing OLE object, and inserts the selected object in the OLE control.
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.InsertObject(Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Displays the standard Insert Object dialog box, allowing the user to choose a 
            new or existing OLE object, and inserts the selected object in the OLE control.
            </summary>
            <param name="s">The name of an object variable of OLEStorage containing the object</param>
            <param name="n">the name of a substorage that contains the desired object within storagename</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.LinkTo(Sybase.PowerBuilder.PBString)">
            <summary>
            Establishes a link between an OLE control and a file or an item within the file.
            </summary>
            <param name="f">the file name containing the data that you want to insert in olecontrol</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.LinkTo(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Establishes a link between an OLE control and a file or an item within the file.
            </summary>
            <param name="f">the file name containing the data that you want to insert in olecontrol</param>
            <param name="i">A string that names an item within file name to which you want to link. </param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.LinkTo(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Establishes a link between an OLE control and a file or an item within the file.
            </summary>
            <param name="f">the file name containing the data that you want to insert in olecontrol</param>
            <param name="i">A string that names an item within file name to which you want to link. </param>
            <param name="s">The name of an object variable of OLEStorage containing the object</param>
            <param name="n">the name of a substorage that contains the desired object within storagename</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Open(Sybase.PowerBuilder.PBString)">
            <summary>
            Opens an OLE object in a file and loads it into an OLE control.
            </summary>
            <param name="f">the name of an OLE storage file containing the object. </param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Open(Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens an OLE object that is in a OLE storage object in memory and loads it into an OLE control.
            </summary>
            <param name="s">The name of an object variable of OLEStorage containing the object</param>
            <param name="n">the name of a substorage that contains the desired object within storagename</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control. 
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.PasteLink">
            <summary>
            Pastes a link to the contents of the clipboard into the control.
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.PasteSpecial">
            <summary>
            Displays a standard OLE dialog allowing the user to choose whether to embed or 
            link the OLE object on the clipboard when pasting it in the specified control.
            </summary>
            <returns>Returns 0 if it succeeds and 1 or negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Save">
            <summary>
            Saves an OLE object in an OLE control or an OLE storage object.
            </summary>
            <returns>Returns 0 if it succeeds and negative values if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SaveAs(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the object in an OLE control in a storage file.
            </summary>
            <param name="f">the name of an OLE storage file.</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SaveAs(Sybase.PowerBuilder.PBOmStorage,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the object in an OLE control to an OLE storage object in memory.
            </summary>
            <param name="s">The name of an object variable of OLEStorage</param>
            <param name="n">the name of a substorage within  targetstorage. </param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SelectObject(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Selects or clears the object in an OLE control but does not activate the server application. 
            </summary>
            <param name="s">indicating whether you want to select or deselect the object</param>
            <returns>
            Returns 0 if it succeeds and negative values if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.UpdateLinksDialog">
            <summary>
            Attempts to find a file linked to an OLE container.
            </summary>
            <returns>Returns 0 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.CloseEvent">
            <summary>
            Close Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.RenameEvent">
            <summary>
            Rename Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SaveEvent">
            <summary>
            Save Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SaveObjectEvent">
            <summary>
            SaveObject Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.ViewChangeEvent">
            <summary>
            ViewChange Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Activation">
            <summary>
            Gets or sets how the OLE object will be activated. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.ContentsAllowed">
            <summary>
            Gets or sets whether the OLE object in the control must be embedded or linked 
            or whether either method is allowed when Insert is called at runtime. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.DisplayType">
            <summary>
            Gets or sets how the OLE object will be displayed in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.DocFileName">
            <summary>
            Gets the name of the file containing the object. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.LinkItem">
            <summary>
            Gets the entire link name of the item to which the object is linked. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.LinkUpdateOptions">
            <summary>
            Gets or sets how a linked object in the control is updated.   
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.ObjectData">
            <summary>
            Gets or sets a blob that stores the object itself or the link information and the cached image
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.ParentStorage">
            <summary>
            Gets the parent storage. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.Resizable">
            <summary>
            Gets or sets a value indicating whether the control is resizable. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBOmEmbeddedControl.SizeMode">
            <summary>
            Gets or sets the size mode for the OLE document.  
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBListView">
            <summary>
            The PBListView class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.item">
            <summary>
            the array holding the Item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.itemPictureIndex">
            <summary>
            the array holding the ItemPictureIndex
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.largePictureName">
            <summary>
            the array holding the LargePictureName
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.smallPictureName">
            <summary>
            the array holding the SmallPictureName
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.statePictureName">
            <summary>
            the array holding the StatePictureName
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.mouseIsOnItem">
            <summary>
            the local value which indicates whether the mouse is on item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.beginDragIsTriggered">
            <summary>
            the local value which indicates whether begindrag is triggered
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.indexOfItemUnderMouse">
            <summary>
            the local value which indicates the itemindex under the mouse
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.beginDragEvent">
            <summary>
            BeginDrag event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.beginLabelEditEvent">
            <summary>
            BeginLabelEdit event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.beginRightDragEvent">
            <summary>
            BeginRightDrag event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.clickedEvent">
            <summary>
            Clicke event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.columnClickEvent">
            <summary>
            ColumnClick event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.deleteAllItemsEvent">
            <summary>
            DeleteAllItems event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.deleteItemEvent">
            <summary>
            DeleteItem event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.doubleClickedEvent">
            <summary>
            DoubleClicked event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.dragDropEvent">
            <summary>
            DragDrop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.dragWithinEvent">
            <summary>
            Drag with event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.endLabelEditEvent">
            <summary>
            EndLabelEdit event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.getFocusEvent">
            <summary>
            GetFocus event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.insertItemEvent">
            <summary>
            InsertItem event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.itemActivateEvent">
            <summary>
            ItemActivate event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.itemChangedEvent">
            <summary>
            ItemCHanged event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.itemChangingEvent">
            <summary>
            ItemChanging event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.keyEvent">
            <summary>
            Key event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.loseFocusEvent">
            <summary>
            LoseFocus event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.otherEvent">
            <summary>
            Other event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.rightClickedEvent">
            <summary>
            RightClicked event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.rightDoubleClickedEvent">
            <summary>
            RightDoubleClicked event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.sortEvent">
            <summary>
            Sort event hander
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.wpfControl">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.clickScrollViewerCount">
            <summary>
            Used to remember the times click on the scrollviewer
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListView.oldskin">
            <summary>
            The local variable to keep the last skin 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.#ctor">
            <summary>
            Constructor of PBListView class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.destructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.begindrag(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of begindrag method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being dragged)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.beginlabeledit(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of beginlabeledit method
            </summary>
            <param name="i">Integer by value (the index of the selected ListView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.beginrightdrag(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of beginrightdrag method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being dragged)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.clicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of clicked method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.columnclick(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of columnclick method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.deleteallitems">
            <summary>
            stub of deleteallitems method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.deleteitem(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of deleteitem method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being deleted)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.doubleclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of deleteitem method
            </summary>
            <param name="i">Integer by value (the index of the ListView item being double clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of dragdrop method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged) </param>
            <param name="index">Integer by value (the index of the target ListView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of dragdrop method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged) </param>
            <param name="index">Integer by value (the index of the target ListView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.endlabeledit(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            stub of endlabeledit method
            </summary>
            <param name="l">Integer. The index of the ListView item for which you have edited the label.</param>
            <param name="s">The string that represents the new label for the ListView item.</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.getfocus">
            <summary>
            stub of getfocus
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.insertitem(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="i">An integer that represents the index of the item being inserted into the ListView</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.itemactivate(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="i">An integer that represents the index of the item being inserted into the ListView</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.itemchanged(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="index">The index of the item that is changing</param>
            <param name="focuschange">Boolean (specifies if focus has changed for the item)</param>
            <param name="hasfocus">Boolean (specifies whether the item has focus)</param>
            <param name="selectionchange">Boolean (specifies whether the selection has changed for the item)</param>
            <param name="selected">Boolean (specifies whether the item is selected)</param>
            <param name="otherchange">Boolean (specifies if anything other than focus or selection has changed for the item) </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.itemchanging(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="index">The index of the item that is changing</param>
            <param name="focuschange">Boolean (specifies if focus has changed for the item)</param>
            <param name="hasfocus">Boolean (specifies whether the item has focus)</param>
            <param name="selectionchange">Boolean (specifies whether the selection has changed for the item)</param>
            <param name="selected">Boolean (specifies whether the item is selected)</param>
            <param name="otherchange">Boolean (specifies if anything other than focus or selection has changed for the item) </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.key(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub of key method
            </summary>
            <param name="key">A value of the KeyCode enumerated datatype indicating the key that was pressed </param>
            <param name="keyflags">UnsignedLong by value (the modifier keys that were pressed with the key)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.losefocus">
            <summary>
            stub of insertitem method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.rightclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="i">Integer by value (the index of the item or tab the user clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.rightdoubleclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="i">Integer by value (the index of the item or tab the user double-clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.sort(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of insertitem method
            </summary>
            <param name="index1">Integer by value (the index of one item being compared during a sorting operation)</param>
            <param name="index2">Integer by value (the index of the second item being compared)</param>
            <param name="column">Integer by value (the number of the column containing the items being sorted)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="ul"> UnsignedLong by value </param>
            <param name="l"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddColumn(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAlignmentValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Adds a column with a specified label, alignment, and width.
            </summary>
            <param name="l">
            A string whose value is the name of the column you are adding.
            </param>
            <param name="a">
            A value of the enumerated datatype Alignment specifying the alignment of the column you are adding.
            Values are: ?Center!?Justify!?Left!?Right!
            </param>
            <param name="w">
            An integer whose value is the width of the column you are adding, in PowerBuilder units.
            </param>
            <returns>
            Returns the column index if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Adds an item to a ListView control.
            </summary>
            <param name="i">The name of the item you are adding</param>
            <param name="p">The index of the picture you want to associate with the newly added item</param>
            <returns>Integer. Returns the index of the item if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddItem(Sybase.PowerBuilder.WPF.PBListViewItem)">
            <summary>
            Adds an item to a ListView control by referencing all the attributes in the ListView item.
            </summary>
            <param name="i">
            The ListViewItem variable containing properties of the item you are adding
            </param>
            <returns>
            Integer. Returns the index of the item if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddLargePicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the large image list.
            </summary>
            <param name="n">
            The name of the bitmap, icon, or cursor you are adding to the large image list
            </param>
            <returns>
            Integer. Returns the picture index if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddSmallPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the small image list.
            </summary>
            <param name="n">
            The name of the bitmap, icon, or cursor you are adding to the ListView control small image list
            </param>
            <returns>
            Integer. Returns the picture index if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.AddStatePicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the state image list.
            </summary>
            <param name="n">
            The name of the bitmap, icon, or cursor you are adding
            </param>
            <returns>
            Integer. Returns the picture index if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.Arrange">
            <summary>
            Arranges the icons in rows.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteColumn(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a column.
            </summary>
            <param name="i">
            The index number of the column you want to delete
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteColumns">
            <summary>
            Deletes all columns.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes the specified item from a ListView control.
            </summary>
            <param name="i">
            The index number of the item you want to delete
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteItems">
            <summary>
            Deletes all items from a ListView control.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteLargePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a picture from the large image list.
            </summary>
            <param name="i">
            The index entry for the large picture you want to delete
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteLargePictures">
            <summary>
            Deletes all large pictures from a ListView control.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteSmallPicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a small picture from a ListView control.
            </summary>
            <param name="i">
            The index number of the small picture you want to delete
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteSmallPictures">
            <summary>
            Deletes all small pictures from a ListView control.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteStatePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a state picture from a control.
            </summary>
            <param name="i">
            The index number of the state picture you want to delete
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.DeleteStatePictures">
            <summary>
            Deletes all state pictures from a control.
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.EditLabel(Sybase.PowerBuilder.PBInt)">
            <summary>
            Puts a label in a ListView into edit mode.
            </summary>
            <param name="i">
            The index of the ListView item to be edited
            </param>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.FindItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDirectionValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Search for the next item relative to a specific location in the ListView control.
            </summary>
            <param name="i">The index number from which you want your search to begin.</param>
            <param name="d">The direction in which to search. Values are:DirectionAll!DirectionUp!DirectionDown!DirectionLeft!DirectionRight!</param>
            <param name="f">If set to true, the search looks for the next ListView item that has focus.</param>
            <param name="s">If set to true, the search looks for the next ListView item that is selected.</param>
            <param name="c">If set to true, the search looks for the next ListView item that is the target of a cut operation.</param>
            <param name="r">If set to true, the search looks for next ListView item that is the target of a drag and drop operation.</param>
            <returns>Integer. Returns the index of the item found if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.FindItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Searches for the next item whose label matches the specified search text.
            </summary>
            <param name="i">The index number from which you want your search to begin</param>
            <param name="l">The string that is the target of the search</param>
            <param name="p">If set to true, the search looks for a partial label match</param>
            <param name="w">If set to true, the search returns to the first index item after it has finished</param>
            <returns>Integer. Returns the index of the item found if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetColumn(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBAlignmentValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Retrieves column information for a DataWindow, child DataWindow, or ListView control.
            </summary>
            <param name="i">
            An integer whose value is the index of the column for which you want to find properties.
            </param>
            <param name="l">
            A string identifying the label of the column for which you want to find properties. This argument is passed by reference.
            </param>
            <param name="a">
            A value of the enumerated datatype Alignment specifying the alignment of the column for which you want to find properties. 
            Values are: ?Center!?Justify!?Left!?Right!This argument is passed by reference.
            </param>
            <param name="w">
            An integer whose value is the width of the column for which you want to find properties. This argument is passed by reference. 
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetItem``1(Sybase.PowerBuilder.PBInt,``0@)">
            <summary>
            Retrieves a ListViewItem object from a ListView control so you can examine its properties.
            </summary>
            <typeparam name="T1">listviewitem type</typeparam>
            <param name="i">The index number of the item you want to retrieve </param>		
            <param name="t">The ListViewItem variable in which you want to store the ListViewItem object</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. Stores a ListViewItem object in a ListViewItem variable.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetItem``1(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,``0@)">
            <summary>
            Retrieves a ListViewItem object from a ListView control so you can examine its properties.
            </summary>
            <typeparam name="T2">listviewitem type</typeparam>
            <param name="i">The index number of the item you want to retrieve </param>
            <param name="c">The index number of the column for which you want item information</param>
            <param name="t">The ListViewItem variable in which you want to store the ListViewItem object</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs. Stores a ListViewItem object in a ListViewItem variable.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves the value displayed for a ListView item in a specified column.
            </summary>
            <param name="i">The index number of the item for which you want to retrieve a displayed value.</param>
            <param name="c">
            The index number of the column for which you want to retrieve a value.
            If the ListView is not a multicolumn report view, all the items are considered to be in column 1.
            </param>
            <param name="s">A string variable in which you store the displayed value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. Stores the displayed value of the ListView column in a string variable.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetItemAtPointer">
            <summary>
            Gets the handle or the index of the item under the cursor.
            </summary>
            <returns>
            Returns the index (ListView) or handle (TreeView) of the item under the cursor. Returns -1 for failure.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetOrigin(Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Finds the X and Y coordinates of the upper-left corner of the ListView item.
            </summary>
            <param name="x">An integer variable in which you want to store the X coordinate for the ListView control</param>
            <param name="y">An integer variable in which you want to store the Y coordinate for the ListView control</param>
            <returns>Integer. Returns 1 if it succeeds and - 1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.InsertColumn(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAlignmentValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a column with the specified label, alignment, and width at the specified location.
            </summary>
            <param name="i">An integer whose value is the number of the column before which you are inserting a new column.</param>
            <param name="l">A string whose value is the name of the column you are inserting.</param>
            <param name="a">A value of the enumerated datatype Alignment specifying the alignment of the column you are inserting. Values are: Center!Justify!Left!Right!</param>
            <param name="w">An integer whose value is the width of the column you are inserting, in PowerBuilder units.</param>
            <returns> Returns the column index value if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.InsertItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.WPF.PBListViewItem)">
            <summary>
            Inserts an item into a ListView control.
            </summary>
            <param name="i">An integer whose value is the index number of the item you are adding</param>
            <param name="t">A system structure of datatype ListViewItem in which InsertItem stores the item you are inserting</param>
            <returns>Returns index if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.InsertItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item into a ListView control.
            </summary>
            <param name="i">An integer whose value is the index number of the item before which you are inserting a new item</param>
            <param name="l">A string whose value is the name of the item you are adding</param>
            <param name="p">An integer whose value is the index number of the picture of the item you are adding</param>
            <returns>Returns index if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SelectedIndex">
            <summary>
            Obtains the number of the selected item in a ListBox or ListView control.
            </summary>
            <returns>
            Returns the index of the selected item in listcontrolname. 
            If more than one item is selected, SelectedIndex returns the index of the first selected item. 
            If there are no selected items or an error occurs, SelectedIndex returns -1. 
            If  listcontrolname is null, SelectedIndex returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetColumn(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAlignmentValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets column information for a DataWindow, child DataWindow, or ListView control.
            </summary>
            <param name="i">The number of the column for which you want to set column properties.</param>
            <param name="l">The label of the column for which you want to set column properties.</param>
            <param name="a">A value of the Alignment enumerated datatype specifying how to align the column. 
            Values are:Left! Right! Center! Justify!  </param>
            <param name="w">The width of the column for which you want to set column properties.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.WPF.PBListViewItem)">
            <summary>
            Sets data associated with a ListView item to the property values you specify in a ListViewItem variable.
            </summary>
            <param name="i">The index number of the item for which you are setting properties</param>
            <param name="c">The index number of the column of the item for which you want to set properties</param>
            <param name="t">The ListViewItem variable containing property values you want to assign to a ListView item</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value displayed for a particular column of a ListView item.
            </summary>
            <param name="i">The index number of the item for which you are setting a display value</param>
            <param name="c">The index number of the column for which you want to set a display value</param>
            <param name="l">The string value or variable which you are assigning to the specified column of the specified ListView item</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetItem(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.WPF.PBListViewItem)">
            <summary>
            Sets data associated with a ListView item to the property values you specify in a ListViewItem variable.
            </summary>
            <param name="i">The index number of the item for which you are setting properties</param>		
            <param name="t">The ListViewItem variable containing property values you want to assign to a ListView item</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetOverlayPicture(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Puts an image in the control's image list into an overlay image list.
            </summary>
            <param name="o">
            The index number of the overlay picture in the overlay image list. 
            The overlay image list is a 1-based array. Overlayindex must be 1 (for the first image),
            a previously designated index (replacing an image), or 1 greater than the current largest index (adding another image). 
            SetOverlayPicture fails if you specify an index that creates gaps in the array.
            </param>
            <param name="i">
            The index number of an image in the control's main image list. 
            For ListViews, both the large and small pictures at that index become overlay images. 
            The image is still available for use as an item's main image.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.Sort(Sybase.PowerBuilder.PBGRSortTypeValue)">
            <summary>
            Sorts items in ListView controls.
            </summary>
            <param name="s">
            The method you want to use when you sort the ListView items. 
            Values are:Ascending!Descending!Unsorted!UserDefinedSort!
            </param>
            <returns> Returns 1 if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.Sort(Sybase.PowerBuilder.PBGRSortTypeValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sorts items in ListView controls.
            </summary>
            <param name="s">
            The method you want to use when you sort the ListView items. 
            Values are:Ascending!Descending!Unsorted!UserDefinedSort!
            </param>
            <param name="c">
            The number of the column by which you wish to sort the listview items
            </param>
            <returns> Returns 1 if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.TotalColumns">
            <summary>
            Finds the number of columns in a ListView control.
            </summary>
            <returns> Returns the number of columns if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.TotalItems">
            <summary>
            Determines the total number of items in a ListBox control.
            </summary>
            <returns>
            Returns the total number of items in listcontrolname.
            If  listcontrolname contains no items, TotalItems returns 0. 
            If an error occurs, it returns -1. If listcontrolname is null, TotalItems returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.TotalSelected">
            <summary>
            Determines the number of items in a ListBox control that are selected.
            </summary>
            <returns>
            Returns the number of items in listcontrolname that are selected.
            If no items in listcontrolname are selected, TotalSelected returns 0. 
            If an error occurs, it returns -1. If listcontrolname is null, TotalSelected returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetFocus">
            <summary>
            Sets the focus on the specified object or control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, SetFocus returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.CanDrag">
            <summary>
            help function to check whether the listview can be dragged
            </summary>
            <returns>returns true if it can be dragged</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnDragDrop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            event handler to process dragdorp event
            </summary>
            <param name="sender">The object emiting the dragdrop event</param>
            <param name="e">The dragdrop event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            event handler to process the dragover event
            </summary>
            <param name="sender">The control emiting the dragover event</param>
            <param name="e">the dragover </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnPreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse down event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnPreviewMouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse rightbutton down event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnPreviewMouseRightButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse rightbutton up event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnPreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mouse move event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnPreviewMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse up event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.OnInitialUpdate">
            <summary>
            Initialize the control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_EndLabelEditEvent(System.Int16,System.String)">
            <summary>
            Handles EndLabelEdit event
            </summary>
            <param name="i">The index that being edited</param>
            <param name="s">The new text</param>
            <returns>0  Allow the new text to become the item's label.1  Prevent the new text from becoming the item's label.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_BeginLabelEditEvent(System.Int16)">
            <summary>
            Handles BeginLabelEdit event
            </summary>
            <param name="i">The index that being edited</param>
            <returns>0  Allow the new text to become the item's label.1  Prevent the new text from becoming the item's label.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_OnDeleteAllItems">
            <summary>
            Occurs when all items are deleted
            </summary>
            <returns>return zero if succeed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_OnDeleteItem(System.Int16)">
            <summary>
            Occurs when delete item
            </summary>
            <param name="i">The index to be delete </param>
            <returns>return zero if succeed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_OnInsertItem(System.Int16)">
            <summary>
            Happens when a new item is inserted
            </summary>
            <param name="i">The position on which item is inserted</param>
            <returns>Return zero</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            For key event
            </summary>
            <param name="sender">The control firs the event</param>
            <param name="e">The key argument event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            For itemchanging and itemchanged event
            </summary>
            <param name="sender">The control firs the event</param>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_ItemActivated(System.Object,Sybase.PowerBuilder.WPF.Controls.ItemActivatedEventArgs)">
            <summary>
            Response when ItemActivated event is fired
            </summary>
            <param name="sender">The control firs the event</param>
            <param name="e">The arguments of the event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.CheckMouseOnItem(System.Windows.DependencyObject)">
            <summary>
            help function to check whether mouse is on listview item
            </summary>
            <param name="ob">the object which handle mouse event</param>
            <returns>returns true if ob is a inner control of listview item</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetItemIndexAtPoniter(System.Windows.DragEventArgs)">
            <summary>
            Get the item index by the drag event args
            </summary>
            <param name="e">drag event args</param>
            <returns>the item index</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.SetDragDropInfo(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Set the dragdrop help info
            </summary>
            <param name="e">the mouse button event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.GetReportListViewItemByIndex(Sybase.PowerBuilder.WPF.Controls.ListView,System.Int32)">
            <summary>
            Get the report view listview's item by index
            </summary>
            <param name="lv">the listview control</param>
            <param name="index">the listview index</param>
            <returns>the listview item</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WpfControl_ContextMenuOpening(System.Object,System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            To process the context menu issue
            </summary>
            <param name="sender">The control itselft</param>
            <param name="e">The event fired</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_LostKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the LostkeyboardFocus event.
            </summary>
            <param name="sender">The control that lost focus</param>
            <param name="e">KeyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_GotKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the GotkeyboardFocus event.
            </summary>
            <param name="sender">The control that got focus</param>
            <param name="e">KeyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the GetFocus event
            </summary>
            <param name="sender">The control sent out the GetFocus event</param>
            <param name="e">The GetFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.ClearSelected">
            <summary>
            When click on the blank area, clear the selected items collection
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            To process Mouse double click event
            </summary>
            <param name="sender">The object fires the event</param>
            <param name="e">The double click event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            To process mouse right button down event
            </summary>
            <param name="sender">The control firs the event</param>
            <param name="e">The mouse event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            To process left mouse button up event
            </summary>
            <param name="sender">The control to send the event</param>
            <param name="e">The mouse event </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_RightClickedEvent(System.Int16)">
            <summary>
            Right clicked event
            </summary>
            <param name="i">the index of the listview item</param>
            <returns>return result of  event process</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_ClickedEvent(System.Int16)">
            <summary>
            Left clicked event 
            </summary>
            <param name="i">the index of listview item</param>
            <returns>return result of  event process</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_SortEvent(System.Int32,System.Int32,System.Int32)">
            <summary>
            To fire the sort event 
            </summary>
            <param name="index1">The first item index</param>
            <param name="index2">The second item index</param>
            <param name="column">The column</param>
            <returns>return 0 if equal, 1 if greater, -1 less </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListView.WPFControl_ColumnHeaderClicked(System.Object,Sybase.PowerBuilder.WPF.Controls.ListViewColumnHeaderEventArgs)">
            <summary>
            To fire the columnheader clicked event
            </summary>
            <param name="sender">The listview column header</param>
            <param name="e">The column header click event</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.BeginDragEvent">
            <summary>
            BeginDrag event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.BeginLabelEditEvent">
            <summary>
            BeginLabelEdit event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.BeginRightDragEvent">
            <summary>
            BeginRightDrag event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ColumnClickEvent">
            <summary>
            ColumnClick event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DeleteAllItemsEvent">
            <summary>
            DeleteAllItems event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DeleteItemEvent">
            <summary>
            DeleteItem event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DragEnterEvent">
            <summary>
            DragEnter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.EndLabelEditEvent">
            <summary>
            EndLabelEdit event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.InsertItemEvent">
            <summary>
            InsertIte event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ItemActivateEvent">
            <summary>
            ItemActivate event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ItemChangedEvent">
            <summary>
            ItemChanged event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.ItemChangingEvent">
            <summary>
            ItemChanging event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.KeyEvent">
            <summary>
            Key event definition
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.OtherEvent">
            <summary>
            Other event definition
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.RightClickedEvent">
            <summary>
            RightClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.RightDoubleClickedEvent">
            <summary>
             RightDoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListView.SortEvent">
            <summary>
            Sort event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FontFamily">
            <summary>
             Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Accelerator">
            <summary>
            Gets or sets the ASCII value of the key you want to assign as the accelerator key for a control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.AutoArrange">
            <summary>
            Gets or sets a value whether PowerBuilder arranges icons automatically in large and small icon views.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.BackColor">
            <summary>
            Gets or sets the numeric value of the background color. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.ButtonHeader">
            <summary>
            Gets or sets a value specifying whether the column titles in report view appear as buttons.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Checkboxes">
            <summary>
            Gets or sets a value specifying whether the state images are replaced by check boxes.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.EditLabels">
            <summary>
            Gets or sets a value specifying whether the user can edit the labels in a control by clicking on a selected item.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.ExtendedSelect">
            <summary>
            Gets or sets a value indicating whether users can select multiple items in the list box at one time.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FixedLocations">
            <summary>
            Gets or sets a value indicating whether the user cannot drag items to new positions in a control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.FullRowSelect">
            <summary>
            Gets or sets a value indicating whether an entire row can be selected in report view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.GridLines">
            <summary>
            Gets or sets a value indicating whether the report view displays gridlines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.HeaderDragDrop">
            <summary>
            Gets or sets a value indicating whether column headers can be dragged to move columns in report view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.HideSelection">
            <summary>
            Gets or sets a value indicating whether selected text stays selected (highlighted) even when the control does not have focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.ImeMode">
            <summary>
            Gets or sets a value indicating the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Item">
            <summary>
            Gets or sets the items in the control. Not updated after initialization.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.ItemPictureIndex">
            <summary>
            Gets or sets the values identifying the picture associated with the item
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LabelWrap">
            <summary>
            Gets or sets a value indicating whether long labels wrap under the ListView item in a large icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LargePictureHeight">
            <summary>
            Gets or sets the size, in pixels, for the height of the picture used in the large icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LargePictureMaskColor">
            <summary>
            Gets or sets the color to be transparent when used in a large icon view. This color is used when the picture is added at initialization or with the function AddLargePicture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LargePictureName">
            <summary>
            Gets or sets the name of the picture used in large icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LargePictureWidth">
            <summary>
            Gets or sets he size, in pixels, for the width of the picture used in the large icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.LayoutRTL">
            <summary>
            Gets or sets a value indicating whether the layout of the control should be a mirror image of the standard layout.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.OneClickActivate">
            <summary>
            Gets or sets a value indicating whether one click initiates the ItemActivate event.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.PB_DeleteItems">
            <summary>
            Gets or sets a value indicating whether the user can delete a ListView item from a ListView control by pressing Delete.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.RightToLeft">
            <summary>
            Gets or sets a value indicating whether that characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.Scrolling">
            <summary>
            Gets or sets a value indicating whether the user can scroll vertically when not all of the items in a control are visible.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.ShowHeader">
            <summary>
            Gets or sets a value indicating whether column titles appear in a report view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.SmallPictureHeight">
            <summary>
            Gets or sets the size, in pixels, for the height of the picture used in the small icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.SmallPictureMaskColor">
            <summary>
            Gets or sets the color to be transparent when used in a small icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.SmallPictureName">
            <summary>
            Gets or sets the name of the picture used in small icon view. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.SmallPictureWidth">
            <summary>
            Gets or sets the size, in pixels, for the width of the picture used in the small icon view.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.SortType">
            <summary>
            Gets or sets a value indicating whether items are sorted alphabetically based on the item label. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.StatePictureHeight">
            <summary>
            Gets or sets the size, in pixels, for the height of the state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.StatePictureMaskColor">
            <summary>
            Gets or sets the color to be transparent when used in a state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.StatePictureName">
            <summary>
            Gets or sets the name of the picture used as the state picture. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.StatePictureWidth">
            <summary>
            Gets or sets the size, in pixels, for the width of the state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.TrackSelect">
            <summary>
            Gets or sets a value indicating whether items appear in a different color when the mouse moves over them (hot tracking) and whether an item is selected if the mouse pauses over it. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.TwoClickActivate">
            <summary>
            Gets or sets a value indicating whether two clicks initiate the ItemActivate event.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.UnderlineCold">
            <summary>
            Gets or sets a value indicating whether hot tracking (color of items changes when mouse moves over them) is turned on and items not highlighted are underlined when the OneClickActivate property is true.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.UnderlineHot">
            <summary>
            Gets or sets a value indicating whether hot tracking (color of items changes when mouse moves over them) is turned on and items that are highlighted are underlined when either the OneClickActivate or TwoClickActivate property is true.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListView.View">
            <summary>
            Gets or sets the layout of the ListView. 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUpdaterNotifier.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUpdaterNotifier.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUpdaterNotifier.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailAddress``1(``0@)">
            <summary>
            Updates the mailRecipient array for a mail message.
            
            Usage:
            The mailRecipient array contains information about recipients of a mail message or the
            originator of a message. The originator is not used when you send a message.
            If there is an error in the mailRecipient array, mailAddress displays the Address dialog 
            box so the user can fix the address. If you pass a mailMessage structure that is a validly 
            addressed message (such as a message that the user received) nothing happens because the 
            addresses are correct.
            If you do not specify a mailMessage, the mail system displays an Address dialog box that 
            allows users to look for addresses and maintain their personal address list. The user cannot 
            select addresses for addressing a message.
            
            Before calling mail functions, you must declare and create a mailSession object and call 
            mailLogon to establish a mail session.
            </summary>
            <param name="msg">A mailMessage structure containing information about the message. If you 
            omit mailmessage, mailAddress displays an Address dialog box.</param>
            <returns>mailReturnCode. Returns one of the following values:
            	mailReturnSuccess!
            	mailReturnFailure!
            	mailReturnInsufficientMemory!
            	mailReturnUserAbort!
            If any argument's value is null, mailAddress returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailDeleteMessage(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes a mail message from the user's electronic mail inbox.
            
            Usage:
            To get a list of message IDs in the user's inbox, call the mailGetMessages 
            function. Before calling mail functions, you must declare and create a 
            mailSession object and call mailLogon to establish a mail session.
            </summary>
            <param name="m">A string whose value is the ID of the mail message to be 
            deleted</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailGetMessages(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Populates the messageID array of a mailSession object with the message IDs 
            in the user's inbox.
            
            Usage:
            MailGetMessages only retrieves message IDs, which it stores in the mailSession 
            object's MessageID array. A message ID serves as an argument for other mail 
            functions. With mailReadMessage, for example, it identifies the message you 
            want to read.
            Before calling mail functions, you must declare and create a mailSession object 
            and call mailLogon to establish a mail session.
            </summary>
            <param name="t">A string whose value is a message type. The default message 
            type is IPM or an empty string (""), which identifies interpersonal messages. 
            The other standard type is IPC, which identifies hidden, interprocess messages. 
            Your mail administrator may have established other user-defined message types.
            </param>
            <param name="r">A boolean value indicating you want only the IDs of unread 
            messages. Values are:
                true ?Get IDs for unread messages only
                false ?Get IDs for all messages</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailLogon(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBMailLogonOptionValue)">
            <summary>
            Establishes a mail session for the PowerBuilder application. The PowerBuilder application 
            can start a new session or join an existing session.
            
            Usage:
            If you do not direct mailLogon to start a new session and the mail application is already 
            running on the user's computer, then the PowerBuilder mail session attaches to the existing 
            session. A profile and password are not necessary.
            When mailLogon establishes a new session, then the mail system's dialog box prompts for the 
            profile and password if the script does not supply them.
            The download option forces the mail server to download the latest messages to the user's 
            inbox. This ensures that the inbox is up to date; it does not make the messages available 
            to PowerBuilder. To access messages, use mailGetMessages and mailReadMessage.
            Before calling mailLogon, you must declare and create a mailSession object.
            </summary>
            <param name="n">A string whose value is the user's mail system profile or user ID</param>
            <param name="p">A string whose value is the user's mail system password</param>
            <param name="o">A value of the mailLogonOption enumerated datatype specifying the logon options:
            ?mailNewSession! ?Starts a new mail session, whether or not the mail application is 
            already running
            ?mailDownLoad! ?Forces the mail application to download any new messages from the server 
            to the user's inbox. Starts a new mail session only if the mail application is not running
            ?mailNewSessionWithDownLoad! ?Starts a new mail session and forces new messages to be 
            downloaded from the server to the user's inboxThe default is to use an existing session if 
            possible and not to force new messages to be downloaded.</param>
            <returns>mailReturnCode. Returns one of the following values:
            mailReturnSuccess!
            mailReturnLoginFailure!
            mailReturnInsufficientMemory!
            mailReturnTooManySessions!
            mailReturnUserAbort!
            If any argument's value is null, mailLogon returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailReadMessage``1(Sybase.PowerBuilder.PBString,``0@,Sybase.PowerBuilder.PBMailReadOptionValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Opens a mail message whose ID is stored in the mail session's message array. 
            You can choose to read the entire message or the envelope (sender, date received, 
            and so on) only. If a message has attachments, they are stored in a temporary 
            file. You can also choose to have the message text written to in a temporary file.
            
            Usage:
            To obtain the message IDs for the messages in the user's inbox, call mailGetMessages.
            Before calling mail functions, you must declare and create a mailSession object 
            and call mailLogon to establish a mail session.
            Reading attachments: If a message has an attachment and you do not suppress attachments, 
            information about it is stored in the AttachmentFile property of the mailMessage object. 
            The AttachmentFile property is a mailFileDescription object. Its PathName property 
            has the location of the temporary file that mailReadMessage created for the attachment. 
            By default, the temporary file is in the directory specified by the TEMP environment 
            variable.
            Be sure to delete this temporary file when you no longer need it.
            </summary>
            <param name="m">A string whose value is the ID of the mail message you want to read.
            </param>
            <param name="msg">A mailMessage structure in which mailReadMessage stores the message 
            information.</param>
            <param name="o">A value of the mailReadOption enumerated datatype:
                mailEntireMessage! ?Obtain header, text, and attachments
                mailEnvelopeOnly! ?Obtain header information only
                mailBodyAsFile! ?Obtain header, text, and attachments, and treat the message text 
            as the first attachment, storing it in a temporary file
                mailSuppressAttachments! ?Obtain header and text, but no attachments</param>
            <param name="r">A boolean indicating whether you want to mark the message as read in 
            the user's inbox. Values are:
                true ?Mark the message as read
                false ?Do not mark the message as read</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailRecipientDetails(Sybase.PowerBuilder.PBMailRecipient,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Displays a dialog box with the specified recipient's address information.
            
            Usage:
            The effect of setting allowupdates to true depends on the mail system and 
            the user's privileges.
            Before calling mail functions, you must declare and create a mailSession object 
            and call mailLogon to establish a mail session.
            </summary>
            <param name="r">A mailRecipient structure containing valid address information. 
            Mailrecipient must contain a recipient identifier returned by mailAddress, 
            mailResolveRecipient, or mailReadMessage.</param>
            <param name="u">A boolean indicating whether updates to the recipient's name 
            will be allowed. If the user does not have update privileges for the mail system, 
            then allowupdates is ignored. The default is false.</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailResolveRecipient(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Obtains a valid e-mail address based on a partial or full user name and optionally
            updates information in the system's address list if the user has privileges to do so.
            
            Usage:
            Use mailResolveRecipient to verify that a name is a valid address in the mail system. 
            The function reports mailReturnFailure! if the name is not found.
            If you supply a mailRecipient structure, mailResolveRecipient fills the structure 
            with valid address information when it resolves the address. If you supply a name as 
            a string, mailResolveRecipient replaces the string's value with the full user name as 
            recognized by the mail system. An address specified as a string is adequate for users 
            in the local mail system. If you are sending mail through gateways to other systems, 
            you should obtain full address details in a mailRecipient structure.
            
            If more than one address on the mail system matches the partial address information 
            you supply to mailResolveRecipient, the mail system may display a dialog box allowing 
            the user to choose the desired name.
            If you supply a mailRecipient structure that already has address information, 
            mailResolveRecipient corrects the information if it differs from the mail system. If 
            you set allowupdates to true and the information differs from the mail system, 
            mailResolveRecipient corrects the mail system's information if the user has rights to 
            do so. Be careful that the address information you have is correct when you allow 
            updating.
            
            Before calling mail functions, you must declare and create a mailSession object and 
            call mailLogon to establish a mail session.
            </summary>
            <param name="r">A mailRecipient structure or a string variable whose value is a 
            recipient's name. The recipient's name is a property of the mailRecipient structure. 
            </param>
            <param name="u">A boolean indicating whether updates to the recipient's name will
            be allowed. If the user does not have update privileges for the mail system, then 
            allowupdates is ignored. The default is false.</param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailSend(Sybase.PowerBuilder.PBMailMessage)">
            <summary>
            Sends a mail message. If no message information is supplied, the mail system 
            provides a dialog box for entering it before sending the message.
            
            Usage:
            Before calling mail functions, you must declare and create a mailSession object 
            and call mailLogon to establish a mail session.
            For mailSend, mailOriginator! is not a valid value for the Recipient property 
            of the mailMessage object.  The valid values are  mailto!, mailcc!, and mailbcc!.  
            To specify that the sender receive a copy of the message, use mailcc!.
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.PBMailSession.MailSaveMessage(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBMailMessage)">
            <summary>
            Creates a new message in the user's inbox or replaces an existing message.
            
            Usage:
            Before saving a message, you must address the message even if you are replacing 
            an existing message. The message can be addressed to someone else for sending later.
            Before calling mail functions, you must declare and create a mailSession object 
            and call mailLogon to establish a mail session.
            </summary>
            <param name="m">A string whose value is the message ID of the message being replaced. 
            If you are saving a new message, specify an empty string ("").</param>
            <param name="msg">A mailMessage structure containing the message being saved.</param>
            <returns></returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBApplication">
            <summary>
            the PBWPFApplication class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBApplication.currentApp">
            <summary>
            The local variable holding current application instance
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBApplication.syncObject">
            <summary>
            the local variable sysnObject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBApplication.#ctor">
            <summary>
            The constructor of the class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBApplication.currentApp_DispatcherUnhandledException(System.Object,System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)">
            <summary>
            Hanlded the system error when an exception is thrown by an application but not handled.
            </summary>
            <param name="sender">sender of the exception</param>
            <param name="e">the exception</param>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBApplication.FlowDirection">
            <summary>
            Gets or sets the FlowDirection property indicating the window's FlowDirection
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBApplication.ApplicationObject">
            <summary>
            Gets the current application
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBPictureButton">
            <summary>
            The PBPictureButton class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBCommandButton">
            <summary>
            the PBCommandButton class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.loseFocusEvent">
            <summary>
            lose Focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBCommandButton.wpfButton">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.#ctor">
            <summary>
            the contructor of PBCommandButton
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.clicked">
            <summary>
            clicked event stub method
            </summary>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.constructor">
            <summary>
            contructor event stub method
            </summary>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.destructor">
            <summary>
            destructor event stub method
            </summary>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.getfocus">
            <summary>
            getfocus event stub method
            </summary>
            <returns>the return value </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.losefocus">
            <summary>
            lostfocus event stub method
            </summary>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            other event stub method
            </summary>
            <param name="i"> first parm </param>
            <param name="j"> second parm</param>
            <returns> the return value </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            rbuttondown event stub method
            </summary>
            <param name="flags">to indicate which mouse button is pressed</param>
            <param name="xpos">the x position of the mouse</param>
            <param name="ypos">the y position of the mouse</param>
            <returns>the return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.OnInitialUpdate">
            <summary>
            when initialize the button control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The onclick event handler
            </summary>
            <param name="sender"> the source of the event </param>
            <param name="e"> the event object when click happens </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBCommandButton.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.ClickedEvent">
            <summary>
            the ClickedEvent of the button
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBCommandButton.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.FaceName">
            <summary>
             Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.FontCharSet">
            <summary>
             Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.FontFamily">
            <summary>
             Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.FontPitch">
            <summary>
             Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Italic">
            <summary>
             Gets or sets a value that indicates whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.TextSize">
            <summary>
             Gets or sets the size of the text in the control, in points.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.UnderLine">
            <summary>
             Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Weight">
            <summary>
             Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Cancel">
            <summary>
            Gets or sets a value that indicates whether the control acts as the Cancel button. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Default">
            <summary>
             Gets or sets a value that indicates whether the control is the default control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Enabled">
            <summary>
             Gets or sets a value that indicates whether the control is enabled (can be clicked).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.FlatStyle">
            <summary>
            Gets or sets a value that indicates whether the edge of the button displays only when the mouse hovers over it. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Pointer">
            <summary>
             Gets or sets the name of the stock pointer of the file containing the pointer that is used for the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.Text">
            <summary>
            Gets or sets the text that displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBCommandButton.InnerControl">
            <summary>
            Gets the inner control.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureButton.wpfPictureButton">
            <summary>
            The inner PictureButton control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureButton.#ctor">
            <summary>
            The contructor of PBPictureButton
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.BackColor">
            <summary>
            Gets or sets the numerical value of the background color of the window. Values are -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.DisabledName">
            <summary>
            Gets or sets the name of the picture (bitmap image) that displays when the control is disabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.HTextAlign">
            <summary>
            Gets or sets a value that indicates how the text in the control is aligned.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.Map3DColors">
            <summary>
            Gets or sets a value that indicates whether the system 3D colors are mapped to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.OriginalSize">
            <summary>
            Gets or sets a value that indicates whether the width and height properties of a 
            bitmap image (picture) are set to their original values.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.PictureMaskColor">
            <summary>
            Gets or sets the numeric value of the color to be used to mask user-defined bitmaps.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.PictureName">
            <summary>
            Gets or sets the name of the file that contains the picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.PowerTipText">
            <summary>
            Gets or sets a PowerTip for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.TextColor">
            <summary>
            Gets or sets the numeric value of the text color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.VTextAlign">
            <summary>
            Gets or sets a value that indicates how the text in the control is aligned.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureButton.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDataStore">
            <summary>
            The PBDataStore class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.AcceptText">
            <summary>
            Applies the contents of the DataWindow's edit control to the current item in the buffer of a DataWindow control or DataStore.
            The data in the edit control must pass the validation rule for the column before it can be stored in the item.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if it fails
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ClearValues(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column number</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ClearValues(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column name</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Create(Sybase.PowerBuilder.PBString)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object. 
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Create(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object.
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <param name="e">The name of a string that will hold any error messages that are generated.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CreateFrom(Sybase.PowerBuilder.PBResultSet)">
            <summary>
            Creates a DataStore object from the passed ResultSet object.
            
            This function will first destroy a new datawindow syntax despite where
            there already exists one.
            </summary>
            <param name="rs"></param>
            <returns>Integer. 
            Returns 1 if it succeeds or a negative number if an error occurs. 
            If any argument is NULL, in PowerBuilder the method returns NULL.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.DBCancel">
            <summary>
            Cancels the retrieval in process in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.DeletedCount">
             <summary>
             Reports the number of rows that have been marked for deletion in the database.
             </summary>
             <returns>
             Returns the number of rows that have been deleted from dwcontrol but not updated in the associated database table.
             Returns 0 if no rows have been deleted or if all the deleted rows have been updated in the database table. 
             DeletedCount returns -1 if it fails. 
             If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.DeleteRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Deletes a row from a DataWindow control, DataStore object, or child DataWindow.
            </summary>
            <param name="r">
            A value identifying the row you want to delete. To delete the current row, specify 0 for row.
            </param>
            <returns>
            Returns 1 if the row is successfully deleted and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Describe(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the values of properties of a DataWindow object and controls within the object.
            </summary>
            <param name="s">A string whose value is a blank-separated list of properties or Evaluate functions</param>
            <returns>Returns a string that includes a value for each property or Evaluate function.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Filter">
            <summary>
            Displays rows in a DataWindow that pass the current filter criteria. 
            Rows that do not meet the filter criteria are moved to the filter buffer.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FilteredCount">
            <summary>
            Reports the number of rows that are not displayed in the DataWindow because of the current filter criteria.
            </summary>
            <returns>
            Returns the number of rows in dwcontrol that are not displayed because they do not meet the current filter criteria.
            Returns 0 if all rows are displayed and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <param name="d">A value indicating the DataWindow buffer you want to search for required row.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindGroupChange(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Searches for the next break for the specified group. 
            A group break occurs when the value in the column for the group changes. 
            </summary>
            <param name="r">A value identifying the row at which you want to begin searching for the group break.</param>
            <param name="l">The number of the group for which you are searching.</param>
            <returns>
            Returns 0 if the value in the group column did not change and a negative number if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            If the starting row is:
            (1) The first row in a group, then FindGroupChange returns the starting row number
            (2) A row within a group, other than the last group, then FindGroupChange returns the row number of the first row of the next group
            (3) A row in the last group, other than the first row of the last group, then FindGroupChange returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindRequired(Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Reports the next row and column that is required and contains a null value.
            </summary>
            <param name="b">A value indicating the DataWindow buffer you want to search for required columns. </param>
            <param name="r">
            A value identifying the first row to be searched.
            r also stores the number of the found row. 
            </param>
            <param name="c">
            A value identifying the first column to be searched.  
            c also stores the number of the found column. 
            </param>
            <param name="n">
            A string in which you want to store the name of the required column that contains a null value
            </param>
            <param name="u">A value indicating whether you want to validate all rows and columns </param>
            <returns>
            Returns 1 if FindRequired successfully checked the rows and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GenerateResultSet">
            <summary>
            I can't figure how end users use this function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GenerateResultSet(Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            I can't figure how end users use this function
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GenerateResultSet``1(``0@,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Generates a result set from data in a DataStore or DataWindow control
            </summary>
            <param name="rs"></param>
            <param name="b"></param>
            <returns>
            Returns 1 if it succeeds and -1 if it fails. If any argument is NULL, it returns NULL.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetBorderStyle(Sybase.PowerBuilder.PBInt)">
            <summary>
            Reports the border style of a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want to obtain the border style.</param>
            <returns>
            Returns the border style of column.
            Returns null if it fails. If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetChanges(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetChanges(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes"> 
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetChanges(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetChanges(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">
             A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetChild``1(Sybase.PowerBuilder.PBString,``0@)">
            <summary>
            Provides a reference to a child DataWindow or to a report in a composite DataWindow
            </summary>
            <typeparam name="T1">Type of datawindow child</typeparam>
            <param name="n">A string that names the column containing the child DataWindow or that names the report in the composite DataWindow.</param>
            <param name="c">A variable in which you want to store the reference to the child DataWindow or report. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If any argument is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetClickedColumn">
            <summary>
            Obtains the number of the column the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the column that the user clicked or double-clicked in dwcontrol. 
            Returns 0 if the user did not click or double-click a column 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetClickedRow">
            <summary>
            Obtains the number of the row the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the row that the user clicked or double-clicked in DataWindow control. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetColumn">
            <summary>
            Obtains the number of the current column. The current column is the column that has focus.
            </summary>
            <returns>
            Returns the number of the current column in DataWindow control.
            Returns 0 if no column is current,and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetColumnName">
            <summary>
            Obtains the name of the current column. The current column is the column that has the focus.
            </summary>
            <returns>
            Returns the name of the current column in dwcontrol. Returns the empty string ("") if no column is current or if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetFormat(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetFormat(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column name for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetFullState(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves the complete state of a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">A variable into which the returned DataWindow will be placed.</param>
            <returns>
            Returns the number of rows in the DataWindow blob if it succeeds and -1 if an error occurs. 
            GetFullState will return -1 if the DataWindow control or DataStore does not have a DataWindow object associated with it.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetFullState(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves the complete state of a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">A variable into which the returned DataWindow will be placed.</param>
            <returns>
            Returns the number of rows in the DataWindow blob if it succeeds and -1 if an error occurs. 
            GetFullState will return -1 if the DataWindow control or DataStore does not have a DataWindow object associated with it.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetNextModified(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the next row that has been modified in the specified buffer.
            </summary>
            <param name="r">
            A value identifying the row location after which you want to locate the modified row. 
            To search from the beginning, specify 0.
            </param>
            <param name="b"> DataWindow buffer in which you want to locate the modified row.</param>
            <returns>
            Returns the number of the first row that was modified after row in  dwbuffer in dwcontrol.
            Returns 0 if there are no modified rows after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetRow">
            <summary>
            Reports the number of the current row in a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the current row in dwcontrol. 
            Returns 0 if no row is current and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetRowIdFromRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetRowIdFromRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <param name="b"> The DataWindow buffer that contains the row.</param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetRowFromRowId(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the row number of a row in a DataWindow control or DataStore object 
            from the unique row identifier associated with that row.
            </summary>
            <param name="r">
            A number specifying the row identifier for which you want the associated row number.
            </param>
            <returns>
            Returns the row number in buffer. 
            Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetRowFromRowId(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
             <summary>
             Gets the row number of a row in a DataWindow control or DataStore object 
             from the unique row identifier associated with that row.
             </summary>
             <param name="r">
             A number specifying the row identifier for which you want the associated row number.
             </param>
             <param name="b"> The DataWindow buffer that contains the row.</param>
             <returns>
             Returns the row number in buffer. 
             Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
             If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSelectedRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Reports the number of the next highlighted row after a specified row in 
            a DataWindow control or DataStore object.
            </summary>
            <param name="r">
            A value identifying the location of the row after which you want to search for the next selected row. 
            </param>
            <returns>
            Returns the number of the first row that is selected after row in dwcontrol. 
            Returns 0 if no row is selected after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSQLSelect">
            <summary>
            Reports the SQL SELECT statement associated with a DataWindow 
            </summary>
            <returns>
            Returns the current SQL SELECT statement
            GetSQLSelect returns the empty string ("") if it cannot return the statement. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetText">
            <summary>
            Obtains the value in the edit control over the current row and column. 
            </summary>
            <returns>
            Returns the value in the edit control over the current row and column.
            Returns the empty string (" ") if no column is currently selected in  dwcontrol. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Gets the values for the DataWindow control or DataStore object's internal transaction object 
            and stores these values in the programmer-specified transaction object.
            </summary>
            <param name="t">
            The name of the transaction object into which you want to put the values
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetValidate(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetValidate(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the item.</param>
            <param name="i">The number of the item in the value list or the code table for the edit style.</param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the item.</param>
            <param name="i">
            The number of the item in the value list or the code table for the edit style.
            </param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GroupCalc">
            <summary>
            Recalculates the breaks in the grouping levels in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportClipboard">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">
            The number of the first column in the DataWindow control or DataStore that should receive data.
            </param>
            <param name="args">Th arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportClipboard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">
            The number of the first detail row in the clipboard that you want to copy.
            </param>
            <param name="args">Th arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportClipboard(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="t">import type</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data. 
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportFile(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="t">import type</param>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data.
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ImportString(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="t">import type</param>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.InsertRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Inserts a row in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row before which you want to insert a row. </param>
            <returns>
            Returns the number of the row that was added if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.IsSelected(Sybase.PowerBuilder.PBLong)">
            <summary>
            Determines whether a row is selected in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row you want to test to see if it is selected</param>
            <returns>
            Returns true if row in dwcontrol is selected and false if it is not selected. 
            If row is greater than the number of rows in dwcontrol or is 0 or negative, IsSelected also returns false. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ModifiedCount">
            <summary>
            Reports the number of rows that have been modified but not updated in a DataWindow or DataStore.
            </summary>
            <returns>
            Returns the number of rows that have been modified in the primary buffer. 
            Returns 0 if no rows have been modified or if all modified rows have been updated in the database table. 
            Returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Modify(Sybase.PowerBuilder.PBString)">
            <summary>
            Modifies a DataWindow object by applying specifications, given as a list of instructions, 
            that change the DataWindow object's definition. 
            </summary>
            <param name="s">
            A string whose value is the specifications for the modification.
            </param>
            <returns>
            Returns empty string if it succeeds and an error message if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Print">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Print(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Print(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <param name="showPrintDlg">
            A boolean value indicating whether you want to display the system Print dialog box.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.PrintCancel">
            <summary>
            Cancels the printing of a DataWindow or DataStore 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, PrintCancel returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ReselectRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Accesses the database to retrieve values for all columns that can be updated and 
            refreshes all timestamp columns in a row in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row to reselect</param>
            <returns>
            Returns 1 if it is successful and -1 if the row cannot be reselected
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Reset">
            <summary>
            Clears all the data from a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ResetTransObject">
            <summary>
            Stops a DataWindow control or DataStore from using the programmer-specified transaction object 
            that is currently in effect through a call to the SetTransObject method. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ResetUpdate">
            <summary>
            Clears the update flags in the primary and filter buffers and 
            empties the delete buffer of a DataWindow or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Retrieve">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Retrieve(Sybase.PowerBuilder.PBAny,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Retrieve(Sybase.PowerBuilder.PBArray,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetWSObject(Sybase.PowerBuilder.PBWSConnection)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified Web service connection object. 
            The connection object provides the information necessary for communicating with a Web service data source.
            </summary>
            <param name="wsObject">The connection object you want to use</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If the WSConnection object is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowCount">
            <summary>
            Obtains the number of rows that are currently available in a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns the number of rows that are currently available in dwcontrol, 0 if no rows are currently available, and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsDiscard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Discards a range of rows in a DataWindow control. 
            </summary>
            <param name="s">The number of the first row you want to discard.</param>
            <param name="e">The number of the last row you want to discard.</param>
            <param name="f">The DataWindow buffer containing the rows to be discarded.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsAscii(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <param name="nl">A string whose value is placed at the end of each line.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <param name="nl">A string whose value is placed at the end of each line.</param>
            <param name="b">
            A boolean value that determines whether line feed and carriage return characters 
            contained within the row are converted to white space.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <param name="nl">A string whose value is placed at the end of each line. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <param name="nl">A string whose value is placed at the end of each line. </param>
            <param name="b">
            A boolean value that determines whether line feed and carriage return characters contained 
            within the row are converted to white space. 
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SelectRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Highlights or removes highlights from rows in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row you want to select or deselect. </param>
            <param name="f">A boolean value that determines whether the row is selected or not selected.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, the method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetBorderStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetBorderStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetChanges(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change string which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetChanges(Sybase.PowerBuilder.PBBlob,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetChanges(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change string which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetChanges(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetColumn(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetColumn(Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDetailHeight(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the height of each row in the specified range to the specified value.
            </summary>
            <param name="s">The first row in the range of rows for which you want to set the height.</param>
            <param name="e">The last row in the range of rows for which you want to set the height.</param>
            <param name="h">
            The height of the detail area for the specified rows in the units specified for the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetFilter(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies filter criteria for a DataWindow control or DataStore.
            </summary>
            <param name="f">
            A string whose value is a boolean expression that you want to use as the filter criteria.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If no DataWindow object has been assigned to the DataWindow or DataStore, SetFilter returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetFormat(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetFormat(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetFullState(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A blob that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetFullState(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A string that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetHTMLAction(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Accepts action and context information about user interaction with the Web DataWindow
            client control in a Web browser so that newly generated HTML can reflect any requested changes.
            </summary>
            <param name="action">
            A string describing an action associated with a button click or method call in a Web DataWindow client control on a Web page.
            </param>
            <param name="context">A string describing the context of action in the Web DataWindow client control.</param>
            <returns>
            Returns 1 if it succeeds and one of these negative values if an error occurs:
            -1  Reloading the current context failed.
            -2  The action was attempted but it failed.
            -3  The action could not be performed (for example, the action was InsertRow but the DataWindow has no editable fields for entering new data).
            -4  The action was aborted by the HTMLContextApplied event.
            -5  The action is invalid.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetPosition(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Moves a control within the DataWindow to another band 
            or changes the front-to-back order of controls within a band.
            </summary>
            <param name="n">The name of the control within the DataWindow that you want to move.</param>
            <param name="b">
            A string whose value is the name of the band or layer in which you want to position the control. 
            Layer names are background and foreground.
            </param>
            <param name="t">A boolean indicating whether you want to bring the control to the front</param>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the current row in a DataWindow control or DataStore.
            </summary>
            <param name="r">The row you want to make current</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If row is less than 1 or greater than the number of rows, SetRow fails. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSort(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies sort criteria for a DataWindow control or DataStore.
            </summary>
            <param name="c">A string whose value is valid sort criteria for the DataWindow </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSQLPreview(Sybase.PowerBuilder.PBString)">
            <summary>
            The SQL statement for a DataWindow control or DataStore
            </summary>
            <param name="s">
            A string whose value is valid SQL syntax for the SQL statement that will be submitted to the database server
            </param>
            <returns>
            Returns 1 if it succeeds and 0 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSQLSelect(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies the SQL SELECT statement for a DataWindow control or DataStore.
            </summary>
            <param name="s">
            A string whose value is the SELECT statement for the DataWindow object.
            </param>
            <returns>
            SetSQLSelect returns 1 if it succeeds and -1 if the SELECT statement cannot be changed.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the text in the edit control over the current row and column 
            in a DataWindow control or DataStore.
            </summary>
            <param name="t">A string whose value you want to put in the current row and column. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Sets the values in the internal transaction object for a DataWindow control or DataStore 
            to the values from the specified transaction object.
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetTransObject(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified transaction object. 
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetValidate(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column number for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetValidate(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column name for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ShareData(Sybase.PowerBuilder.IPBDataStore)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ShareData(Sybase.PowerBuilder.IPBDataWindowControl)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ShareData(Sybase.PowerBuilder.IPBDataWindowChild)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ShareDataOff">
            <summary>
            Turns off the sharing of data buffers for a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, ShareDataOff returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Sort">
            <summary>
            Sorts the rows in a DataWindow control or DataStore using the DataWindow's 
            current sort criteria.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
             If dwcontrol is null, Sort returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Update">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Update(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Update(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <param name="c">
            A boolean value specifying whether dwcontrol should automatically reset the update flags
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Collapse(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be collapsed
            </param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the collapse operation succeeds
            One of the following negative values if it fails:
            -1   DataWindow is null
            -5   One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CollapseAll">
            <summary>
            Collapses all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the CollapseAll operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CollapseAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row; also collapses all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be collapsed</param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CollapseLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses all the groups in a TreeView DataWindow that have the specified TreeView level.
            </summary>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Expand(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be expanded
            </param>
            <param name="l">
            The TreeView level of the group to be expanded
            </param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ExpandAll">
            <summary>
            Expands all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ExpandAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level and 
            includes the specified row; also expands all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be expanded</param>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ExpandLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands all the groups in a TreeView DataWindow that have the specified TreeView level. 
            </summary>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.IsExpanded(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Performs a test to see whether a group in a TreeView DataWindow with the specified TreeView level is expanded, 
            and whether the group includes the specified row.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <returns>
            Returns true if the group is expanded and false if the group is not expanded. 
            IsExpanded also returns false if the DataWindow is not a TreeView DataWindow or the row or groupLevel is invalid.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SelectTreeNode(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Selects or deselects a TreeView node in a TreeView DataWindow.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <param name="bSelect">Indicates whether the TreeView node is selected or not</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CategoryCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of categories on the category axis of a graph.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the number of categories. 
            </param>
            <returns>
            Returns the count if it succeeds and -1 if an error occurs. 
            If any argument's value is null, CategoryCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.CategoryName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the category name associated with the specified category number.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the name of a specific category. 
            </param>
            <param name="c">
            The number of the category for which you want the name.
            </param>
            <returns>
            Returns the name of categorynumber in controlname. If an error occurs, it returns the empty string (""). 
            If any argument's value is null, CategoryName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.Clipboard(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the contents of the system clipboard with a bitmap image of a graph. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Clipboard returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.DataCount(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the number of data points in the specified series in a graph.
            </summary>
            <param name="n">
            The name of the graph in the DataWindow control 
            </param>
            <param name="s">
            A string whose value is the name of the series for which you want the number of data points
            </param>
            <returns>
            Returns the number of data points in the specified series if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DataCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.FindSeries(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a series in a graph when you know the series' name.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control </param>
            <param name="s">A string whose value is the name of the series for which you want the number</param>
            <returns>
            Returns the number of the series named in seriesname in the graph. 
            If an error occurs, FindSeries returns -1. 
            If any argument's value is null, FindSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="y">
            A value of the grDataType enumerated datatype (in PowerBuilder) specifying whether you want the x or y value of the data point in a scatter graph.
            </param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the fill pattern of a data point.</param>
            <param name="i">The number of the data point for which you want the fill pattern. </param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores a value of the FillPattern enumerated datatype representing the fill pattern used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the symbol type of a data point.</param>
            <param name="i">The number of the data point for which you want the symbol type.</param>
            <param name="m">In PowerBuilder, a variable of type grSymbolType in which you want to store the symbol type.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            Stores, according to the type of symbolvariable, a value of that enumerated datatype representing the symbol used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the width of the line. The width is measured in pixels. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the color of a data point.</param>
            <param name="i">The number of the data point for which you want the color.</param>
            <param name="c">
            A value of the grColorType enumerated datatype (in PowerBuilder) or an integer (in JavaScript) specifying the aspect of the data point for which you want the color.
            </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores an RGB color value in colorvariable. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Reports the percentage of the pie graph's radius that a pie slice is moved away from the center of the pie graph. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control</param>
            <param name="s">The number that identifies the series</param>
            <param name="i">The number of the exploded data point (that is, the pie slice)</param>
            <param name="p">An integer variable in which you want to store the percentage that the pie slice is exploded</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Reports whether a series in a graph is an overlay—whether it is shown as a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the overlay status.</param>
            <param name="o">In PowerBuilder, a boolean variable in which you want to store a value indicating whether the series is an overlay. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  overlayindicator true if the specified series is an overlay and false if it is not. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. In PowerBuilder, stores in fillvariable identifying the fill pattern for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol used for data points in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="m">In PowerBuilder, the variable of type grSymbolType in which you want to store the symbol value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  symbolvariable a value of the grSymbolType enumerated datatype for the symbol used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the line width for seriesname.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">A string whose value is the name of the series for which you want the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color's RGB value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in colorvariable the RGB value of the specified series and item. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.ResetDataColors(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Restores the color of a data point to the default color for its series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control </param>
            <param name="s">The number of the series in which you want to reset the color of a data point</param>
            <param name="i">The number of the data point for which you want to reset the color</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, ResetDataColors returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">
            A value of the SaveAsType enumerated datatype 
            </param>
            <param name="i">A boolean value indicating whether you want column headings with the saved data. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SaveAs returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">A value of the SaveAsType enumerated datatype </param>
            <param name="i">A boolean value indicating whether you want column headings with the saved data. </param>
            <param name="e">Character encoding of the file to which the data is saved. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SeriesCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the number of series</param>
            <returns>
            Returns the number of series in the graph if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SeriesCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SeriesName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the series name associated with the specified series number.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the name of a series</param>
            <param name="s">The number of the series for which you want to obtain the name</param>
            <returns>
            Returns the name assigned to the series. 
            If an error occurs, it returns the empty string (""). 
            If any argument's value is null, SeriesName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Explodes a pie slice in a pie graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control in which you want to explode a pie slice.</param>
            <param name="s">The number that identifies the series.</param>
            <param name="i">The number of the data point (that is, the pie slice) to be exploded.</param>
            <param name="p">A number between 0 and 100 which is the percentage of the radius that the pie slice is moved away from the center. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer whose value is the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the color of a data point.</param>
            <param name="i">The number of the data point for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">A long whose value is the new color for colortype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Specifies whether a series is an overlay, meaning that the series is represented by a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string (PowerBuilder) or integer (Web ActiveX) whose value is the name of the series whose overlay status you want to change.</param>
            <param name="o">A boolean value indicating whether you want the series to be an overlay, </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer specifying the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the item for which you want to set the color.</param>
            <param name="v">A long specifying an RGB value for the new color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataStore.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataStore.Object">
            <summary>
            Gets the object
            
            The Object property of the DataWindow control lets you specify expressions that refer directly to the data of the DataWindow object in the control. 
            This direct data manipulation allows you to access small and large amounts of data in a single statement, without calling methods.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataStore.DataObject">
            <summary>
            Gets or sets the dataobject
            
            The name of the DataWindow object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataStore.FlowDirection">
            <summary>
            Gets or sets the righttoleft
            
            The RightToLeft property specifies that characters should be displayed in right-to-left order. 
            The application must be running on an operating system that supports right-to-left display.
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.DBErrorEvent">
            <summary>
            DB Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.ItemChangedEvent">
            <summary>
            Item Changed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.ItemErrorEvent">
            <summary>
            Item Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.PrintEndEvent">
            <summary>
            Print End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.PrintPageEvent">
            <summary>
            Print Page Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.PrintStartEvent">
            <summary>
            Print Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.RetrieveEndEvent">
            <summary>
            Retrieve End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.RetrieveRowEvent">
            <summary>
            Retrieve Row Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.RetrieveStartEvent">
            <summary>
            Retrieve Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.SQLPreviewEvent">
            <summary>
            SQL Preview Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.UpdateEndEvent">
            <summary>
            Update End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataStore.UpdateStartEvent">
            <summary>
            Update Start Event
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBWindowOpener">
            <summary>
            the PBWindowOpener class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.Open(Sybase.PowerBuilder.WPF.PBWindow,System.Boolean)">
            <summary>
            open a window
            </summary>
            <param name="w">the window to be opened </param>
            <param name="newWindow">if it is a new window </param>
            <returns> result of open operation </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.Open(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.WPF.PBWindow,System.Boolean)">
            <summary>
            open a window with parent
            </summary>
            <param name="o"> the window to be opened </param>
            <param name="p"> the parent in which to open</param>
            <param name="newWindow"> if it is a new window </param>
            <returns>result of operation </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.GetParentWindow(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Get the parent window
            </summary>
            <param name="p"> the window to get the parent window </param>
            <returns> the parent window </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.OpenChildWindow(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            open child window in parent window's panel
            </summary>
            <param name="parentWindow">the parent window</param>
            <param name="childWindow">the child window</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.OpenSheetInTabPage(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.WPF.Controls.WindowTab,Sybase.PowerBuilder.WPF.Controls.MDIClient)">
            <summary>
            open the sheet window in a tabpage
            </summary>
            <param name="sheet">the sheet window</param>
            <param name="tab">the window tab</param>
            <param name="mdiClient">the mdiframe's mdiclient</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.BringToTopChildWidnow(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            bring to top of the child window
            </summary>
            <param name="w">the child window</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.BringToBottomChildWidnow(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            bring to bottom of the child window
            </summary>
            <param name="w">the child window</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWindowOpener.CenterChildWindow(Sybase.PowerBuilder.WPF.PBWindow,Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Center the child window in parent window
            </summary>
            <param name="w">the child window</param>
            <param name="panel">the parent window</param>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.InterOpInvokeGDI32">
            <summary>
            This class shall keep the GDI32 APIs used in our program.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.InterOpInvokeUSER32">
            <summary>
            This class shall keep the User32 APIs used in our program.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.InterOpCaptureScreen">
            This class shall keep all the functionality for capturing the desktop.
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.InterOpCaptureScreen.GetPartDesktopImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy  a part of the whole screen
            </summary>
            <param name="x">X screen coordinate value on the screen</param>
            <param name="y">Y screen coordinate value on the screen</param>
            <param name="w">The width of image will be copied</param>
            <param name="h">The Height of image will be copied</param>
            <returns>Returns Bitmap object if it succeeds and null if failed.</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBRadioButton">
            <summary>
            The PBRadioButton class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.wpfRadioButton">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRadioButton.bCanTriggerClick">
            <summary>
            flag indicates if the click event can be triggerred or not
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.#ctor">
            <summary>
            The contructor of PBRadioButton
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.OnDestroy">
            <summary>
            To clear the memory used by the control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.WPFRadioButton_Constructor(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.OnPreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Set the flag to prepare fire click event 
            </summary>
            <param name="sender">The control sent out the clicked event</param>
            <param name="e">The Preview mouse down event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.OnRadioButton_Clicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            To precess clicked event of radiobutton
            </summary>
            <param name="sender">The radiobutton control</param>
            <param name="e">The clicked event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.WPFRadioButton_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the LostFocus event
            </summary>
            <param name="sender">The control sent out the LostFocus event</param>
            <param name="e">The LostFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRadioButton.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.ClickedEvent">
            <summary>
            Clicked Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRadioButton.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Automatic">
            <summary>
            Gets or sets a value indicating whether the control becomes dark when it is clicked. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.BackColor">
            <summary>
            Gets or sets the numeric value of the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Checked">
            <summary>
            Gets or sets a value indicating whether the control is selected. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.LeftText">
            <summary>
            Gets or sets a value indicating whether the text displays on the left of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Pointer">
            <summary>
            Gets or sets the name of the stock pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.RightToLeft">
            <summary>
            Gets or sets a value indicating whether characters should be displayed in right-to-left order
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.Text">
            <summary>
            Gets or sets the text that displays next to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRadioButton.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMenu">
            <summary>
            The PBMenu class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.helpEvent">
            <summary>
            help event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.selectedEvent">
            <summary>
            selected event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.updatedEvent">
            <summary>
            updated event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.fontCharSet">
            <summary>
            the fontCharSet of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.fontFamily">
            <summary>
            the fontFamily of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.fontPitch">
            <summary>
            the fontPitch of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarBackColor">
            <summary>
            the toolbarBackColor of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarGradient">
            <summary>
            the toolbarGradient of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarHighlightColor">
            <summary>
            the toolbarHighlightColor of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarStyle">
            <summary>
            the toolbarStyle of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarTextColor">
            <summary>
            the toolbarTextColor of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.item">
            <summary>
            the items collection
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.parentWindow">
            <summary>
            the parent window of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemBarIndex">
            <summary>
            the toolbarItemBarIndex of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemOrder">
            <summary>
            the toolbarItemOrder of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemSpace">
            <summary>
            the toolbarItemSpace of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemText">
            <summary>
            the toolbarItemText of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemVisible">
            <summary>
            the toolbarItemVisible of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.pbmenuType">
            <summary>
            the menutype of the menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.wpfMenu">
            <summary>
            the real inner wpf Menu object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.wpfButton">
            <summary>
            the real wpf toolbar button object 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.wpfComboBoxButton">
            <summary>
            the real wpf ComboBox toolbar butoon object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbars">
            <summary>
            A main menu may be associated with some ToolBars.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.buttonIndex">
            <summary>
            Mapping from ToolBarButtons to MenuItems
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.reordered">
            <summary>
            the flag indicating whether the items has been reordered.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarList">
            <summary>
            the sorted toolbarlist;
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.orderChanged">
            <summary>
            the flag indicating the order is changed.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.toolbarItemNo">
            <summary>
            the No of the toolbarItem
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.needsUpdate">
            <summary>
            the flag indicating update event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.thisLock">
            <summary>
            the lock object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.#ctor">
            <summary>
            The contructor of PBMenu
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.clicked">
            <summary>
            stub of clicked method
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.help(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of help method
            </summary>
            <param name="xpos">the distance of the Help message from the left edge of the screen</param>
            <param name="ypos">the distance of the Help message from the top of the screen</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.selected">
            <summary>
            stub of selected method
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.Check">
            <summary>
            Displays a checkmark next to a menu item in a drop-down or cascading menu 
            and sets the menu item's Checked property to true.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.Disable">
            <summary>
            Disables an item on a menu.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.Enable">
            <summary>
            Enables an item on a menu
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.Hide">
            <summary>
            Hides an item on a menu
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnDestroy">
            <summary>
            the OnDestroy event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.PopMenu(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Displays a menu at the specified location.
            </summary>
            <param name="x">The distance in PowerBuilder units of the displayed menu from the left edge of the window</param>
            <param name="y">The distance in PowerBuilder units of the displayed menu from the top of the window</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, PopMenu returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.Show">
            <summary>
            Showes an item on a menu
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.UnCheck">
            <summary>
            Removes the check mark, if any, next to an item a drop-down or cascading menu 
            and sets the item's Checked property to false.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ApplyWPFToolbarList">
            <summary>
            Apply WPF toolbar list
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.CreateMenu(Sybase.PowerBuilder.WPF.PBMenu.MenuType)">
            <summary>
            Create Menu object
            </summary>
            <param name="type">the type of the menu</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.GetToolbar(System.Int32)">
            <summary>
            Get the specified toolbar
            </summary>
            <param name="index">the specified index</param>
            <returns>Toolbar object</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.GetToolbarList">
            <summary>
            Get sorted toolbars
            </summary>
            <returns>toolbar list</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ReorderToolbarButtons">
            <summary>
            Reorder Toolbar buttons
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ReorderToolbarButtons(Sybase.PowerBuilder.WPF.Controls.Toolbar)">
            <summary>
            Reorder the buttons in the toolbar
            </summary>
            <param name="toolbar">the toolbar object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.SortToolbar(System.Collections.Hashtable)">
            <summary>
            sort the toolbars
            </summary>
            <param name="toolbars">the toolbar hashtable</param>
            <returns>the result arraylist</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ToolBarIsBuilt">
            <summary>
            judge whether the toolbar is built
            </summary>
            <returns>the result</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.AddToolbarButtons(System.Collections.Hashtable,System.Collections.Hashtable)">
            <summary>
            Add toolbarbuttons into toolbar
            </summary>
            <param name="toolbars">toolbar list</param>
            <param name="buttonIndex">button list</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.DoShiftToRight">
            <summary>
            process shifttoright 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.GetToolbar(System.Collections.Hashtable,System.Int32)">
            <summary>
            Get the specified toolbar
            </summary>
            <param name="toolbars">the toolbar hashtable</param>
            <param name="no">the specified no</param>
            <returns>Toolbar object</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.InitMenu(Sybase.PowerBuilder.WPF.PBMenu.MenuType)">
            <summary>
            init menu object
            </summary>
            <param name="type">the type of the menu</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.MoveToMenuCascade">
            <summary>
            Move to menucascade object
            </summary>
            <returns>true: successful  false:failed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnAddMenuItem(System.Object)">
            <summary>
            the OnAddMenuItem event handler
            </summary>
            <param name="o">the object that will be added</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ReorderMenuItem">
            <summary>
            Reorder the items 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ReorderRootMenuItem">
            <summary>
            Reorder the items of RootMenu
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.AddSeparatorsForToolbar(Sybase.PowerBuilder.WPF.Controls.Toolbar)">
            <summary>
            Add the seperators for a specified toolbar
            </summary>
            <param name="toolbar">the toolbar</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.AddButtonToToolbar(Sybase.PowerBuilder.WPF.Controls.Toolbar,System.Object)">
            <summary>
            Add a button to the specified toolbar
            </summary>
            <param name="toolbar">the toolbar</param>
            <param name="o">the menu object</param>
            <returns>the index value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ApplyToolbarSettings">
            <summary>
            Apply the settings for the toolbar
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ClearToolbars">
            <summary>
            Clear array object related to Toolbar
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.GetToolbars">
            <summary>
            Get unsorted toolbars
            </summary>
            <returns>toolbar list</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.InitEvent">
            <summary>
            init event 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.FindMenuCascade(Sybase.PowerBuilder.WPF.PBMenu)">
            <summary>
            Find the first MenuCascade from up to bottom.
            </summary>
            <param name="possibleResult">default result</param>
            <returns>pbmenu object</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.SetPropertyDefaultValue">
            <summary>
            Specify the default value for the properties
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.SetSeparatorVisibility(System.Windows.Visibility)">
            <summary>
            Set the visibility of the toolbar separators
            </summary>
            <param name="visibility">the visibility value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.updateMenuEvent">
            <summary>
            Snippet Threading to trigger idle event
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the onclick event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnHelp(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the onhelp event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnSelect(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the onselect event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.OnSubmenuOpened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the OnSubmenuOpened event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.PBMenu_ToolbarSettingsChanged(System.Object,System.EventArgs)">
            <summary>
            Callback method of ToolbarSettingsChanged
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenu.ItemChangeMicroHelp(System.String)">
            <summary>
            pass the event from menu item to mainmenu.
            </summary>
            <param name="helpString"></param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMenu.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMenu.HelpEvent">
            <summary>
            Help Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMenu.SelectedEvent">
            <summary>
            Selected Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBMenu.UpdatedEvent">
            <summary>
            Updated Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.BitmapBackColor">
            <summary>
            Gets or sets background color of the bitmap band of the menu.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.BitmapGradient">
            <summary>
            Gets or sets a value indicating whether background of the bitmap band to a gradient style.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuAnimation">
            <summary>
            Gets or sets a value indicating whether visual sizing cue to the menu item 
            bitmap when the associated menu item is selected.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuBackColor">
            <summary>
            Gets or sets background color of the menu. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuBitmaps">
            <summary>
            Gets or sets a value indicating whether there is a bitmap band for the menu. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuFocusable">
            <summary>
            Gets or sets a value indicating whether the menu can get the focus. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuHighlightColor">
            <summary>
            Gets or sets menu highlight color.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuImage">
            <summary>
            Gets or sets the bitmap image to be used with the menu item.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuStyle">
            <summary>
            Gets or sets overall menu style.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuTextColor">
            <summary>
            Gets or sets menu text color.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuTitles">
            <summary>
            Gets or sets a value indicating whether there is a menu titles band.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuTitleText">
            <summary>
            Gets or sets label for a menu item that has a cascading submenu. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.TitleBackColor">
            <summary>
            Gets or sets background color of the title panel. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.TitleGradient">
            <summary>
            Gets or sets a value indicating whether background gradient style band the title panel.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarAnimation">
            <summary>
            Gets or sets a value indicating whether animation band the toolbar image.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarBackColor">
            <summary>
            Gets or sets background color of the menu toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarGradient">
            <summary>
            Gets or sets a value indicating whether the menu toolbar background is Gradient.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarHighlightColor">
            <summary>
            Gets or sets highlight color for the toolbar buttons when they are selected. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarStyle">
            <summary>
            Gets or sets overall style of the menu toolbar. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarTextColor">
            <summary>
            Gets or sets color of the text in menu toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Checked">
            <summary>
            Gets or sets a value indicating whether the Menu object is selected.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Default">
            <summary>
            Gets or sets a value indicating whether the menu item is the default and appears in a bold typeface. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Enabled">
            <summary>
            Gets or sets a value indicating whether the Menu object is enabled
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Item">
            <summary>
            Gets the Menu objects under a Menu object.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MenuItemType">
            <summary>
            Gets or sets special Menu objects that are used differently on different platforms. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MergeOption">
            <summary>
            Gets or sets how the object is affected when an OLE object is activated. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.MicroHelp">
            <summary>
            Gets or sets the text of the MicroHelp for the object.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ParentWindow">
            <summary>
            Gets or sets the window that owns the Menu object.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ShiftToRight">
            <summary>
            Gets or sets a value indicating whether the Menu object shifts down or to the 
            right when other Menu objects are added in a descendent menu. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Shortcut">
            <summary>
            Gets or sets the shortcut key for the Menu object. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Text">
            <summary>
            Gets or sets the text in the Menu object.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemBarIndex">
            <summary>
            Gets or sets which toolbar the Menu object is on when multiple toolbars exist.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemDown">
            <summary>
            Gets or sets a value indicating how the toolbar button appears.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemDownName">
            <summary>
            Gets or sets the name of the toolbar icon associated with the Menu object when it is down.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemName">
            <summary>
            Gets or sets the name of a stock toolbar picture you want to use to represent an 
            item in the toolbar or a string containing the name of a bitmap file.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemOrder">
            <summary>
            Gets or sets the order of the item in the toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemSpace">
            <summary>
            Gets or sets the amount of empty space before the item in the toolbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemText">
            <summary>
            Gets or sets the text that displays in the toolbar item when the display text option is on for toolbars.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemVisible">
            <summary>
            Gets or sets a value indicating whether the toolbar item displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.Visible">
            <summary>
            Gets or sets a value indicating whether the control is visible
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.WpfMenu">
            <summary>
            Gets the inner control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.RootMenu">
            <summary>
            Gets the root menu object from any sub menu.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.ToolbarItemNo">
            <summary>
            Gets or sets the No of the toolbar item
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenu.PBMenuType">
            <summary>
            Gets or sets a value indicating whether the toolbar item displays.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMenu.MenuType">
            <summary>
            the enum of MenuType
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.MenuType.MainMenu">
            <summary>
            the root menu
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenu.MenuType.MenuItem">
            <summary>
            the menu item 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBGroupBox">
            <summary>
            The PBGroupBox class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGroupBox.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGroupBox.wpfGroupBox">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.#ctor">
            <summary>
            The contructor of PBGroupBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.OnDestroy">
            <summary>
            To clear the memory used
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGroupBox.WPFGroupBox_Constructor(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGroupBox.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGroupBox.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGroupBox.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.BackColor">
            <summary>
            Gets or sets the numeric value of the background color.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the text of the GroupBox is visible or grayed. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the 
            pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.RightToLeft">
            <summary>
            Gets or sets a value indicating whether the characters should be displayed in right-to-left order. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.Text">
            <summary>
            Gets or sets the text that displays in the control title.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGroupBox.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDropDownListBox">
            <summary>
            The DropDownListBox class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.modifiedEvent">
            <summary>
            modified event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.selectionChangedEvent">
            <summary>
            selectionChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.wpfDropDownListBox">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.item">
            <summary>
            the array holding the item string
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.textHasChanged">
            <summary>
            The variable specifies whether text has changed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.stopSelectionChangedEvent">
            <summary>
            The variable specifies whether stop SelectionChangedEvent
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownListBox.stopTextChangedEvent">
            <summary>
            The variable specifies whether stop TextChangedEvent
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.#ctor">
            <summary>
            The contructor of PBDropDownListBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.modified">
            <summary>
            stub of modified method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.selectionchanged(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of selectionchanged method
            </summary>
            <param name="i">the index of the item that has become selected</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.AddItem(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a new item to the list of values in a list box.
            </summary>
            <param name="s">A string whose value is the text of the item you want to add.</param>
            <returns>
            Integer. Returns the position of the new item. 
            If the list is sorted, the position returned is the position of the item after the list is sorted. 
            Returns -1 if it fails. If any argument's value is null, AddItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Clear">
            <summary>
            Clears the selected text from the control (but does not place it in the clipboard).
            </summary>
            <returns>
            For edit controls, returns the number of characters that Clear removed. 
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Copy">
            <summary>
            Copies (but does not delete) the selected text from the control to the clipboard.
            </summary>
            <returns>
            For edit controls, Copy returns the number of characters that were copied to the clipboard.
            If no text is selected in objectref, no characters are copied and Copy returns 0.
            If an error occurs, Copy returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Cut">
            <summary>
            Cuts (deletes) the selected text (if any) from the control and places it in the clipboard.
            </summary>
            <returns>
            For editable control, Cut returns the number of characters that were cut from control and stored in the clipboard.
            If no text is selected, no characters are cut and Cut returns 0. If an error occurs, Cut returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.DeleteItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes the item indicated by the index from the ListBox portion of the control.
            </summary>
            <param name="i">The position number of the item you want to delete.</param>
            <returns>
            Returns the number of items remaining in the list of values after the item is deleted.
            If an error occurs, DeleteItem returns -1. If any argument's value is null, DeleteItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBUInt)">
            <summary>
            Populates the ListBox portion of the DropDownListBox with a list of the files of the specified
            type that match the specified file pattern.
            </summary>
            <param name="s">
            A string whose value is the file pattern. This is usually a mask (for example, *.INI or *.TXT).
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            </param>
            <returns>
            Boolean. Returns true if the search path is valid so that the ListBox is populated or the list is empty.
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path).
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.WPF.PBStaticText)">
            <summary>
            Populates the ListBox portion of the DropDownListBox with a list of the files of the specified
            type that match the specified file pattern.
            </summary>
            <param name="s">
            A string whose value is the file pattern. This is usually a mask (for example, *.INI or *.TXT).
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            </param>
            <param name="t">The name of the StaticText in which you want to display the current drive and directory.</param>
            <returns>
            Boolean. Returns true if the search path is valid so that the ListBox is populated or the list is empty.
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path).
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.DirSelect(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves the current selection from the specified control and puts it in the specified variable.
            </summary>
            <param name="str">A string variable in which the selected path name will be put.</param>
            <returns>
            Boolean. Returns true if the current selection is a drive letter or a directory name (which can contain files and other directories)
            and false if it is a file (indicating the user's final choice). If any argument's value is null, DirSelect returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.FindItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds the first item in the ListBox portion of the control (after the specified index) that begins with a specified string.
            </summary>
            <param name="s">A string whose value is the starting text of the item you want to find.</param>
            <param name="i">The number of the item just before the first item to be searched. To search the whole list, specify 0.</param>
            <returns>
            Returns the index of the first matching item. To match, the item must start with the specified text; however, the text in the item can be longer than the specified text.
            If no match is found or if an error occurs, FindItem returns -1. If any argument's value is null, FindItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Adds a new item to the ListBox portion of the DropDownListBox before the item indicated by the index.
            </summary>
            <param name="s">A string whose value is the text of the item you want to insert.</param>
            <param name="i">The number of the item in the list before which you want to insert the item.</param>
            <returns>
            Returns the final position of the item. Returns -1 if an error occurs.
            If any argument's value is null, InsertItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Paste">
            <summary>
            Inserts the contents of the clipboard (if any) at the cursor location in the control.
            </summary>
            <returns>
            For edit controls, returns the number of characters that were pasted into control.
            If nothing has been cut or copied (the clipboard is empty), the Paste function does not change the contents of the edit control and returns 0.
            If the clipboard contains nontext data and the control cannot accept that data, Paste does not change the contents and returns 0.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Position">
            <summary>
            Returns the position of the cursor in the control.
            </summary>
            <returns>
            Returns the location of the insertion point in control if it succeeds and -1 if an error occurs. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the selected text in the control with the specified string.
            </summary>
            <param name="text">The string that replaces the selected text.</param>
            <returns>
            Returns the number of characters in string and -1 if an error occurs. 
            If any argument's value is null, ReplaceText returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.Reset">
            <summary>
            Deletes all items from the control.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectedLength">
            <summary>
            Returns the length of the selected text in the control.
            </summary>
            <returns>
            Returns the length of the selected text in editname. If no text is selected, SelectedLength returns 0.
            If an error occurs, it returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectedStart">
            <summary>
            Returns the starting position of the selected text (if any) in the control.
            </summary>
            <returns>
            Long. Returns the starting position of the selected text in control.
            If no text is selected, SelectedStart returns the position of the character
            immediately following the insertion point. If an error occurs, SelectedStart returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectedText">
            <summary>
            Returns a string containing the selected text (if any) from the control (the AllowEdit property must be true).
            </summary>
            <returns>
            String. Returns the selected text in control. If there is no selected text or if an error occurs, SelectedText returns the empty string ("").
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds and highlights an item in the control.
            </summary>
            <param name="i">An integer whose value is the location (index) of the item in the ListBox portion of the drop-down list.</param>
            <returns>
            Returns the index number of the selected item. SelectItem returns 0 if index is not valid or if you specified 0 in order to clear the selected item. 
            It returns -1 if an error occurs. If any argument's value is null, SelectItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds and highlights an item in the control.
            </summary>
            <param name="s">A string whose value is the starting text of the item you want to select.</param>
            <param name="i">The number of the item after which you want to begin the search.</param>
            <returns>
            Returns the index number of the selected item. If no match is found, SelectItem returns 0;
            it returns -1 if an error occurs. If any argument's value is null, SelectItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectText(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Selects the text in the control specified by the starting position and length; when the control has focus, highlights the text.
            </summary>
            <param name="x">A long specifying the position at which you want to start the selection.</param>
            <param name="y">A long specifying the number of characters you want to select.</param>
            <returns>
            Returns the number of characters selected. If an error occurs, SelectText returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.SetFocus">
            <summary>
            Sets focus in the first item in the box.
            </summary>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.text(Sybase.PowerBuilder.PBInt)">
            <summary>
            Returns the text of the item in the ListBox portion of the DropDownListBox that is identified by the index.
            </summary>
            <param name="i">The number of the item for which you want the text.</param>
            <returns>
            String. Returns the text of the item in listboxname identified by index. If the index does not point to a valid item number,
            Text returns the empty string (""). If any argument's value is null, Text returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.TotalItems">
            <summary>
            Returns the total number of items in the ListBox portion of the DropDownListBox.
            </summary>
            <returns>
            Integer. Returns the total number of items in control. If control contains no items, TotalItems returns 0.
            If an error occurs, it returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.OnDoubleClicked(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse double clicked event handler
            </summary>
            <param name="sender">The control send out the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.WPFControl_LostKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the lost focus event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The keyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.WPFControl_GotKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the get focus event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The keyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.OnModified(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            The Modified event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownListBox.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Process SelectionChanged event
            </summary>
            <param name="sender">The control sent out the selectionchanged event.</param>
            <param name="e">The selectionchanged event parmameter</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.ModifiedEvent">
            <summary>
            Modified Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDropDownListBox.SelectionChangedEvent">
            <summary>
            SelectionChanged Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Italic">
            <summary>
            Gets or sets a value that indicates whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.UnderLine">
            <summary>
            Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Accelerator">
            <summary>
            Gets or sets the ASCII value of the accelerator key you want to assign as the accelerator for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.AllowEdit">
            <summary>
            Gets or sets a value that indicates whether the user can enter text in the text box portion of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.AutoHScroll">
            <summary>
            Gets or sets a value that indicates whether the text box portion of the 
            control scrolls horizontally automatically when data is entered or deleted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled (can be selected).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.HScrollBar">
            <summary>
            Gets or sets a value that indicates whether a horizontal scroll bar is displayed in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.IMEMode">
            <summary>
            Gets or sets the input method editor mode. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Item">
            <summary>
            Gets the contents of the ListBox portion of the DropDownListBox control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Limit">
            <summary>
            Gets or sets the maximum number of characters the user can enter in the SingleLineEdit
            portion of the DropDownListBox (0 means unlimited).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer that will be used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.ShowList">
            <summary>
            Gets or sets a value that indicates whether the option list always displays in the 
            ListBox portion of the DropDownListBox when the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Sorted">
            <summary>
            Gets or sets a value that indicates whether the ListBox portion of the DropDownListBox 
            is automatically sorted in ascending order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.Text">
            <summary>
            Gets or sets the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.VScrollBar">
            <summary>
            Gets or sets a value that indicates whether a vertical scroll bar is displayed in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownListBox.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBWPFObjectBase">
            <summary>
            base class for those classes derived from non FrameworkElement
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBWPFObjectBase._obj">
            <summary>
            inner object points to actual object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWPFObjectBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWPFObjectBase.BindingEventHandler(System.Reflection.MethodInfo,System.String)">
            <summary>
            BindingEventHandler
            </summary>
            <param name="mi"></param>
            <param name="eventHandlerName"></param>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWPFObjectBase.InnerControl">
            <summary>
            InnerControl
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBPictureListBox">
            <summary>
            The PBPictureListBox class
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBListBox">
            <summary>
            The PBListBox class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.doubleClickedEvent">
            <summary>
            doubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.getFocusEvent">
            <summary>
            getFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.loseFocusEvent">
            <summary>
            loseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.selectionChangedEvent">
            <summary>
            selectionChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.dragDropEvent">
            <summary>
            DragDrop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.dragWithinEvent">
            <summary>
            Drag with event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.wpfControl">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.item">
            <summary>
            the array holding the item string
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.hasfocus">
            <summary>
            To indicate whether the control has a focus
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.canTriggerSelectionChangedEvent">
            <summary>
            Flag to indicate whether the selectionchanged event can be triggered or not
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBListBox.mouseOnScroll">
            <summary>
            Flag to indicate whether the mouse in on scrollbar or not
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.#ctor">
            <summary>
            The contructor of PBListBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.doubleclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of doubleclicked method
            </summary>
            <param name="index">The index of the item the user double-clicked</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub of dragdrop method
            </summary>
            <param name="source">a reference to the control being dragged</param>
            <param name="handle">the handle of the target ListBox control</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of dragwithin method
            </summary>
            <param name="source">a reference to the control being dragged</param>
            <param name="index">a reference to the ListBox item under the pointer in the ListBox control</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.selectionchanged(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of selectionchanged method
            </summary>
            <param name="index">the index of the item that has become selected</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.AddItem(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a new item to the list of values in a list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to add
            </param>
            <returns>
            Returns the position of the new item. 
            If the list is sorted, the position returned is the position of the item after the list is sorted. 
            Returns -1 if it fails. If any argument's value is null, AddItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.DeleteItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes an item from the list of values for a list box control.
            </summary>
            <param name="i">The position number of the item you want to delete</param>
            <returns>
            Returns the number of items remaining in the list of values after the item is deleted. 
            If an error occurs, DeleteItem returns -1. 
            If any argument's value is null, DeleteItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Populates a ListBox with a list of files. 
            </summary>
            <param name="s">
            A string whose value is the file pattern. 
            This is usually a mask (for example, *.INI or *.TXT). 
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            To list several types, add the numbers associated with the types.
            For example, to list read-write files, subdirectories, and drives, use 0+16+16384 or 16400 for filetype.
            </param>
            <returns>
            Returns true if the search path is valid so that the ListBox is populated or the list is empty. 
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path). 
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.WPF.PBStaticText)">
            <summary>
            Populates a ListBox with a list of files.
            You can specify a path, a mask, and a file type to restrict the set of files displayed.
            If the window has an associated StaticText control, DirList can display the current drive and directory as well.
            </summary>
            <param name="s">
            A string whose value is the file pattern. 
            This is usually a mask (for example, *.INI or *.TXT). 
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            To list several types, add the numbers associated with the types.
            For example, to list read-write files, subdirectories, and drives, use 0+16+16384 or 16400 for filetype.
            </param>
            <param name="t">
            The name of the StaticText in which you want to display the current drive and directory.
            </param>
            <returns>
            Returns true if the search path is valid so that the ListBox is populated or the list is empty. 
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path). 
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.DirSelect(Sybase.PowerBuilder.PBString@)">
            <summary>
            When a ListBox has been populated with the DirList function, 
            DirSelect retrieves the current selection and stores it in a string variable.
            </summary>
            <param name="f">A string variable in which the selected path name will be put.</param>
            <returns>
            Returns true if the current selection is a drive letter or a directory name (which can contain files and other directories) 
            and false if it is a file (indicating the user's final choice).
            If any argument's value is null, DirSelect returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.FindItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds the next item in a ListBox that begins with the specified search text.
            </summary>
            <param name="s">
            A string whose value is the starting text of the item you want to find.
            </param>
            <param name="i">
            The number of the item just before the first item to be searched. To search the whole list, specify 0.
            </param>
            <returns>
            Returns the index of the first matching item. 
            To match, the item must start with the specified text;
            However, the text in the item can be longer than the specified text.
            If no match is found or if an error occurs, FindItem returns -1. 
            If any argument's value is null, FindItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item into the list of values in a list box.
            </summary>
            <param name="s">
            A string whose value is the text of the item you want to insert
            </param>
            <param name="i">
            The number of the item in the list before which you want to insert the item
            </param>
            <returns>
            Returns the final position of the item. Returns -1 if an error occurs. 
            If any argument's value is null, InsertItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.Reset">
            <summary>
            Deletes all the items from a list.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If listboxname is null, Reset returns null. 
            The return value is usually not used.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SelectedIndex">
            <summary>
            Obtains the number of the selected item in a ListBox or ListView control.
            </summary>
            <returns>
            Returns the index of the selected item in listcontrolname. 
            If more than one item is selected, SelectedIndex returns the index of the first selected item. 
            If there are no selected items or an error occurs, SelectedIndex returns -1. 
            If  listcontrolname is null, SelectedIndex returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SelectedItem">
            <summary>
            Obtains the text of the selected item in a ListBox control.
            </summary>
            <returns>
            Returns the text of the selected item in listboxname.
            Returns the empty string ("") if no items are selected. 
            If listboxname is null, SelectedItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SelectItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds and highlights an item in a ListBox when you can specify the index number of the item. 
            You can also clear the selection by specifying zero as the index number.
            </summary>
            <param name="i">
            An integer whose value is the location (index) of the item in the ListBox or the ListBox portion of the drop-down list.
            Specify 0 for itemnumber to clear the selected item. 
            For a ListBox or PictureListBox, 0 removes highlighting from the selected item. 
            For a DropDownListBox or DropDownPictureListBox, 0 clears the text box.
            </param>
            <returns>
            Returns the index number of the selected item. 
            SelectItem returns 0 if  itemnumber is not valid or if you specified 0 in order to clear the selected item. 
            It returns -1 if an error occurs. 
            If any argument's value is null, SelectItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SelectItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds and highlights an item in a ListBox from the index number and text is your specified string 		
            </summary>
            <param name="s">
            the item's text your want to selected
            </param>
            <param name="i">
            the index from which you want to seach
            </param>
            <returns>
            Returns the index number of the selected item. 
            SelectItem returns 0 if  itemnumber is not valid or if you specified 0 in order to clear the selected item. 
            It returns -1 if an error occurs. 
            If any argument's value is null, SelectItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SetState(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sets the highlighted state of an item in a list box. 
            SetState is only applicable to a list box control whose MultiSelect property is set to true.
            </summary>
            <param name="index">
            The number of the item for which you want to set the state. 
            Specify 0 to set the state of all the items in the ListBox.
            </param>
            <param name="state">
            A boolean value that determines the state of the item:TRUE - Selected,FALSE - Not selected 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SetState returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.SetTop(Sybase.PowerBuilder.PBInt)">
            <summary>
            Scrolls a list box control so that the specified item is the first visible item.
            </summary>
            <param name="index">
            The number of the item you want to become the first visible item
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SetTop returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.State(Sybase.PowerBuilder.PBInt)">
            <summary>
            Determines whether an item in a ListBox control is highlighted.
            </summary>
            <param name="index">
            The number of the item for which you want to obtain the state
            </param>
            <returns>
             Returns 1 if the item in listboxname identified by index is highlighted and 0 if it is not. 
            If the index does not point to a valid item number, State returns -1. If any argument's value is null, State returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.Text(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the text of an item in a ListBox control.
            </summary>
            <param name="index">The number of the item for which you want the text</param>
            <returns>
            Returns the text of the item in listboxname identified by index. 
            If the index does not point to a valid item number, Text returns the empty string ("").
            If any argument's value is null, Text returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.Top">
            <summary>
            Obtains the index number of the first visible item in a ListBox control.
            Top lets you to find out how the user has scrolled the list.
            </summary>
            <returns>
            Returns the index of the first visible item in listboxname. 
            Top returns -1 if an error occurs. If listboxname is null, Top returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.TotalItems">
            <summary>
            Determines the total number of items in a ListBox control.
            </summary>
            <returns>
            Returns the total number of items in listcontrolname. 
            If  listcontrolname contains no items, TotalItems returns 0. 
            If an error occurs, it returns -1. 
            If listcontrolname is null, TotalItems returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.TotalSelected">
            <summary>
            Determines the number of items in a ListBox control that are selected.
            </summary>
            <returns>
            Returns the number of items in listcontrolname that are selected. 
            If no items in listcontrolname are selected, TotalSelected returns 0. 
            If an error occurs, it returns -1. If listcontrolname is null, TotalSelected returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.OnInitialUpdate">
            <summary>
            Initialize the control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_Constructor(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.OnPreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            If click on the square area of scrollbars, do not trigger event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The mouse left button down event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            If click on the square area of scrollbars, do not trigger event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The mouse left button down event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            To fire the double clicked event
            </summary>
            <param name="sender">The listbox control fires the event </param>
            <param name="e">The double click event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the GetFocus event
            </summary>
            <param name="sender">The control sent out the GetFocus event</param>
            <param name="e">The GetFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_LostKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the lost focus event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The keyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_GotKeyboardFocus(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            To process the get focus event
            </summary>
            <param name="sender">The control</param>
            <param name="e">The keyboardFocusChangedEventArgs</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event, and double clicked event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.WPFControl_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Process SelectionChanged event
            </summary>
            <param name="sender">The control sent out the selectionchanged event.</param>
            <param name="e">The selectionchanged event parmameter</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.CanDrag">
            <summary>
            To determine if the control can be dragged or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBListBox.OnDestroy">
            <summary>
            To clear the memory used by the control
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBListBox.SelectionChangedEvent">
            <summary>
            SelectionChanged Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.BackColor">
            <summary>
            Gets or sets the numeric value of the background color. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Italic">
            <summary>
            Gets or sets a value indicating whether the text in the control is italic. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.UnderLine">
            <summary>
            Gets or sets a value indicating whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Height">
            <summary>
            Gets or sets the Height property of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.PBTag">
            <summary>
            Gets or sets tag value assigned to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.PBWidth">
            <summary>
            Gets or sets the Width property of the control,in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.TabOrder">
            <summary>
            Gets or sets the TabOrder property indicating the tab order value(0 means the user cannot tab to the control).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Visible">
            <summary>
            Gets or sets a value indicating whether the control is visible or not.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.X">
            <summary>
            Gets or sets the X position (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Y">
            <summary>
            Gets or sets the Y position (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Accelerator">
            <summary>
            Gets or sets the ASCII value of the key you want to assign as the accelerator key for a control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.DisableNoScroll">
            <summary>
            Gets or sets a value indicating behavior of a scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.ExtendedSelect">
            <summary>
            Gets or sets a value indicating whether users can select multiple items in the list box at one time.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.HScrollBar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar displays. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Item">
            <summary>
            Gets the items in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.MultiSelect">
            <summary>
            Gets or sets a value indicating whether users can select multiple items in the ListBox at one time. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.RightToLeft">
            <summary>
            Gets or sets a value indicating whether that characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.Sorted">
            <summary>
            Gets or sets a value indicating whether the items in the ListBox are sorted. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.TabStop">
            <summary>
            Gets or sets the positions of the tab stops in the ListBox.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBListBox.VScrollBar">
            <summary>
            Gets or sets a value indicating whether a vertical scroll bar is displayed on the right of the ListBox.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureListBox.itemPictureIndex">
            <summary>
            the array holding the picture index
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureListBox.pictureName">
            <summary>
            the array holding the picture name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureListBox.wpfControl">
            <summary>
            the real inner wpf PictureListBox object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBPictureListBox.item">
            <summary>
            the array holding the item string
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.#ctor">
            <summary>
            The contructor of PBPictureListBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.AddItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Adds a new item to the list of values in a picture list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to add
            </param>
            <param name="p">
            An integer specifying the index of the picture you want to associate with the newly added item
            </param>
            <returns>
            Returns the position of the new item.
            If the list is sorted, the position returned is the position of the item after the list is sorted. 
            Returns -1 if it fails. If any argument's value is null, AddItem returns nul
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.AddPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the main image list.
            </summary>
            <param name="n">
            The name of the icon, cursor, or bitmap you want to add to the main image list
            </param>
            <returns>
            Returns the picture index number if it succeeds 
             -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DeletePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a picture from the image list
            </summary>
            <param name="i">
            The index number of the picture you want to delete from the TreeView control's image list
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DeletePictures">
            <summary>
            Deletes all pictures from an image list
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item into the list of values in a list box.
            </summary>
            <param name="s">
            A string whose value is the text of the item you want to insert
            </param>
            <param name="i">
            The number of the item in the list before which you want to insert the item
            </param>
            <returns>
            Returns the final position of the item. Returns -1 if an error occurs. 
            If any argument's value is null, InsertItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.OnInitialUpdate">
            <summary>
            Initialize the control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            inserts an item into the list of values in a picture list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to insert
            </param>
            <param name="p">
            An integer specifying the index of the picture you want to associate with the newly added item
            </param>
            <param name="index">
            The number of the item in the list before which you want to insert the item
            </param>
            <returns>
            Returns the final position of the item. 
            Returns -1 if an error occurs. 
            If any argument's value is null, InsertItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.AddItem(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a new item to the list of values in a list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to add
            </param>
            <returns>
            Returns the position of the new item. 
            If the list is sorted, the position returned is the position of the item after the list is sorted. 
            Returns -1 if it fails. If any argument's value is null, AddItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DeleteItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes an item from the list of values for a list box control.
            </summary>
            <param name="i">The position number of the item you want to delete</param>
            <returns>
            Returns the number of items remaining in the list of values after the item is deleted. 
            If an error occurs, DeleteItem returns -1. 
            If any argument's value is null, DeleteItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Populates a ListBox with a list of files. 
            </summary>
            <param name="s">
            A string whose value is the file pattern. 
            This is usually a mask (for example, *.INI or *.TXT). 
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            To list several types, add the numbers associated with the types.
            For example, to list read-write files, subdirectories, and drives, use 0+16+16384 or 16400 for filetype.
            </param>
            <returns>
            Returns true if the search path is valid so that the ListBox is populated or the list is empty. 
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path). 
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DirList(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.WPF.PBStaticText)">
            <summary>
            Populates a ListBox with a list of files.
            You can specify a path, a mask, and a file type to restrict the set of files displayed.
            If the window has an associated StaticText control, DirList can display the current drive and directory as well.
            </summary>
            <param name="s">
            A string whose value is the file pattern. 
            This is usually a mask (for example, *.INI or *.TXT). 
            If you include a path, it becomes the current drive and directory.
            </param>
            <param name="f">
            An unsigned integer representing one or more types of files you want to list in the ListBox. 
            Types are:
                 0 - Read/write files 1 - Read-only files 2 - Hidden files
                 4 - System files  16 - Subdirectories   32 - Archive (modified) files
                 16384 - Drives 32768 - Exclude read/write files from the list
            To list several types, add the numbers associated with the types.
            For example, to list read-write files, subdirectories, and drives, use 0+16+16384 or 16400 for filetype.
            </param>
            <param name="t">
            The name of the StaticText in which you want to display the current drive and directory.
            </param>
            <returns>
            Returns true if the search path is valid so that the ListBox is populated or the list is empty. 
            DirList returns false if the ListBox cannot be populated (for example, filespec is a file, not a directory, or specifies an invalid path). 
            If any argument's value is null, DirList returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.DirSelect(Sybase.PowerBuilder.PBString@)">
            <summary>
            When a ListBox has been populated with the DirList function, 
            DirSelect retrieves the current selection and stores it in a string variable.
            </summary>
            <param name="f">A string variable in which the selected path name will be put.</param>
            <returns>
            Returns true if the current selection is a drive letter or a directory name (which can contain files and other directories) 
            and false if it is a file (indicating the user's final choice).
            If any argument's value is null, DirSelect returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.FindItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds the next item in a ListBox that begins with the specified search text.
            </summary>
            <param name="s">
            A string whose value is the starting text of the item you want to find.
            </param>
            <param name="i">
            The number of the item just before the first item to be searched. To search the whole list, specify 0.
            </param>
            <returns>
            Returns the index of the first matching item. 
            To match, the item must start with the specified text;
            However, the text in the item can be longer than the specified text.
            If no match is found or if an error occurs, FindItem returns -1. 
            If any argument's value is null, FindItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.Reset">
            <summary>
            Deletes all the items from a list.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If listboxname is null, Reset returns null. 
            The return value is usually not used.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.SelectedItem">
            <summary>
            Obtains the text of the selected item in a ListBox control.
            </summary>
            <returns>
            Returns the text of the selected item in listboxname.
            Returns the empty string ("") if no items are selected. 
            If listboxname is null, SelectedItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.SelectItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Finds and highlights an item in a ListBox when you can specify the index number of the item. 
            You can also clear the selection by specifying zero as the index number.
            </summary>
            <param name="i">
            An integer whose value is the location (index) of the item in the ListBox or the ListBox portion of the drop-down list.
            Specify 0 for itemnumber to clear the selected item. 
            For a ListBox or PictureListBox, 0 removes highlighting from the selected item. 
            For a DropDownListBox or DropDownPictureListBox, 0 clears the text box.
            </param>
            <returns>
            Returns the index number of the selected item. 
            SelectItem returns 0 if  itemnumber is not valid or if you specified 0 in order to clear the selected item. 
            It returns -1 if an error occurs. 
            If any argument's value is null, SelectItem returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.SetState(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sets the highlighted state of an item in a list box. 
            SetState is only applicable to a list box control whose MultiSelect property is set to true.
            </summary>
            <param name="index">
            The number of the item for which you want to set the state. 
            Specify 0 to set the state of all the items in the ListBox.
            </param>
            <param name="state">
            A boolean value that determines the state of the item:TRUE - Selected,FALSE - Not selected 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SetState returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.SetTop(Sybase.PowerBuilder.PBInt)">
            <summary>
            Scrolls a list box control so that the specified item is the first visible item.
            </summary>
            <param name="index">
            The number of the item you want to become the first visible item
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SetTop returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.State(Sybase.PowerBuilder.PBInt)">
            <summary>
            Determines whether an item in a ListBox control is highlighted.
            </summary>
            <param name="index">
            The number of the item for which you want to obtain the state
            </param>
            <returns>
             Returns 1 if the item in listboxname identified by index is highlighted and 0 if it is not. 
            If the index does not point to a valid item number, State returns -1. If any argument's value is null, State returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.Text(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the text of an item in a ListBox control.
            </summary>
            <param name="index">The number of the item for which you want the text</param>
            <returns>
            Returns the text of the item in listboxname identified by index. 
            If the index does not point to a valid item number, Text returns the empty string ("").
            If any argument's value is null, Text returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.Top">
            <summary>
            Obtains the index number of the first visible item in a ListBox control.
            Top lets you to find out how the user has scrolled the list.
            </summary>
            <returns>
            Returns the index of the first visible item in listboxname. 
            Top returns -1 if an error occurs. If listboxname is null, Top returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.TotalItems">
            <summary>
            Determines the total number of items in a ListBox control.
            </summary>
            <returns>
            Returns the total number of items in listcontrolname. 
            If  listcontrolname contains no items, TotalItems returns 0. 
            If an error occurs, it returns -1. 
            If listcontrolname is null, TotalItems returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.TotalSelected">
            <summary>
            Determines the number of items in a ListBox control that are selected.
            </summary>
            <returns>
            Returns the number of items in listcontrolname that are selected. 
            If no items in listcontrolname are selected, TotalSelected returns 0. 
            If an error occurs, it returns -1. If listcontrolname is null, TotalSelected returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBPictureListBox.OnDestroy">
            <summary>
            To clear the memory used by the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.Item">
            <summary>
            Gets the items in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.ItemPictureIndex">
            <summary>
            Gets the picture index for each item in the Item property array. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.PictureHeight">
            <summary>
            Gets or sets height of the picture, in pixels.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.PictureMaskColor">
            <summary>
            Gets or sets the numeric value of the color to be used to mask user-defined bitmaps.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.PictureName">
            <summary>
            Gets the names of the files containing the pictures added during initialization. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBPictureListBox.PictureWidth">
            <summary>
            Gets or sets width of the picture, in pixels.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOleControl">
            <summary>
            The PBOleControl class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOleControl.#ctor">
            <summary>
            The contructor of PBOleControl
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBM_EventHandler_drag">
            <summary>
            definition of  PBM_EventHandler_drag delegate
            </summary>
            <param name="source"> the source object </param>
            <returns> return long value type</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBM_EventHandler_dragi">
            <summary>
            definition PBM_EventHandler_dragi delegate
            </summary>
            <param name="source">the source object</param>
            <param name="index"> the index parameter </param>
            <returns>return long value type</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBM_EventHandler_dragl">
            <summary>
            definition PBM_EventHandler_dragl delegate
            </summary>
            <param name="source">the source object </param>
            <param name="handle">the handle of the object</param>
            <returns>return long value type</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBM_EventHandler_dragul">
            <summary>
            definition PBM_EventHandler_dragul delegate
            </summary>
            <param name="source">the source object </param>
            <param name="handle">the handle of the object</param>
            <returns>return long value type</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBM_EventHandler_dragdw">
            <summary>
            definition PBM_EventHandler_dragdw delegate
            </summary>
            <param name="source">the source of the object </param>
            <param name="row">the row of the current event</param>
            <param name="dwo">the dwo object source of the event </param>
            <returns>return long value type</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBVScrollBar">
            <summary>
            The PBVScrollBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.lineDownEvent">
            <summary>
            line down event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.lineUpEvent">
            <summary>
            line up event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.loseFocusEvent">
            <summary>
            lost focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.movedEvent">
            <summary>
            moved event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.pageDownEvent">
            <summary>
            page down event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.pageUpEvent">
            <summary>
            page up event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.rbuttonDownEvent">
            <summary>
            right button down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVScrollBar.wpfVScrollBar">
            <summary>
            The inner VScrollBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.#ctor">
            <summary>
            Constructor of PBVScrollBar class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.linedown">
            <summary>
            stub of linedown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.lineup">
            <summary>
            stub of lineup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.moved(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of moved method
            </summary>
            <param name="lscrollPos"> the postion moved </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.pagedown">
            <summary>
            stub of pagedown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.pageup">
            <summary>
            stub of pageup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.OnScroll(System.Object,System.Windows.Controls.Primitives.ScrollEventArgs)">
            <summary>
            The scroll event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVScrollBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.LineDownEvent">
            <summary>
            LineDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.LineUpEvent">
            <summary>
            LineUp event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.MovedEvent">
            <summary>
            Moved event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.PageDownEvent">
            <summary>
            PageDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.PageUpEvent">
            <summary>
            PageUp event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVScrollBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the scroll box is at the bottom of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the scroll box is at the top of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.Position">
            <summary>
            Gets or sets a value between MinPosition and MaxPosition specifying the position of the scroll box.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.StdWidth">
            <summary>
            Gets or sets a value that indicates whether the standard scroll bar width is used for the VScrollBar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVScrollBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBTab">
            <summary>
            The PBTab class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.controlarray">
            <summary>
            the array holding the control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.wpfTab">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.selectedIndex">
            <summary>
            the selected tab local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.hadLoaded">
            <summary>
            the loaded flag local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.hasFocused">
            <summary>
            the focused flag local value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.isConstructored">
            <summary>
            the contructed flag
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.clickedEvent">
            <summary>
            Clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.doubleClickedEvent">
            <summary>
            Doubleclicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.dragDropEvent">
            <summary>
            Dragdrop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.dragWithinEvent">
            <summary>
            DragWithin event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.keyEvent">
            <summary>
            Key event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.loseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.rightClickedEvent">
            <summary>
            RightClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.rightDoubleClickedEvent">
            <summary>
            RightDoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.selectionChangedEvent">
            <summary>
            SelectionChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTab.selectionChangingEvent">
            <summary>
            SelectionChanging event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.#ctor">
            <summary>
            Constructor of Tab
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.clicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of clicked method
            </summary>
            <param name="i">Integer by value (the index of the tab page the user clicked) </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.doubleclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of doubleclicked method
            </summary>
            <param name="i">Integer by value. The index of the item the user double-clicked 
            (for tabs, the index of the tab page).</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of dragdrop method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged) </param>
            <param name="index">Integer by value (the index of the target ListView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of dragwithin method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged)</param>
            <param name="index">Integer by value (a reference to the ListView item under the pointer in
            the ListView control)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.key(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub of key method
            </summary>
            <param name="key">A value of the KeyCode enumerated datatype indicating the key that was pressed </param>
            <param name="keyflags">UnsignedLong by value (the modifier keys that were pressed with the key)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.rightclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rightclicked method
            </summary>
            <param name="i">Integer by value (the index of the item or tab the user clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.rightdoubleclicked(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rightdoubleclicked method
            </summary>
            <param name="i">Integer by value (the index of the item or tab the user double-clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.selectionchanged(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of selectionchanged method
            </summary>
            <param name="i1">Integer by value (the index of the tab that was previously selected)</param>
            <param name="i2">Integer by value (the index of the tab that has become selected)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.selectionchanging(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of selectionchanging method
            </summary>
            <param name="i1">Integer by value (the index of the currently selected tab)</param>
            <param name="i2">Integer by value (the index of the tab that is about to be selected)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTab``1(``0@,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens the specified user object as a tab page, making its properties available to scripts.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">The name of the custom visual user object you want to open as a tab page. </param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenTab returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTab``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens the specified user object as a tab page, making its properties available to scripts.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">The name of the custom visual user object you want to open as a tab page. </param>
            <param name="n">the text of the tab </param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenTabWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">The name of the custom visual user object you want to open as a tab page. </param>
            <param name="a">The parameter you want to store in the Message </param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, OpenTabWithParm returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">A variable of datatype UserObject.</param>
            <param name="a">The parameter you want to store in the Message</param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">A variable of datatype UserObject.</param>
            <param name="a">The parameter you want to store in the Message</param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">A variable of datatype UserObject.</param>
            <param name="a">The parameter you want to store in the Message</param>
            <param name="n">A string whose value is the datatype of the user object you want to open.</param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">A variable of datatype UserObject.</param>
            <param name="a">The parameter you want to store in the Message</param>
            <param name="n">A string whose value is the datatype of the user object you want to open.</param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTabWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
             Opens the user object as a tab page, making its properties available to scripts, and stores a parameter in the Message object.
            </summary>
            <typeparam name="T0"> userobject type object</typeparam>
            <param name="o">A variable of datatype UserObject.</param>
            <param name="a">The parameter you want to store in the Message</param>
            <param name="n">A string whose value is the datatype of the user object you want to open.</param>
            <param name="i">The number of the tab before which you want to insert the new tab.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.MoveTab(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves a tab page to another position in a Tab control, changing its index number.
            </summary>
            <param name="sourceIndex">An integer whose value is the index of the tab you want to move.</param>
            <param name="destIndex">An integer whose value is the index of the destination tab before which source is moved.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.CloseTab(Sybase.PowerBuilder.WPF.PBUserObject)">
            <summary>
            Closes a tab page that was opened with the OpenTab function.
            </summary>
            <param name="o">The name of the user object you want to close</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.SelectTab(Sybase.PowerBuilder.WPF.PBUserObject)">
            <summary>
            Selects the specified tab, displaying its tab page in the Tab control.
            </summary>
            <param name="o">The tab you want to select. You can specify:</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.SelectTab(Sybase.PowerBuilder.PBString)">
            <summary>
            Selects the specified tab, displaying its tab page in the Tab control.
            </summary>
            <param name="tabName">The tab you want to select. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.SelectTab(Sybase.PowerBuilder.PBInt)">
            <summary>
            Selects the specified tab, displaying its tab page in the Tab control.
            </summary>
            <param name="tabIndex">The tab you want to select. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabPostEvent(Sybase.PowerBuilder.PBString)">
            <summary>
            Posts the specified event for each tab page in a Tab control, adding them 
            to the end of the event queues for the tab page user objects.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabPostEvent(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Posts the specified event for each tab page in a Tab control, adding them to the end of 
            the event queues for the tab page user objects.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <param name="w">A long value to be stored in the WordParm property of the system's Message object.</param>
            <param name="l">A long value or a string that you want to store in the LongParm property of the system's Message object.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabPostEvent(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Posts the specified event for each tab page in a Tab control, adding them to the end of 
            the event queues for the tab page user objects.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <param name="w">A long value to be stored in the WordParm property of the system's Message object.</param>
            <param name="l">A long value or a string that you want to store in the LongParm property of the system's Message object.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabPostEvent(Sybase.PowerBuilder.PBTrigEventValue)">
            <summary>
            Posts the specified event for each tab page in a Tab control, adding them to the end of 
            the event queues for the tab page user objects.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabTriggerEvent(Sybase.PowerBuilder.PBString)">
            <summary>
            Triggers the specified event for each tab page in a Tab control, which executes the
            scripts immediately in the index order of the tab pages.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabTriggerEvent(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Triggers the specified event for each tab page in a Tab control, which executes the
            scripts immediately in the index order of the tab pages.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <param name="w">A long value to be stored in the WordParm property of the system's Message object.</param>
            <param name="l">A long value or a string that you want to store in the LongParm property of the system's Message object.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabTriggerEvent(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Triggers the specified event for each tab page in a Tab control, which executes the
            scripts immediately in the index order of the tab pages.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <param name="w">A long value to be stored in the WordParm property of the system's Message object.</param>
            <param name="l">A long value or a string that you want to store in the LongParm property of the system's Message object.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TabTriggerEvent(Sybase.PowerBuilder.PBTrigEventValue)">
            <summary>
            Triggers the specified event for each tab page in a Tab control, which executes the
            scripts immediately in the index order of the tab pages.
            </summary>
            <param name="e">A value of the TrigEvent enumerated datatype that identifies a PowerBuilder event.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TriggerConstructorEvent">
            <summary>
            trigger pb control's constructor event
            </summary>
            <returns>the result of trigger constructor</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.InitializeObjectAndTraceConstructor(System.Object)">
            <summary>
            initialize object and trace constructor event in control
            </summary>
            <param name="o">the target control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnCreate(System.Boolean)">
            <summary>
            the function which will be called on created
            </summary>
            <param name="init">if it should be inited</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnDragDrop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the dragdrop event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            the dragover event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnDragLeave(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragLeave event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnDragEnter(System.Object,System.Windows.DragEventArgs)">
            <summary>
            DragEnter event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the loaded event
            </summary>
            <param name="sender">The control sent out the event</param>
            <param name="e">The loaded event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the click and rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnMouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the doubleclick and rdoublebuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Process the key event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OnSelectedTabChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Int16})">
            <summary>
            the SelectedTabChanged event handler
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">the routed event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.OpenTab(Sybase.PowerBuilder.WPF.PBUserObject,Sybase.PowerBuilder.PBInt)">
            <summary>
            open tab help methos
            </summary>
            <param name="o">the target userobject</param>
            <param name="i">the target index</param>
            <returns>returns 1 if sucessfully</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTab.TriggerSelectionChangedEvent(System.Windows.RoutedPropertyChangedEventArgs{System.Int16})">
            <summary>
            trigger the selection change event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DragEnterEvent">
            <summary>
            DragEnter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.KeyEvent">
            <summary>
            Key event definition
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.OtherEvent">
            <summary>
            Other event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.RightClickedEvent">
            <summary>
            RightClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.RightDoubleClickedEvent">
            <summary>
            RightDoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.SelectionChangedEvent">
            <summary>
            SelectionChanged event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTab.SelectionChangingEvent">
            <summary>
            SelectionChanging event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Alignment">
            <summary>
            Gets or sets the text alignment in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.BoldSelectedText">
            <summary>
            Gets or sets a value that indicates whether the text for the selected tab is bold
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Control">
            <summary>
            Gets or sets the array holding the Control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.CreateOnDemand">
            <summary>
            Gets or sets a value that indicates whether PowerBuilder creates graphical representations of controls on all tab pages when the Tab control is created
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled (can be selected)
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FixedWidth">
            <summary>
            Gets or sets a value that indicates whether tabs have a fixed width, meaning they do not shrink to the length of their text labels
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FocusOnButtonDown">
            <summary>
            Gets or sets a value that indicates whether each tab gets focus when the user clicks on it
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Italic">
            <summary>
            Gets or sets a value that indicates whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Multiline">
            <summary>
            Gets or sets a value that indicates whether the tabs can appear in more than one row.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.PerpendicularText">
            <summary>
            Gets or sets a value that indicates whether the tab labels are drawn perpendicular to the tab page. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.PictureOnRight">
            <summary>
            Gets or sets a value that indicates whether a picture that is part of the tab label is to the right or left of the text. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.PowerTips">
            <summary>
            Gets or sets a value that indicates whether PowerTipText for a tab page is displayed as a PowerTip (a pop-up label for the tab) when the mouse pointer pauses over the tab. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.RaggedRight">
            <summary>
            Gets or sets a value that indicates whether tabs are stretched so that they fill space along the edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.SelectedTab">
            <summary>
            Gets or sets the index number of the selected tab. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.ShowPicture">
            <summary>
            Gets or sets a value that indicates whether the picture selected for each tab is displayed. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.ShowText">
            <summary>
            Gets or sets a value that indicates whether the text specified for each tab label is displayed. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.TabPosition">
            <summary>
            Gets or sets where the tabs appear around the Tab control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Text">
            <summary>
            Gets or sets Text property
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.UnderLine">
            <summary>
            Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTab.InnerControl">
            <summary>
            Gets the inner PB WPF control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox">
            <summary>
            The PBDropDownPictureListBox class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.wpfDropDownPictureListBox">
            <summary>
            The inner DropDownPictureListBox control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.pictureName">
            <summary>
            The array holding the picture name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.itemPictureIndex">
            <summary>
            The array holding the item's picture index
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.#ctor">
            <summary>
            The contructor of PBDropDownPictureListBox
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.AddItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Adds a new item to the list of values in a picture list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to add
            </param>
            <param name="p">
            An integer specifying the index of the picture you want to associate with the newly added item
            </param>
            <returns>
            Returns the position of the new item.
            If the list is sorted, the position returned is the position of the item after the list is sorted. 
            Returns -1 if it fails. If any argument's value is null, AddItem returns nul
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.AddPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the main image list.
            </summary>
            <param name="s">
            The name of the icon, cursor, or bitmap you want to add to the main image list
            </param>
            <returns>
            Returns the picture index number if it succeeds 
             -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.DeletePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a picture from the image list
            </summary>
            <param name="i">
            The index number of the picture you want to delete from the TreeView control's image list
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.DeletePictures">
            <summary>
            Deletes all pictures from an image list
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            inserts an item into the list of values in a picture list box.
            </summary>
            <param name="i">
            A string whose value is the text of the item you want to insert
            </param>
            <param name="p">
            An integer specifying the index of the picture you want to associate with the newly added item
            </param>
            <param name="index">
            The number of the item in the list before which you want to insert the item
            </param>
            <returns>
            Returns the final position of the item. 
            Returns -1 if an error occurs. 
            If any argument's value is null, InsertItem returns null.
            </returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.ItemPictureIndex">
            <summary>
            Gets the picture index for each item in the Item property array.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.PictureHeight">
            <summary>
            Gets or sets the height of the picture, in pixels.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.PictureMaskColor">
            <summary>
            the numeric value of the color to be used to mask user-defined bitmaps added
            through the initial picture array or with the AddPicture function. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.PictureName">
            <summary>
            Gets the names of the files containing the pictures added during initialization.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.PictureWidth">
            <summary>
            Gets or sets the width of the picture, in pixels.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDropDownPictureListBox.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWinFormControlBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBWinFormControlBase.BindingEventHandler(System.String)">
            <summary>
            BindingEventHandler 
            </summary>
            <param name="ehName"></param>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBWinFormControlBase.InnerControl">
            <summary>
            InnerControl
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBVTrackBar">
            <summary>
            The PBVTrackBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.getFocusEvent">
            <summary>
            get focus event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.lineDownEvent">
            <summary>
            line down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.lineUpEvent">
            <summary>
            line up event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.movedEvent">
            <summary>
            move event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.otherEvent">
            <summary>
            other event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.pageDownEvent">
            <summary>
            page down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.pageUpEvent">
            <summary>
            page up event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.rbuttonDownEvent">
            <summary>
            rbuttondown event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVTrackBar.wpfVTrackBar">
            <summary>
            The inner VTrackBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.#ctor">
            <summary>
            The construcotr of PBVTrackBar
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.linedown">
            <summary>
            stub of linedown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.lineup">
            <summary>
            stub of lineup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.moved(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of moved method
            </summary>
            <param name="lscrollPos"> the postion moved </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.pagedown">
            <summary>
            stub of pagedown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.pageup">
            <summary>
            stub of pageup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.SelectionRange(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Highlights a range of contiguous values in a trackbar control.
            The range you select is highlighted in the trackbar channel, with an arrow at each end of the range.
            </summary>
            <param name="startPos">An integer that specifies the starting position of the range.</param>
            <param name="endPos">An integer that specifies the ending position of the range.</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.OnScroll(System.Object,System.Windows.Controls.Primitives.ScrollEventArgs)">
            <summary>
            The scroll event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVTrackBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.LineDownEvent">
            <summary>
            LineDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.LineUpEvent">
            <summary>
            LineUp event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.MovedEvent">
            <summary>
            Moved event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.PageDownEvent">
            <summary>
            PageDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.PageUpEvent">
            <summary>
            PageUp event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVTrackBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.LineSize">
            <summary>
            Gets or sets a value that indicates how far the slider moves in response to keyboard input from the arrow keys.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the slider is at the bottom of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the slider is at the top of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.PageSize">
            <summary>
            Gets or sets a value that indicates how far the slider moves in response
            to clicking in the slider channel area or pressing the Page keys.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.Position">
            <summary>
            Gets or sets a value between MinPosition and MaxPosition specifying the position of the slider.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.Slider">
            <summary>
            Gets or sets a value that indicates whether or not the trackbar contains a slider.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.SliderSize">
            <summary>
            Gets or sets the size of the slider on the trackbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.TickFrequency">
            <summary>
            Gets or sets tick mark frequency.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.TickMarks">
            <summary>
            Gets or sets a value that indicates where tickmarks should be displayed.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVTrackBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBSingleLineEdit">
            <summary>
            The PBSingleLineEdit class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.modifiedEvent">
            <summary>
            Modified event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.rbuttonDownEvent">
            <summary>
            RButtonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.wpfSingleLineEdit">
            <summary>
            The real inner wpf SingleLineEdit object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.singleLineEditTxtChanged">
            <summary>
            the local variable indicating whether the text is changed 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.triggerTextChanged">
            <summary>
            the local variable indicating wheter the property Text or TextCase is changing.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSingleLineEdit.text">
            <summary>
            The local variable hold the text of control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.#ctor">
            <summary>
            Constructor of PBSingleLineEdit class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.modified">
            <summary>
            stub of modified method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.CanUndo">
            <summary>
            Tests whether Undo can reverse the most recent edit for an editable control.
            </summary>
            <returns>
            Returns true if the last edit can be reversed (undone) using the Undo function 
            and false if the last edit cannot be reversed.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control, 
            but does not store it in the clipboard.
            </summary>
            <returns>
            Returns the number of characters that Clear removed from objectname.
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Copy">
            <summary>
            Puts selected text or an OLE object on the clipboard. Copy does not change the source text or object.
            </summary>
            <returns>
            Copy returns the number of characters that were copied to the clipboard. 
            If no text is selected in objectref, no characters are copied and Copy returns 0.
            If an error occurs, Copy returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Cut">
            <summary>
            Deletes selected text or an OLE object from the specified control and stores it on the clipboard, 
            replacing the clipboard contents with the deleted text or object.
            </summary>
            <returns>
            Cut returns the number of characters that were cut from controlname and stored in the clipboard. 
            If no text is selected, no characters are cut and Cut returns 0. 
            If an error occurs, Cut returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control. 
            For editable controls, text on the clipboard is pasted at the insertion point.
            </summary>
            <returns> 
            Returns the number of characters that were pasted into control.
            If nothing has been cut or copied (the clipboard is empty), 
            the Paste function does not change the contents of the edit control and returns 0. 
            If the clipboard contains nontext data (for example, a bitmap or OLE object) 
            and the control cannot accept that data, Paste does not change the contents and returns 0.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Position">
            <summary>
            Determines the position of the insertion point in an edit control.
            </summary>
            <returns>
            Returns the location of the insertion point in control if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in an edit control with a specified string.
            </summary>
            <param name="replString">The string that replaces the selected text.</param>
            <returns>
            Returns the number of characters in string and -1 if an error occurs. 
            If any argument's value is null, ReplaceText returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.SelectedLength">
            <summary>
            Determines the total number of characters in the selected text in an editable control, 
            including spaces and line endings.
            </summary>
            <returns>
            Returns the length of the selected text in control. 
            If no text is selected, SelectedLength returns 0. 
            If an error occurs, it returns -1. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.SelectedStart">
            <summary>
            Reports the position of the first selected character in an editable control.
            </summary>
            <returns>
            Long. Returns the starting position of the selected text in control. 
            If no text is selected, SelectedStart returns the position of the character immediately following the insertion point. 
            If an error occurs, SelectedStart returns -1. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.SelectedText">
            <summary>
            Obtains the selected text in an editable control.
            </summary>
            <returns>
            Returns the selected text in control. 
            If there is no selected text or if an error occurs, SelectedText returns the empty string ("").
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.SelectText(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBULong)">
            <summary>
            Selects text in an editable control. You specify where the selection begins and how many characters to select.
            </summary>
            <param name="selStartIndex">A long specifying the position at which you want to start the selection.</param>
            <param name="noofChars">
            A long specifying the number of characters you want to select. 
            If length is 0, no text is selected but PowerBuilder moves the insertion point to the location specified in start.
            </param>
            <returns>
            Returns the number of characters selected. If an error occurs, SelectText returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Undo">
            <summary>
            Cancels the last edit in an edit control, restoring the text to the content before the last change.
            </summary>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OnInitialUpdate">
            <summary>
            when initialize the SingleLineEdit control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            the MouseDown event hanlder
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object when MouseDown happens</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OnTextModified(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            the TextModified event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            the KeyDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DragEnterEvent">
            <summary>
            DragEnter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.ModifiedEvent">
            <summary>
            Modified event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.OtherEvent">
            <summary>
            Other event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBSingleLineEdit.RButtonDownEvent">
            <summary>
            RButtonDown event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Italic">
            <summary>
            Gets or sets a value that indicates whether the text in the control is italic.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.UnderLine">
            <summary>
            Gets or sets a value that indicates whether the text in the control is underlined.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.TextSize">
            <summary>
            Gets or sets the size of the text in the control, in points.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Weight">
            <summary>
            Gets or sets the stroke weight of the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Accelerator">
            <summary>
            Gets or sets the ASCII value of the key you want to assign as the accelerator key for a control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.AutoHScroll">
            <summary>
            Gets or sets a value that indicates whether the control automatically scrolls horizontally when data is entered or deleted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.DisplayOnly">
            <summary>
            Gets or sets a value that indicates whether the text in the control is display only and cannot be changed by user.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.HideSelection">
            <summary>
            Gets or sets a value that indicates whether selected text stays selected even when the control does not have focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.IMEMode">
            <summary>
            Gets or sets the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Limit">
            <summary>
            Gets or sets the maximum number of character that can be entered in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Password">
            <summary>
            Gets or sets a value that indicates whether the control is a password field.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.RightToLeft">
            <summary>
            Gets or sets a value that indicates whether characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.Text">
            <summary>
            Gets or sets the text that displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.TextCase">
            <summary>
            Gets or sets the case in which text entered in the control display.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSingleLineEdit.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBRectangle">
            <summary>
            The PBRectangle class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRectangle.wpfRect">
            <summary>
            The inner line object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRectangle.#ctor">
            <summary>
            The contructor of PBRectangle
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRectangle.Move(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Moves the control to a specified location.
            </summary>
            <param name="x">The x coordinate of the new location in PowerBuilder units.</param>
            <param name="y">The y coordinate of the new location in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a maximized window.
            If any argument's value is null, Move returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRectangle.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the size of the control.
            </summary>
            <param name="w">The new width in PowerBuilder units.</param>
            <param name="h">The new height in PowerBuilder units.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window.
            If any argument's value is null, Resize returns null.</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.FillColor">
            <summary>
            Gets or sets the numeric value of the color used to fill the control: 2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.FillPattern">
            <summary>
            Gets or sets the hatch pattern used to fill the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.Height">
            <summary>
            Gets or sets the height of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.LineColor">
            <summary>
            Gets or sets the numeric value of the line color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.LineStyle">
            <summary>
            Gets or sets the style of the line used to draw the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.LineThickness">
            <summary>
            Gets or sets the thickness of the line used to draw the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.Width">
            <summary>
            Gets or sets the width of the control, in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.X">
            <summary>
            Gets or sets the X position (the distance from the left edge of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.Y">
            <summary>
            Gets or sets the Y position (the distance from the top of the window), in PowerBuilder units.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRectangle.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBInkPicture">
            <summary>
            The PBInkPicture class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.gestureEvent">
            <summary>
            gesture event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.getFocusEvent">
            <summary>
            getFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.loseFocusEvent">
            <summary>
            loseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.selectionChangedEvent">
            <summary>
            selectionChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.selectionChangingEvent">
            <summary>
            selectionChanging event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.sizeChangedEvent">
            <summary>
            sizeChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.strokeEvent">
            <summary>
            stroke event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.wpfControl">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBInkPicture.canTriggerResizeEvent">
            <summary>
            resize event should not be triggered first time
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.#ctor">
            <summary>
            The contructor of PBInkPicture
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.clicked">
            <summary>
            stub of clicked method
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.gesture(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of gesture method
            </summary>
            <param name="gest">Integer identifying the gesture recognized.</param>
            <returns>Return false to accept the gesture and true to ignore it.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.selectionchanged">
            <summary>
            stub of selectionchanged method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.selectionchanging">
            <summary>
            stub of selectionchanging method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.sizechanged(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of sizechanged method
            </summary>
            <param name="left">the left of the control</param>
            <param name="right">the right of the control</param>
            <param name="top">the top of the control</param>
            <param name="bottom">the bottom of the control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.stroke">
            <summary>
            stub of stroke method
            </summary>
            <returns>Return true to erase the stroke and false otherwise.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.LoadInk(Sybase.PowerBuilder.PBString)">
            <summary>
            Loads ink from a file or blob into an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of a file that contains the ink.</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.LoadInk(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Loads ink from a file or blob into an InkPicture control.
            </summary>
            <param name="b">The name of a blob passed by reference that contains the ink</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.LoadPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Loads a picture from a file or blob into an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of a file that contains the picture</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.LoadPicture(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Loads a picture from a file or blob into an InkPicture control.
            </summary>
            <param name="b">The name of a blob passed by reference that contains the picture</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.ResetInk">
            <summary>
            Clears ink from an InkPicture control.
            </summary>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.ResetPicture">
            <summary>
            Clears a picture from an InkPicture control.
            </summary>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.Save(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Saves a picture and optionally overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of the file into which the picture will be saved.</param>
            <param name="format">the format in which the picture is to be saved. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.Save(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves a picture and optionally overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of the file into which the picture will be saved.</param>
            <param name="format">the format in which the picture is to be saved. </param>
            <param name="withink">whether overlay ink should be saved with the picture.</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.Save(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBInt)">
            <summary>
            Saves a picture and optionally overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">The name of a blob passed by reference that will hold the picture in the control.</param>
            <param name="format">the format in which the picture is to be saved. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.Save(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves a picture and optionally overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">The name of a blob passed by reference that will hold the picture in the control.</param>
            <param name="format">the format in which the picture is to be saved. </param>
            <param name="withink">whether overlay ink should be saved with the picture.</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of a file</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue)">
            <summary>
            Saves ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of a file</param>
            <param name="f">specifies the format in which you want to save the ink. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue,Sybase.PowerBuilder.PBInkCompressionModeValue)">
            <summary>
            Saves ink to a file or blob from an InkPicture control.
            </summary>
            <param name="t">A string containing the name and location of a file</param>
            <param name="f">specifies the format in which you want to save the ink. </param>
            <param name="m">specifies the compression mode in which you want to save the ink. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Saves ink to a file or blob from an InkPicture control.
            </summary>
            <param name="b">The name of a blob passed by reference</param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBInkPersistenceFormatValue)">
            <summary>
            Saves ink to a file or blob from an InkPicture control.
            </summary>
            <param name="b">The name of a blob passed by reference</param>
            <param name="f">specifies the format in which you want to save the ink. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.SaveInk(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBInkPersistenceFormatValue,Sybase.PowerBuilder.PBInkCompressionModeValue)">
            <summary>
            Saves ink to a blob from an InkPicture control.
            </summary>
            <param name="b">The blob reference used to keep the binary data of the ink</param>
            <param name="f">The ink persistence format</param>
            <param name="m">The compress mode used</param>
            <returns>Integer. Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the GetFocus event
            </summary>
            <param name="sender">The control sent out the GetFocus event</param>
            <param name="e">The GetFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Clicked event handler
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">Mousebutton event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Event handler when size of control changed
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">The size changed event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_MouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            When right mouse button is press.
            </summary>
            <param name="sender">The inkpicture</param>
            <param name="e">The mouse button argument</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_SelectionChanging(System.Object,System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
            <summary>
            When the selection is changing. Return 1 to prevent the selection from changing or 0 to allow it
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">Selectionchanaging event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Happends when an item in the control is selected
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">The event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_Gesture(System.Object,System.Windows.Controls.InkCanvasGestureEventArgs)">
            <summary>
            Gesture event handler
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">The gesture event arguments</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.PBInkPicture_StrokesReplaced(System.Object,System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
            <summary>
            The Stroke event handler
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">The event parameter</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.PBInkPicture_StrokeErased(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The Stroke event handler
            </summary>
            <param name="sender">The inkpicture control</param>
            <param name="e">The event parameter</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_StrokeCollected(System.Object,System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
            <summary>
            The Stroke event handler
            </summary>
            <param name="sender">The control </param>
            <param name="e">The stroke event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFInkPicture_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the GetFocus event
            </summary>
            <param name="sender">The control sent out the GetFocus event</param>
            <param name="e">The GetFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFInkPicture_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the LostFocus event
            </summary>
            <param name="sender">The control sent out the LostFocus event</param>
            <param name="e">The LostFocus event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFInkPicture_MouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBInkPicture.WPFControl_TemplateApplied(System.Object,System.EventArgs)">
            <summary>
            When the template applied, hook the folloing event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.GestureEvent">
            <summary>
            Gesture Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.SelectionChangedEvent">
            <summary>
            SelectionChanged Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.SelectionChangingEvent">
            <summary>
            SelectionChanging Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.SizeChangedEvent">
            <summary>
            SizeChanged Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBInkPicture.StrokeEvent">
            <summary>
            Stroke Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.PBTag">
            <summary>
            Gets or sets the tag value assigned to the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.TabOrder">
            <summary>
            Gets or sets the TabOrder property indicating the tab order value.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Visible">
            <summary>
            Gets or sets a value indicating whether the control is visible or not.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.X">
            <summary>
            Gets or sets the X position (distance from left edge of screen).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Y">
            <summary>
            Gets or sets the Y property of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.AutoErase">
            <summary>
            Gets or sets a value indicating whether the auto erase feature available on some styluses is turned on.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.BackColor">
            <summary>
            Gets or sets the numeric value of the background color. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.BorderStyle">
            <summary>
            Gets or sets the border style of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.CollectionMode">
            <summary>
            Gets or sets whether ink only, gestures only, or ink and gestures are collected.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.DynamicRendering">
            <summary>
            Gets or sets a value indicating whether the ink is rendered (displayed in the control) as it is drawn. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.EditMode">
            <summary>
            Gets or sets whether the editing mode of the control is set for drawing ink, editing ink, or deleting ink. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.EraserMode">
            <summary>
            Gets or sets whether ink is removed by stroke or point.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.EraserWidth">
            <summary>
            Gets or sets the width of the eraser pen tip in pixels. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.HighContrastInk">
            <summary>
            Gets or sets a value indicating whether ink is rendered in a single color 
            when the system is in high contrast mode and draws the selection rectangle 
            and handles in high contrast.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.IgnorePressure">
            <summary>
            Gets or sets a value indicating whether the drawn ink gets wider as the 
            pressure of the pen tip on the tablet surface increases. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkAntiAliased">
            <summary>
            Gets or sets a value indicating whether the foreground and background colors 
            along the edge of the drawn ink are blended (antialiased) to make the stroke 
            smoother and sharper.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkColor">
            <summary>
            Gets or sets the current ink color. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkEnabled">
            <summary>
            Gets or sets a value indicating whether the InkPicture control collects pen input. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkFilename">
            <summary>
            Gets or sets the name of the file that the ink was loaded from.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkHeight">
            <summary>
            Gets or sets the height of the side of the rectangular pen tip in pixels.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkTransparency">
            <summary>
            Gets or sets the transparency of drawn ink.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.InkWidth">
            <summary>
            Gets or sets the width of the pen in pixels.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.MarginX">
            <summary>
            Gets or sets the x-axis margin around the control in PowerBuilder units.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.MarginY">
            <summary>
            Gets or sets the y-axis margin around the control in PowerBuilder units. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.PenTip">
            <summary>
            Gets or sets whether the pen tip is round or rectangular. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.PictureFileName">
            <summary>
            Gets or sets the name of a file that contains the picture for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.PictureSizeMode">
            <summary>
            Gets or sets how the picture is displayed in the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.PowerTipText">
            <summary>
            Gets or sets a PowerTip for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBInkPicture.Status">
            <summary>
            Gets a read-only property available at runtime that provides the current status of the control 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager">
            <summary>
            PrintManager class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager.PrintDataWindow(Sybase.PowerBuilder.IPBDataWindowBase,System.Boolean,System.Boolean)">
            <summary>
              document      /// 
            </summary>
            <param name="ds">ds  parameter</param>
            <param name="cancel">cancel parameter</param>
            <param name="showDialog">showdialog  parameter</param>
            <returns> the dummy return value </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager.PrintDataWindow(Sybase.PowerBuilder.IPBDataWindowBase,System.String,System.Boolean,System.Boolean)">
            <summary>
             print datawindow function    ///
            </summary>
            <param name="ds"> ds  parameter</param>
            <param name="documentName"> document Name </param>
            <param name="cancel"> cancel param </param>
            <param name="showDialog"> showdialog  param </param>
            <returns> this is return value </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager.CancelPrintDataWindow(Sybase.PowerBuilder.IPBDataWindowBase)">
            <summary>
            cancel print datawindow 
            </summary>
            <param name="ds"> the datastore </param>
            <returns>result of the operation </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager.SetupPage(System.Drawing.Printing.PrintDocument)">
            <summary>
            setup page function
            </summary>
            <param name="d"> the document to be printed </param>
            <returns>success or not </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.BackPrinting.PrintManager.CreatePendingJob(System.String)">
            <summary>
            the base class of PrintPendingJob
            </summary>
            <param name="jobName">the name of the print job</param>
            <returns>result of operation</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBRichTextEdit">
            <summary>
            The PBRichTextEdit class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.doubleClickedEvent">
            <summary>
            DoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.fileExistsEvent">
            <summary>
            FileExists event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.inputFieldSelectedEvent">
            <summary>
            InputFieldSelected event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.keyEvent">
            <summary>
            Key event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.modifiedEvent">
            <summary>
            DoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.mouseDownEvent">
            <summary>
            MouseDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.mouseMoveEvent">
            <summary>
            MouseMove event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.mouseUpEvent">
            <summary>
            MouseUp event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.pictureSelectedEvent">
            <summary>
            PictureSelected event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.printFooterEvent">
            <summary>
            PrintFooter event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.printHeaderEvent">
            <summary>
            PrintHeader event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.rbuttonDownEvent">
            <summary>
            RButtonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.rbuttonUpEvent">
            <summary>
            RButtonUp event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBRichTextEdit.wpfRichTextEdit">
            <summary>
            the real inner wpf RichTextEdit object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.#ctor">
            <summary>
            Constructor of PBRichTextEdit
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.fileexists(Sybase.PowerBuilder.PBString)">
            <summary>
            stub of fileexsits method
            </summary>
            <param name="s">the file path string</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.inputfieldselected(Sybase.PowerBuilder.PBString)">
            <summary>
            stub of inputfieldselected method
            </summary>
            <param name="s">String by value (the name of the input field that was selected)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.key(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub of key method
            </summary>
            <param name="key">A value of the KeyCode enumerated datatype indicating the key that was pressed </param>
            <param name="keyflags">UnsignedLong by value (the modifier keys that were pressed with the key)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.modified">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.mousedown">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.mousemove">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.mouseup">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="ul"> UnsignedLong by value </param>
            <param name="l"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.pictureselected">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.printfooter(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of printfooter method, the PrintHeader and PrintFooter events are obsolete.
            </summary>
            <param name="l1">The parameter is not used.</param>
            <param name="l2">The parameter is not used.</param>
            <param name="l3">The parameter is not used.</param>
            <returns>The PrintHeader and PrintFooter events are obsolete.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.printheader(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
             stub of printheader method,the PrintHeader and PrintFooter events are obsolete.
            </summary>
            <param name="l1">The parameter is not used.</param>
            <param name="l2">The parameter is not used.</param>
            <param name="l3">The parameter is not used.</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.rbuttondown">
            <summary>
            stub of rbuttondown method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.rbuttonup">
            <summary>
            stub of rbuttonup method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.CanUndo">
            <summary>
            Tests whether Undo can reverse the most recent edit for an editable control.
            </summary>
            <returns>Returns true if there is an editing function that can be undone.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control, but does not store it in the clipboard.
            </summary>
            <returns>returns the number of characters that Clear removed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Clear(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Deletes selected text, but does not store it in the clipboard.
            </summary>
            <param name="s">A boolean value indicated whether to remove the selected grid row.</param>
            <returns>returns the number of characters that Clear removed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ClearAll">
            <summary>
            Deletes selected text or an OLE object from the specified control, but does not store it in the clipboard.
            </summary>
            <returns>returns the number of characters that Clear removed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Copy">
            <summary>
            Copies (but does not delete) the selected contents of the RichTextEdit control (if any) to the clipboard.
            </summary>
            <returns>Copy returns a long.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.CopyRTF">
            <summary>
            Copies the selected contents of the RichTextEdit control to a string in rich text format.
            </summary>
            <returns>Returns the selected text as a string.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.CopyRTF(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Copies the selected contents of the RichTextEdit control to a string in rich text format.
            </summary>
            <param name="s">A boolean value indicated whether to copy selected text only. Values are:</param>
            <returns>Returns the selected text as a string.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.CopyRTF(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Copies the selected contents of the RichTextEdit control to a string in rich text format.
            </summary>
            <param name="s">A boolean value indicated whether to copy selected text only. </param>
            <param name="b">A value of the Band enumerated datatype specifying the band from which to copy text.</param>
            <returns>Returns the selected text as a string.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Cut">
            <summary>
            Cuts (deletes) the selected contents from the RichTextEdit control (if any) to the clipboard.
            </summary>
            <returns>Retuen code</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.DataSource(Sybase.PowerBuilder.WPF.PBDataStore)">
            <summary>
            Associates a DataWindow with the RichTextEdit control, matching columns with input fields of the same name.
            </summary>
            <param name="d">The name of the DataWindow control, DataStore, or child DataWindow that contains the data to
            be connected with input fields in rtename</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.DataSource(Sybase.PowerBuilder.WPF.PBDataWindow)">
            <summary>
            Associates a DataWindow with the RichTextEdit control, matching columns with input fields of the same name.
            </summary>
            <param name="d">The name of the DataWindow control, DataStore, or child DataWindow that contains the data to
            be connected with input fields in rtename</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.DataSource(Sybase.PowerBuilder.WPF.PBDataWindowChild)">
            <summary>
            Associates a DataWindow with the RichTextEdit control, matching columns with input fields of the same name.
            </summary>
            <param name="c">The name of the DataWindow control, DataStore, or child DataWindow that contains the data to
            be connected with input fields in rtename</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Finds text in the control.
            </summary>
            <param name="s">A string whose value is the text you want to find. For the RichTextEdit control, 
            searchtext is limited to 99 characters.</param>
            <param name="f">A boolean value indicating the direction you want to search.</param>
            <param name="i">A boolean value indicating the search string and the found text must match case.</param>
            <param name="w">A boolean value indicating that the found text must be a whole word. </param>
            <param name="p">A boolean value indicating where the search begins. </param>
            <returns>Returns the number of characters found. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.FindNext">
            <summary>
            Finds the next occurrence of text in the control and highlights it, using criteria set up in a previous call 
            of the Find function.
            </summary>
            <returns>Returns the number of characters found. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetAlignment">
            <summary>
            Obtains the alignment of the selected text.
            </summary>
            <returns>A value of the Alignment enumerated datatype indicating the alignment of the paragraph containing 
            the insertion point.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetParagraphSetting(Sybase.PowerBuilder.PBParagraphSettingValue)">
            <summary>
            Gets the size of the indentation, left margin, or right margin of the paragraph containing the insertion point.
            </summary>
            <param name="p">A value of the ParagraphSetting enumerated datatype specifying the setting for which you want the value. </param>
            <returns> Returns the size of the specified setting in thousandths of an inch</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetSpacing">
            <summary>
            Obtains the line spacing of the paragraph containing the insertion point in a RichTextEdit control.
            </summary>
            <returns> A value of the Spacing enumerated datatype indicating the line spacing of the 
            paragraph containing the insertion point.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetTextColor">
            <summary>
            Obtains the color of selected text in a RichTextEdit control.
            </summary>
            <returns> Returns the long value that specifies the color of the currently selected text.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetTextStyle(Sybase.PowerBuilder.PBTextStyleValue)">
            <summary>
            Finds out whether selected text has text styles (such as bold or italic) assigned to it.
            </summary>
            <param name="s">A value of the enumerated datatype TextStyle specifying the text style you want 
            to check for. </param>
            <returns>Returns true if the selected text is formatted with the specified text style and
            false if it is not. If textstyle is null, GetTextStyle returns null</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldChangeData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Modifies the data value of input fields in a RichTextEdit control.
            </summary>
            <param name="n">A string whose value is the name of input fields whose value you want to change. </param>
            <param name="v">A string whose value is the data to be assigned to the specified input fields.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, 
            InputFieldChangeData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldCurrentName">
            <summary>
            Gets the name of the input field when the insertion point is in an input field in a RichTextEdit control.
            </summary>
            <returns>Returns the name of the input field. If the insertion point is not in an input field or if
            an error occurs, it returns the empty string ("").</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldDeleteCurrent">
            <summary>
            Deletes the input field that is selected in a RichTextEdit control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if there is no input field at the insertion point, the input field is 
            activated for editing, or an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldGetData(Sybase.PowerBuilder.PBString)">
            <summary>
            Get the data in the specified input field in a RichTextEdit control.
            </summary>
            <param name="n">A string whose value is the name of input field from which you want to get the data</param>
            <returns>The data in the input field. InputFieldGetData returns the empty string ("") if the field does not exist or
            an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldInsert(Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a named input field at the insertion point in a RichTextEdit control.
            </summary>
            <param name="n">A string whose value is the name of input field to be inserted. The name does not have to be unique</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If inputfieldname is null, InputFieldInsert returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldLocate(Sybase.PowerBuilder.PBLocationValue)">
            <summary>
            Locates an input field in a RichTextEdit control and moves the insertion point there.
            </summary>
            <param name="l">A value of the Location enumerated datatype that specifies the occurrence of the input field you want to locate. </param>
            <returns>Returns the name of the input field it located if it succeeds. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldLocate(Sybase.PowerBuilder.PBLocationValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Locates an input field in a RichTextEdit control and moves the insertion point there.
            </summary>
            <param name="l">A value of the Location enumerated datatype that specifies the occurrence of the input field you 
            want to locate. </param>
            <param name="n">A string whose value is the name of the input field you want to locate. </param>
            <returns>Returns the name of the input field it located if it succeeds. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InsertDocument(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Inserts a rich text format or plain text file into a RichTextEdit control
            </summary>
            <param name="f">A string whose value is the name of the file you want to display in the RichTextEdit control.</param>
            <param name="d">A boolean value specifying whether the new file will replace the current contents of the control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, InsertDocument returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InsertDocument(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBFileTypeValue)">
            <summary>
            Inserts a rich text format or plain text file into a RichTextEdit control
            </summary>
            <param name="f">A string whose value is the name of the file you want to display in the RichTextEdit control.</param>
            <param name="d">A boolean value specifying whether the new file will replace the current contents of the control. </param>
            <param name="t">A value of the FileType enumerated datatype specifying the type of file being opened.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, InsertDocument returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InsertPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts an image at the insertion point in a RichTextEdit control.
            </summary>
            <param name="n">A string whose value is the name of the file that contains the image</param>
            <returns>Returns 1 if it succeeds. Returns -2 if the compression format of a .tif file is not supported and -1 
            if a different error occurs. If filename is null, InsertPicture returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.InsertPicture(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an image at the insertion point in a RichTextEdit control.
            </summary>
            <param name="n">A string whose value is the name of the file that contains the image</param>
            <param name="i">An integer whose value determines the format in which the image is saved in the RTF file.</param>
            <returns>Returns 1 if it succeeds. Returns -2 if the compression format of a .tif file is not supported and -1 
            if a different error occurs. If filename is null, InsertPicture returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.IsPreview">
            <summary>
            Reports whether a RichTextEdit control is in preview mode.
            </summary>
            <returns>Returns true if rtename is in preview mode and false if it is in data entry mode.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.LineCount">
            <summary>
            Determines the number of lines in a RichTextEdit that allows multiple lines.
            </summary>
            <returns>Returns the number of lines in editname if it succeeds and -1 if an error occurs. 
            If editname is null, LineCount returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.LineLength">
            <summary>
            Determines the length of the line containing the insertion point in a RichTextEdit
            </summary>
            <returns> Returns the length of the line containing the insertion point in editname. Returns -1 if an error occurs. 
            If editname is null, LineLength returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.PageCount">
            <summary>
            Returns the total number of pages in the document in a RichTextEdit control.
            </summary>
            <returns>Returns the number of pages in the RichTextEdit control. Returns 1 if the control contains no text and -1
            if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into this control
            </summary>
            <returns>return value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.PasteRTF(Sybase.PowerBuilder.PBString)">
            <summary>
            Pastes rich text data from a string into a RichTextEdit control.
            </summary>
            <param name="s">A string whose value is data with rich text formatting.</param>
            <returns> Returns -1 if an error occurs. If richtextstring is null, PasteRTF returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.PasteRTF(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Pastes rich text data from a string into a RichTextEdit control.
            </summary>
            <param name="s">A string whose value is data with rich text formatting.</param>
            <param name="b">A value of the Band enumerated datatype specifying the band into which the rich text data is pasted.</param>
            <returns> Returns -1 if an error occurs. If richtextstring is null, PasteRTF returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Position(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Determines the line and column position of the insertion point or the start and end of selected text in a
            RichTextEdit control.
            </summary>
            <param name="l1">A long variable in which you want to save the number of the line where the insertion point or the start 
            of the selection is.</param>
            <param name="c1">A long variable in which you want to save the number in the line of the first character in the selection or 
            after the insertion point.</param>
            <returns>Band enumerated datatype.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Position(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Determines the line and column position of the insertion point or the start and end of selected text in a
            RichTextEdit control.
            </summary>
            <param name="l1">A long variable in which you want to save the number of the line where the insertion point or the start 
            of the selection is.</param>
            <param name="c1">A long variable in which you want to save the number in the line of the first character in the selection or 
            after the insertion point.</param>
            <param name="l2">A long variable in which you want to save the number of the line where the selection ends.</param>
            <param name="c2">A long variable in which you want to save the number in the line of the character before which the
            selection ends.</param>
            <returns>Band enumerated datatype.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Preview(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Displays the contents of a RichTextEdit control as either a preview of the document as it would print or in an editing view.
            </summary>
            <param name="f">A boolean value indicating whether to put the RichTextEdit into preview or edit mode. Values are:</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Print(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Prints the contents of a RichTextEdit control.
            </summary>
            <param name="n">An integer specifying the number of copies you want to print.</param>
            <param name="r">A string describing the pages you want to print. </param>
            <param name="c">A boolean value indicating whether you want the copies collated. </param>
            <param name="p">A boolean value indicating whether you want to display a nonmodal dialog box that allows the user to
            cancel printing. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.PrintEx(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Prints the contents of a RichTextEdit control.
            </summary>
            <param name="cancelDialog">A boolean value indicating whether you want to display a nonmodal Cancel dialog box
            that allows the user to cancel printing. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in an edit control with a specified string.
            </summary>
            <param name="t">The string that replaces the selected text.</param>
            <returns>Returns the number of characters in string and -1 if an error occurs. If any argument's value is null,
            ReplaceText returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SaveDocument(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a RichTextEdit control in a file.
            </summary>
            <param name="f">A string whose value is the name of the file to be saved.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SaveDocument(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileTypeValue)">
            <summary>
            Saves the contents of a RichTextEdit control in a file.
            </summary>
            <param name="f">A string whose value is the name of the file to be saved.</param>
            <param name="t">A value of the FileType enumerated datatype specifying the format of the saved file.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SaveDocument(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFileTypeValue,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a RichTextEdit control in a file.
            </summary>
            <param name="f">A string whose value is the name of the file to be saved.</param>
            <param name="t">A value of the FileType enumerated datatype specifying the format of the saved file.</param>
            <param name="e">Character encoding of the file to which the data is saved. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Scroll(Sybase.PowerBuilder.PBLong)">
            <summary>
            Scrolls the RichTextEdit the specified direction the specified number of lines.
            </summary>
            <param name="n">The line number </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ScrollNextPage">
            <summary>
            Scrolls forward to the next page in the RichTextEdit document. If the current page is the last
            page of a document instance, scrolls to the next instance.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ScrollNextRow">
            <summary>
            Scrolls the RichTextEdit to the next row and document instance.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ScrollPriorPage">
            <summary>
            Scrolls back to the prior page in the RichTextEdit document. If the current page is the first page of a
            document instance, scrolls to the prior instance.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ScrollPriorRow">
            <summary>
            Scrolls the RichTextEdit to the prior row and document instance.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ScrollToRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Causes the control to scroll to the specified row and document instance.
            </summary>
            <param name="r">The row number</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedColumn">
            <summary>
            Returns the number of the character column just after the insertion point.
            </summary>
            <returns>Returns the number of the character just after the insertion point in  rtename. 
            If an error occurs, SelectedColumn returns -1.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedLength">
            <summary>
            Returns the length of the selected text.
            </summary>
            <returns>Returns the length of the selected text</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedLine">
            <summary>
            Returns the number of the line in which the insertion point is currently located within the document instance
            </summary>
            <returns> Returns the number of the line containing the insertion point </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedPage">
            <summary>
            Returns the number of the page in which the insertion point is currently located within the document instance.
            </summary>
            <returns>Returns the number of the current page in rtename. If an error occurs, SelectedPage returns -1.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedStart">
            <summary>
            Returns the starting position of the selected text (if any) from the beginning of the line.
            </summary>
            <returns>Returns the starting position of the selected text. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedText">
            <summary>
            Returns a string containing the selected text from the control.
            </summary>
            <returns>Returns a string containing the selected text.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Selects text beginning and ending at a line and character position in a RichTextEdit control.
            </summary>
            <param name="l1">A long specifying the line number where the selection starts.</param>
            <param name="c1">A long specifying the number in the line of the first character in the selection.</param>
            <param name="l2">A long specifying the line number where the selection ends. To specify an insertion point, 
            set toline and tochar to 0.</param>
            <param name="c2">A long specifying the number in the line of the character before which the selection ends.</param>
            <returns> Returns the number of characters selected. A carriage return with a line feed counts as a single character.
            If an error occurs SelectText returns -1. If any argument's value is null, it returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Selects text beginning and ending at a line and character position in a RichTextEdit control.
            </summary>
            <param name="l1">A long specifying the line number where the selection starts.</param>
            <param name="c1">A long specifying the number in the line of the first character in the selection.</param>
            <param name="l2">A long specifying the line number where the selection ends. To specify an insertion point, 
            set toline and tochar to 0.</param>
            <param name="c2">A long specifying the number in the line of the character before which the selection ends.</param>
            <param name="b">A value of the Band enumerated datatype specifying the band in which to make the selection. </param>
            <returns> Returns the number of characters selected. A carriage return with a line feed counts as a single character.
            If an error occurs SelectText returns -1. If any argument's value is null, it returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectTextAll">
            <summary>
            Selects all text in the control.
            </summary>
            <returns> Returns the number of characters selected. A carriage return with a line feed counts as a single character.
            If an error occurs, SelectTextAll returns -1.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectTextAll(Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Selects all text in the control.
            </summary>
            <param name="b">A value of the Band enumerated datatype specifying the band in which you want to select all the text.</param>
            <returns>Returns the number of characters selected. A carriage return with a line feed counts as a single character.
            If an error occurs, SelectTextAll returns -1.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectTextLine">
            <summary>
            Selects all text in the line in which the insertion point is currently located.
            </summary>
            <returns>Returns the number of characters selected if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectTextWord">
            <summary>
            Selects the word in which the insertion point is currently located.
            </summary>
            <returns>Returns the number of characters selected if it succeeds and -1 if a word cannot be selected or 
            an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetAlignment(Sybase.PowerBuilder.PBAlignmentValue)">
            <summary>
            Sets the alignment for the selected paragraphs.
            </summary>
            <param name="a">A value of the Alignment enumerated datatype specifying how to align the paragraphs. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetFocus">
            <summary>
            Sets the focus on RichTextEdit control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetParagraphSetting(Sybase.PowerBuilder.PBParagraphSettingValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the size of the paragraph's indentation, left margin, or right margin.
            </summary>
            <param name="p">A value of the ParagraphSetting enumerated datatype specifying the setting you want to change. </param>
            <param name="v">A long whose value is the width of the margin or indent in units of 1000ths of an inch. </param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetSpacing(Sybase.PowerBuilder.PBSpacingValue)">
            <summary>
            Sets the line spacing for the selected paragraphs.
            </summary>
            <param name="s">A value of the Spacing enumerated datatype specifying the line spacing for the text. </param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetTextColor(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the color of the selected text.
            </summary>
            <param name="c">A long specifying the color of the selected text</param>
            <returns> Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.SetTextStyle(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sets the font properties of the selected text.
            </summary>
            <param name="b">A boolean value specifying whether the selected text is bold.</param>
            <param name="u">A boolean value specifying whether the selected text is underlined.</param>
            <param name="sub">Maintained for backward compatibility only. A boolean value specifying whether 
            the selected text is a subscript. </param>
            <param name="sup">A boolean value specifying whether the selected text is a superscript. </param>
            <param name="i">A boolean value specifying whether the selected text is italic.</param>
            <param name="s">A boolean value specifying whether the selected text is has a line drawn through it.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ShowHeadFoot(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Allows editing of the header and footer in the RichTextEdit document.
            </summary>
            <param name="s">A boolean value specifying the editing panel to display. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ShowHeadFoot(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Allows editing of the header and footer in the RichTextEdit document.
            </summary>
            <param name="s">A boolean value specifying the editing panel to display. </param>
            <param name="b">A boolean value specifying whether the insertion point (caret) for editing the header/footer panel is
            in the header or the footer section. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.TextLine">
            <summary>
            Returns the entire text of the line in which the insertion point is currently located.
            </summary>
            <returns>Returns the text on the line with the insertion point </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.Undo">
            <summary>
            Cancels the previous editing function performed in the control, if the editing function can be undone. 
            </summary>
            <returns>Returns 1 when it succeeds and -1 if an error occurs. If editname is null, Undo returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ConvertBandFromRTCToPB(Sybase.DataWindow.Shared.DWBandType)">
            <summary>
            To convert DWBand to PBBand 
            </summary>
            <param name="b">DWBand Type</param>
            <returns>PBBand Value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ConvertBandFromPBToRTC(Sybase.PowerBuilder.PBBandValue)">
            <summary>
            To convert PBBand to DWBand
            </summary>
            <param name="b">PBBand Value</param>
            <returns>DWBand Type</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ConvertBorderStyleFromRTCToPB(Sybase.DataWindow.Shared.DWBorderType)">
            <summary>
            To convert DWBorderStyle to PBBorderStyle 
            </summary>
            <param name="style">DWBorder Type</param>
            <returns>PBBorder Style</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.ConvertBorderStyleFromPBToRTC(Sybase.PowerBuilder.PBBorderStyleValue)">
            <summary>
            To convert PBBorderStyle to DWBorderStyle
            </summary>
            <param name="pbstyle">PBBorder Style</param>
            <returns>DWBorder Type</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnConstructor(System.Object,System.EventArgs)">
            <summary>
            the Constructor event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnDoubleClicked(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            the DoubleClicked event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnGotFocus(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the GotFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            the KeyDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnLostFocus(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the LostFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnMouseDown(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the MouseDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            the MouseMove event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnMouseUp(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the MouseUp event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnMouseRButtonDown(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the MouseRButtonDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBRichTextEdit.OnMouseRButtonUp(System.Object,Sybase.DataWindow.RichText.Wpf.RTEEventArgs)">
            <summary>
            the MouseRButtonUp event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DragEnterEvent">
            <summary>
            DragEnter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.FileExistsEvent">
            <summary>
            FileExists event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldSelectedEvent">
            <summary>
            InputFieldSelected event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.KeyEvent">
            <summary>
            Key event definition
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.ModifiedEvent">
            <summary>
            Modified event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.MouseDownEvent">
            <summary>
            MouseDown event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.MouseMoveEvent">
            <summary>
            MouseMove event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.MouseUpEvent">
            <summary>
            MouseUp event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.OtherEvent">
            <summary>
            Other event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.PictureSelectedEvent">
            <summary>
            PictureSelected event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.PrintFooterEvent">
            <summary>
            PrintFooter event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.PrintHeaderEvent">
            <summary>
            PrintHeader event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.RButtonDownEvent">
            <summary>
            RButtonDown event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBRichTextEdit.RButtonUpEvent">
            <summary>
            RButtonUp event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.FaceName">
            <summary>
            Gets or sets the typeface used for text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.FontCharSet">
            <summary>
            Gets or sets the character set for text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Italic">
            <summary>
            Gets or sets a value indicating whether text displays in italic format.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.TextSize">
            <summary>
            Gets or sets the point size of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.UnderLine">
            <summary>
            Gets or sets a value indicating whether text displays with underlines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Weight">
            <summary>
            Gets or sets the weight of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Accelerator">
            <summary>
            Gets or sets the ASCII value of the accelerator key. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.BackColor">
            <summary>
            Gets or sets the numeric value of the background color of the text editing area of the RichTextEdit.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.BottomMargin">
            <summary>
            Gets or sets the width of the bottom margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.ControlCharsVisible">
            <summary>
            Gets or sets a value indicating whether control characters are visible.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.DisplayOnly">
            <summary>
            Gets or sets a value indicating whether users can make changes to the content.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.DocumentName">
            <summary>
            Gets or sets the name that displays in the print queue when the user prints the contents of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.HeaderFooter">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a header/footer section.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.HScrollBar">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.IMEMode">
            <summary>
            Gets or sets the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldBackColor">
            <summary>
            Gets or sets default background color for all input fields
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldNamesVisible">
            <summary>
            Gets or sets a value indicating whether input field names are displayed in input fields, rather than the input field values.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.InputFieldsVisible">
            <summary>
            Gets or sets a value indicating whether input fields are visible. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.LeftMargin">
            <summary>
            Gets or sets the width of the left margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Modified">
            <summary>
            Gets or sets a value indicating whether the document has been modified since it was opened or last saved.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.PaperHeight">
            <summary>
            Gets or sets the value for the display height of pages in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.PaperOrientation">
            <summary>
            Gets or sets the page orientation in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.PaperWidth">
            <summary>
            Gets or sets the value for the display width of pages in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.PicturesAsFrame">
            <summary>
            Gets or sets a value indicating whether graphics (bitmaps) are displayed as frames.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Pointer">
            <summary>
            Gets or sets the name of the stock pointer of the file containing the pointer that is used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.PopMenu">
            <summary>
            Gets or sets a value indicating whether the user has access to a pop-up menu by clicking the right mouse button on the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Resizable">
            <summary>
            Gets or sets a value indicating whether the user can resize the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.ReturnsVisible">
            <summary>
            Gets or sets a value indicating whether characters for carriage returns in the text will display.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.RightMargin">
            <summary>
            Gets or sets the width of the right margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.RulerBar">
            <summary>
            Gets or sets a value indicating whether a ruler bar is visible above the editing area.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedStartPos">
            <summary>
            Gets or sets the starting position in a selected text string. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.SelectedTextLength">
            <summary>
            Gets or sets the length of text you want to highlight in a selected text string. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.SpacesVisible">
            <summary>
            Gets or sets a value indicating whether spaces in the text are marked by a dot in the RichTextEdit control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.StatusBar">
            <summary>
            Gets or sets a value indicating whether a status bar is visible below the editing area.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.TabBar">
            <summary>
            Gets or sets a value indicating whether a tab bar is visible.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.TabsVisible">
            <summary>
            Gets or sets a value indicating whether a text symbol appears for tabs in text.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.ToolBar">
            <summary>
            Gets or sets a value indicating whether a tool bar for formatting text is visible above the editing area. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.TopMargin">
            <summary>
            Gets or sets the width of the top margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.UndoDepth">
            <summary>
            Gets or sets the maximum number of editing changes that the Undo function will undo.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.VScrollBar">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a vertical scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.WordWrap">
            <summary>
            Gets or sets a value indicating whether text wraps automatically to the next line when the line reaches the margin.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_BackColor">
            <summary>
            Gets or sets the numeric value of the background color.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_BottomMargin">
            <summary>
            Gets or sets the width of the bottom margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_DisplayOnly">
            <summary>
            Gets or sets a value indicating whether users can make changes to the content.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_DocumentName">
            <summary>
            Gets or sets the name that displays in the print queue.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_HeaderFooter">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a header/footer section.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_HScrollBar">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_InputFieldBackColor">
            <summary>
            Gets or sets default background color for all input fields.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_InputFieldNamesVisible">
            <summary>
            Gets or sets a value indicating whether input field names are displayed in input fields.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_InputFieldsVisible">
            <summary>
            Gets or sets a value indicating whether input fields are visible.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_LeftMargin">
            <summary>
            Gets or sets the width of the left margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_Modified">
            <summary>
            Gets or sets a value indicating whether the document has been modified since it was opened or last saved.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_PictureFrame">
            <summary>
            Gets or sets a value indicating whether graphics (bitmaps) are displayed as frames.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_PopMenu">
            <summary>
            Gets or sets a value indicating whether the user has access to a pop-up menu by clicking the right mouse button on the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_ReturnsVisible">
            <summary>
            Gets or sets a value indicating whether characters for carriage returns in the text will display.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_RightMargin">
            <summary>
            Gets or sets the width of the right margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_RulerBar">
            <summary>
            Gets or sets a value indicating whether a ruler bar is visible above the editing area.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_SpacesVisible">
            <summary>
            Gets or sets a value indicating whether spaces in the text are marked by a dot in the RichTextEdit control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_TabBar">
            <summary>
            Gets or sets a value indicating whether a tab bar is visible.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_TabsVisible">
            <summary>
            Gets or sets a value indicating whether a text symbol appears for tabs in text.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_ToolBar">
            <summary>
            Gets or sets a value indicating whether a tool bar for formatting text is visible above the editing area.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_TopMargin">
            <summary>
            Gets or sets the width of the top margin on the printed page.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_UndoDepth">
            <summary>
            Gets or sets the maximum number of editing changes that the Undo function will undo.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_VScrollBar">
            <summary>
            Gets or sets a value indicating whether the RichTextEdit control has a vertical scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_WordWrap">
            <summary>
            Gets or sets a value indicating whether text wraps automatically to the next line when the line reaches the margin.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBRichTextEdit.Init_Pointer">
            <summary>
            Gets or sets the name of the stock pointer of the file containing the pointer that is used for the control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBOleCustomControl">
            <summary>
            The PBOleCustomControl class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBOleCustomControl.#ctor">
            <summary>
            The contructor of PBOleCustomControl
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBHTrackBar">
            <summary>
            The PBVTrackBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.getFocusEvent">
            <summary>
            get focus event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.lineLeftEvent">
            <summary>
            line left event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.lineRightEvent">
            <summary>
            line right event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.movedEvent">
            <summary>
            moved event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.otherEvent">
            <summary>
            other event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.pageLeftEvent">
            <summary>
            page left event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.pageRightEvent">
            <summary>
            page right event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.rbuttonDownEvent">
            <summary>
            rbuttondown event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHTrackBar.wpfHTrackBar">
            <summary>
            The inner HTrackBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.#ctor">
            <summary>
            The construcotr of PBVTrackBar
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.lineleft">
            <summary>
            stub of lineleft method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.lineright">
            <summary>
            stub of lineright method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.moved(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of moved method
            </summary>
            <param name="lscrollPos"> the postion moved </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method 
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.pageleft">
            <summary>
            stub of pageleft method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.pageright">
            <summary>
            stub of pageright method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.SelectionRange(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Highlights a range of contiguous values in a trackbar control.
            The range you select is highlighted in the trackbar channel, with an arrow at each end of the range.
            </summary>
            <param name="startPos">An integer that specifies the starting position of the range.</param>
            <param name="endPos">An integer that specifies the ending position of the range.</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.OnScroll(System.Object,System.Windows.Controls.Primitives.ScrollEventArgs)">
            <summary>
            The scroll event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHTrackBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.LineLeftEvent">
            <summary>
            LineLeft event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.LineRightEvent">
            <summary>
            LineRigh event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.MovedEvent">
            <summary>
            Moved event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.PageLeftEvent">
            <summary>
            PageLeft event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.PageRightEvent">
            <summary>
            PageRight event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHTrackBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.LineSize">
            <summary>
            Gets or sets a value that indicates how far the slider moves in response to keyboard input from the arrow keys.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the slider is at the right edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the slider is at the left edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.PageSize">
            <summary>
            Gets or sets a value that indicates how far the slider moves in response
            to clicking in the slider channel area or pressing the Page keys.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.Position">
            <summary>
            Gets or sets a value between MinPosition and MaxPosition specifying the position of the slider.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.Slider">
            <summary>
            Gets or sets a value that indicates whether or not the trackbar contains a slider.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.SliderSize">
            <summary>
            Gets or sets the size of the slider on the trackbar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.TickFrequency">
            <summary>
            Gets or sets tick mark frequency.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.TickMarks">
            <summary>
            Gets or sets a value that indicates where tickmarks should be displayed.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHTrackBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBSession">
            <summary>
            the PBSession class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.pbsession">
            <summary>
            the inner pbsession of the class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.showMessageBox">
            <summary>
            the local variable indicating whether show message box in application or not
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.activeWindow">
            <summary>
            The main window of the application.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.creatingWindow">
            <summary>
            The window which is in creating process
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.creatingCVUO">
            <summary>
            The cvuo which is in creating process
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.sessionClosed">
            <summary>
            if the sessionis closed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.windows">
            <summary>
            the local array list holding the windows in the application 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.printManager">
            <summary>
            the print manager object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.constructingUO">
            <summary>
            the local stack holding the constructing userobject
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.constructingWindow">
            <summary>
            the local stack holding the constructing userobject
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.focusedObject">
            <summary>
            To keep the focused 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.applicationOpened">
            <summary>
            the local value to indicate whether application is opened
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.cursorChanged">
            <summary>
            the local value indicating if the cursor has been changed
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.mainthreadDispatcher">
            <summary>
            the main thread dispatcher
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.doEvents">
            <summary>
            the local value indicating if needs do events
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSession.doRenderEvents">
            <summary>
            the local value indicating if needs do render events
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.#ctor(System.String)">
            <summary>
            The constructor the PBSession 
            </summary>
            <param name="liblist"> the library list</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.CreateSession(System.Type,System.String)">
            <summary>
            create a session for the application 
            </summary>
            <param name="appType"> the application type</param>
            <param name="liblist"> the application's library list</param>
            <returns> the created session of the application </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.CreateLightweightSession(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="appType"></param>
            <param name="liblist"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.ExecuteAll">
            <summary>
            Execute all methods in the method queue.
            </summary>
            <returns>if has methods in queue,return true</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.GetApplicationHandle">
            <summary>
            Gets the application handle
            </summary>
            <returns>the application handle</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.OpenWindow(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Open a window, which could be a main window or a response window.
            </summary>
            <param name="w"> the window to be opened</param>
            <returns>success or not </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.CloseWindow(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            close specified window
            </summary>
            <param name="w">PB window value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.Halt(System.Boolean,Sybase.PowerBuilder.PBEventHandler)">
            <summary>
            Halt the application
            </summary>
            <param name="close"> if the application is clased</param>
            <param name="closeEvent">the close event </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.TriggerSystemError(System.Exception)">
            <summary>
            Tigger System error method
            </summary>
            <param name="e"> the exception </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.CloseSession">
            <summary>
            Close the current session 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.RunWPFApp">
            <summary>
            Run the WPF application
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.GetActualLibraryList">
            <summary>
            get the application's library list
            </summary>
            <returns> return the library list </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.SetAbsoluteAssemblyList">
            <summary>
            Set the absolute paths of the assembly list
            </summary>        
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.Halt">
            <summary>
            halt the application
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.AddWindowList(Sybase.PowerBuilder.WPF.PBWindow)">
            <summary>
            Add a window into the window list for management
            </summary>
            <param name="w"> the window to be added </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.SetCursorIsChanged(System.Boolean)">
            <summary>
            Set the flag is used to indicate if the Cursor has been changed
            </summary>
            <param name="IfChanged"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.CreateInstance(Sybase.PowerBuilder.PBPowerObject,System.Type,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Parameter: is4ApplicationInit is used to create application when system start up, it should be false for others
            </summary>
            <param name="parent"></param>
            <param name="type"></param>
            <param name="init"></param>
            <param name="is4ApplicationInit"></param>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.PushCurrentGO(System.Object)">
            <summary>
            Push the constructing userobject to a system stack. It will be used to create controls from the userobject xaml file.
            </summary>
            <param name="pbgo">PB graphic object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.PopCurrentGO">
            <summary>
            Pop the userobject from a system stack. It will be called after the creation of controls in the userobject.
            </summary>
            <param name="pbgo">PB graphic object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.TypeDefinedInPBWPF(System.Type)">
            <summary>
            Check the type if is defined in PB WPF runtime library.
            </summary>
            <param name="type">the control's type</param>
            <returns>if exists, return true.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.LoadControl(System.Type)">
            <summary>
            Create control from xaml file by type name
            </summary>
            <param name="type">control type</param>
            <returns>ui element from xaml</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.LoadObject(System.Type)">
            <summary>
            Load object from xaml file by type name
            </summary>
            <param name="type">control type</param>
            <returns>ui element from xaml</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.InitSession(System.Type)">
            <summary>
            Initialize the session 
            </summary>
            <param name="appType"> the type of the session </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.IdleEvent">
            <summary>
            Snippet Threading to trigger idle event
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.WPFApplication_Exit(System.Object,System.Windows.ExitEventArgs)">
            <summary>
            event of application exit
            </summary>
            <param name="sender">the application itself </param>
            <param name="e"> the application exit event </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.ShowSystemError">
            <summary>
            show system error 
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.SetAbsoluteLibList">
            <summary>
            Set the library list
            </summary>        
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.GetControlName(System.Type)">
            <summary>
            get control name from a type, pls notice to see if exist PBCaseNameAttribute
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.MergeControlItem(System.Windows.Controls.ItemsControl,System.Windows.Controls.ItemsControl@)">
            <summary>
            Merge ItemControl's items
            </summary>
            <param name="parentItemControl">parent item control</param>
            <param name="childItemControl">child item control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.MergeControlContent(System.Windows.Controls.ContentControl,System.Windows.Controls.ContentControl@)">
            <summary>
            Merge ContentControl's content
            </summary>
            <param name="parentContentControl">parent content control</param>
            <param name="childContentControl">child content control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSession.DoEvents">
            <summary>
            Processes all UI messages currently in the message queue.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.MainthreadDispatcher">
            <summary>
            the main thread dispatcher
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ApplicationOpened">
            <summary>
            Gets or sets whether the application is opened
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.CurrentSession">
            <summary>
            Gets or sets the current session
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ShowMessageBox">
            <summary>
            Gets or sets a value indicating whether show message box 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.MainThreadID">
            <summary>
            Gets or sets a value indicating whether show message box 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.FocusedObject">
            <summary>
            Gets or sets the current focuedobject in the application
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ActiveWindow">
            <summary>
            Gets or sets the active window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.CreatingWindow">
            <summary>
            Gets or sets the creating window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.CreatingCVUO">
            <summary>
            Gets the cvuo which is in constructing process
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ConstructingUO">
            <summary>
            Gets the userobject stack which is in constructing process
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ConstructingWindow">
            <summary>
            Gets the userobject stack which is in constructing process
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.Error">
            <summary>
            Gets Predefined Error object for every PB application.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.Message">
            <summary>
            Gets the message,Predefined Message object for every PB application.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.ApplicationType">
            <summary>
            Gets the wpf applcation type
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.CurrentApplication">
            <summary>
            Gets the current application 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.PrintManager">
            <summary>
            Gets PrintManger
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSession.Windows">
            <summary>
            Gets or sets the windows
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBSession.IdleDelegate">
            <summary>
            Delegate to be used in placking idle jobs onto the Dispatcher.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.UpdaterNotifierOptionForm">
            <summary>
            Interaction logic for UpdaterNotifierOptionForm.xaml
            </summary>
            <summary>
            UpdaterNotifierOptionForm
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.UpdaterNotifierOptionForm.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDataWindowOp">
            <summary>
            Summary description for PBDataWindowOp.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBUserObject">
            <summary>
            The PBUserObject class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.isTabpage">
            <summary>
             local variable indicating whether the uo is tabpage
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.isPageCreated">
            <summary>
             local variable indicating whether the uo is tabpage and is created
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.parentTab">
            <summary>
            local variable indicating the parent tab control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.controlarray">
            <summary>
            the array holding the control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.clientPanel">
            <summary>
            local variable indicating the client panel
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.wpfUserObject">
            <summary>
            the real inner wpf Button object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBUserObject.rbuttonDownEvent">
            <summary>
            RButtondown event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.#ctor">
            <summary>
            Constructor of class PBUserObject
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the UO's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the UO's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.AddItem(Sybase.PowerBuilder.PBString)">
            <summary>
            Not supported method         //// Functions for VBX support.
            </summary>
            <param name="i">the parameter is not used</param>
            <returns>No used return </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.CreatePage">
            <summary>
            Creates a tab page if it has not already been created.
            </summary>
            <returns>
            Returns one of the following values:1 if the page is successfully created and -1 if the page was already created or if it is not a tab page.
             1 - The tab page was successfully created
             0 - The tab page has already been created
             -1 - The user object is not a tab page
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.DeleteItem(Sybase.PowerBuilder.PBInt)">
            <summary>
            Not supported method
            </summary>
            <param name="i">the parameter is not used</param>
            <returns>No used return </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.EventParmDouble(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Not supported method
            </summary>
            <param name="p">The parameter is not used.</param>
            <param name="v">The parameter is not used.</param>
            <returns>No used return </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.EventParmString(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Not supported method
            </summary>
            <param name="p">The parameter is not used.</param>
            <param name="v">The parameter is not used.</param>
            <returns>No used return </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.InsertItem(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Not supported method
            </summary>
            <param name="s">The parameter is not used.</param>
            <param name="i">The parameter is not used.</param>
            <returns>No used return </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.PageCreated">
            <summary>
            Reports whether a tab page has been created.
            </summary>
            <returns>Returns true if the user object is a tab page and has been created and 
            false if the user object is not a tab page or has not been created.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.PointerX">
            <summary>
            Gets the distance of the pointer from the left edge of the specified object.
            </summary>
            <returns>Returns the pointer's distance from the left edge of objectname in PowerBuilder units 
            if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.PointerY">
            <summary>
            Gets the distance of the pointer from the top of the specified object.
            </summary>
            <returns> Returns the pointer's distance from the top of objectname in PowerBuilder units
            if it succeeds and -1 if an error occurs. If objectname is null, PointerY returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.CloseUserObject(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            Removes the specified user object from view, closes it, and executes its Destructor event.
            </summary>
            <param name="o">The name of the user object you want to close</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, CloseUserObject returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObject``1(``0@)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="n">the name of the user object you want to display.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObject``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">the opened user object</param>
            <param name="n">the name of the user object you want to display.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, OpenUserObject returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OpenUserObjectWithParm``1(``0@,Sybase.PowerBuilder.PBPowerObject,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Opens a user object when the datatype of the user object is not known until the script is executed.
            </summary>
            <typeparam name="T0">the type of PBDragObject</typeparam>
            <param name="o">A variable of datatype DragObject. </param>
            <param name="a">The parameter you want to store in the Message object when the user object is opened. </param>
            <param name="n">the datatype of the user object you want to open.</param>
            <param name="x">The x coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <param name="y">The y coordinate in PowerBuilder units of the user object within the UO's frame.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.ContainsControl(Sybase.PowerBuilder.WPF.PBWindowObject)">
            <summary>
            checking the UO if contains the child control
            </summary>
            <param name="control">the target control</param>
            <returns>return true if the UO contains the control, else return false.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.InitializeObjectAndTraceConstructor(System.Object)">
            <summary>
            initialize object and trace constructor event in control
            </summary>
            <param name="o">the target control</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OnMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Process the MouseMove event
            </summary>
            <param name="sender">The control sent out the MouseMove event</param>
            <param name="e">The MouseMove event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OnInitialized(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.wpfUserObject_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Process the load event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUserObject.OnCreate(System.Boolean)">
            <summary>
            the function which will be called on created
            </summary>
            <param name="init">if it should be inited</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBUserObject.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.BackColor">
            <summary>
            Gets or sets the numeric value of the background color: -2 to 16,777,215.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Border">
            <summary>
            Gets or sets a value that indicates whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.ClassName">
            <summary>
            Gets or sets the ClassName of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.ColumnsPerPage">
            <summary>
            Gets or sets the  number of columns on a scroll page
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Control">
            <summary>
            Gets or sets the array holding the Control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Enabled">
            <summary>
            Gets or sets a value that indicates whether the control is enabled (can be selected).
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.HScrollBar">
            <summary>
            Gets or sets a value that indicates whether a horizontal scroll bar displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.LibraryName">
            <summary>
            Gets or sets the name of the dynamic-link library (DLL) that contains an external user object class
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.LinesPerPage">
            <summary>
            Gets or sets the number of lines on a page
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.ObjectType">
            <summary>
            Gets or sets the type of user object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.PictureMaskColor">
            <summary>
            Gets or sets the numeric value of the color in the picture that is changed to the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.PictureName">
            <summary>
            Gets or sets the Pointer enumerated datatype or the filename of the bitmap, cursor, or icon or to be displayed on the tab
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the object.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.PowerTipText">
            <summary>
            Gets or sets the text to be displayed as a PowerTip for the tab when the Tab control's PowerTips property is true
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Style">
            <summary>
            Gets or sets the additional style bits you want to use to control how the object displays (external user object only)
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.TabBackColor">
             <summary>
            Gets or sets the numeric value of the tab background color
             </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.TabTextColor">
            <summary>
            Gets or sets the numeric value of the tab text color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Text">
            <summary>
            Gets or sets the text that displays in the object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.UnitsPerColumn">
            <summary>
            Gets or sets the number of PowerBuilder units to be scrolled right or left when a user clicks the left or right arrow in the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.UnitsPerLine">
            <summary>
            Gets or sets the number of PowerBuilder units to be scrolled up or down when a user clicks the up or down arrow in the vertical scroll bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.VScrollBar">
            <summary>
            Gets or sets a value that indicates whether a vertical scroll bar displays.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.InnerControl">
            <summary>
            Gets the inner PB WPF control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Height">
            <summary>
            Gets or sets the Height property of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Width">
            <summary>
            Gets or sets the Width property of the control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.X">
            <summary>
            Gets or sets the X property of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUserObject.Y">
            <summary>
            Gets or sets the Y property of the control
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBTreeViewItem">
            <summary>
            The PBTreeViewItem class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.bold">
            <summary>
            Specifies whether the item is bold
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.children">
            <summary>
            Specifies whether the item has children
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.cutHighlighted">
            <summary>
            Specifies whether the item is the target of a cut operation
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.data">
            <summary>
            any user-defined data 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.dropHighlighted">
            <summary>
            Specifies whether the item is the target of a DragDrop operation
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.expanded">
            <summary>
            Specifies whether the item is expanded.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.expandedOnce">
            <summary>
            Specifies whether the item has been expanded at least once
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.hasFocus">
            <summary>
            Specifies whether the item has focus
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.itemHandle">
            <summary>
            the handle associated with the item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.label">
            <summary>
            the string label associated with the item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.level">
            <summary>
            the level of the item in the TreeView control
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.overlayPictureIndex">
            <summary>
            the overlay picture associated with the item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.pictureIndex">
            <summary>
            the picture displayed to the left of the item label
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.selected">
            <summary>
            Specifies whether the item is selected
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.selectedPictureIndex">
            <summary>
            the picture associated with the item when it is selected
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeViewItem.statePictureIndex">
            <summary>
            the state picture associated with the item
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeViewItem.#ctor">
            <summary>
            The contructor of PBTreeViewItem
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeViewItem.Clone">
            <summary>
            override the clone method
            </summary>
            <returns> the new object created </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeViewItem.OnDestroy">
            <summary>
            the OnDestroy event handler
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Bold">
            <summary>
            Gets or sets a value indicating whether the item is bold.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Children">
            <summary>
            Gets or sets a value indicating whether the item has children.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.CutHighlighted">
            <summary>
            Gets or sets a value indicating whether the item is the target of a cut operation. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Data">
            <summary>
            Gets or sets any user-defined data. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.DropHighlighted">
            <summary>
            Gets or sets a value indicating whether the item is the target of a DragDrop operation.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Expanded">
            <summary>
            Gets or sets a value indicating whether the item is expanded.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.ExpandedOnce">
            <summary>
            Gets or sets a value indicating whether the item has been expanded at least once. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.HasFocus">
            <summary>
            Gets or sets a value indicating whether the item has focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.ItemHandle">
            <summary>
            Gets or sets the handle associated with the item. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Label">
            <summary>
            Gets or sets the string label associated with the item.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Level">
            <summary>
            Gets or sets the level of the item in the TreeView control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.OverlayPictureIndex">
            <summary>
            Gets or sets the overlay picture associated with the item.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.PictureIndex">
            <summary>
            Gets or sets the picture displayed to the left of the item label.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.Selected">
            <summary>
            Gets or sets a value indicating whether the item is selected. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.SelectedPictureIndex">
            <summary>
            Gets or sets the picture associated with the item when it is selected.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeViewItem.StatePictureIndex">
            <summary>
            Gets or sets the state picture associated with the item. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBToolbarButtonComparer">
            <summary>
            The PBToolbarButtonComparer class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBToolbarButtonComparer.buttonIndex">
            <summary>
            toolbarbutton list
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBToolbarButtonComparer.#ctor(System.Collections.Hashtable)">
            <summary>
            The contructor of PBToolbarButtonComparer
            </summary>
            <param name="buttonindex">toolbarbutton list</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBToolbarButtonComparer.Compare(System.Object,System.Object)">
            <summary>
            the compare method
            </summary>
            <param name="x">pbtoolbarbutton object x</param>
            <param name="y">pbtoolbarbutton object y</param>
            <returns>
            Less than zero: x is less than y. 
            Zero: x equals y
            Greater than zero: x is greater than y
            </returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDataWindow">
            <summary>
            The PBDataWindow class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.wpfDataWindow">
            <summary>
            WPF DataWindow Control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.#ctor">
            <summary>
            The Construcotr of PBDataWindow
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.buttonClickedEvent">
            <summary>
            button clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.buttonClickingEvent">
            <summary>
            button clicking event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.collapsedEvent">
            <summary>
            collapsed event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.collapsingEvent">
            <summary>
            collapsing event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.dbErrorEvent">
            <summary>
            db error event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.dragDropEvent">
            <summary>
            new drag drop event handler
            override the drag obj event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.dragWithinEvent">
            <summary>
            new drag within event handler
            override the drag obj event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.editChangedEvent">
            <summary>
            edit changed event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.errorEvent">
            <summary>
            error event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.expandedEvent">
            <summary>
            expanded event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.expandingEvent">
            <summary>
            expanding event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.itemChangedEvent">
            <summary>
            item changed event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.itemErrorEvent">
            <summary>
            item error event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.itemFocusChangedEvent">
            <summary>
            item focus changed event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.printEndEvent">
            <summary>
            print end event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.printPageEvent">
            <summary>
            print page event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.printStartEvent">
            <summary>
            print start event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rbuttonDownEvent">
            <summary>
            right button down event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.resizeEvent">
            <summary>
            resize event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.retrieveEndEvent">
            <summary>
            retrieve event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.retrieveRowEvent">
            <summary>
            retrieve row event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.retrieveStartEvent">
            <summary>
            retrieve start event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rtStyleChange">
            <summary>
            richtext current style change event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rtLimitError">
            <summary>
            richtext limit error event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rtLoseFocus">
            <summary>
            richtext lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rowFocusChangedEvent">
            <summary>
            row focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.rowFocusChangingEvent">
            <summary>
            row focus changing event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.scrollHorizontalEvent">
            <summary>
            scroll horizontal event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.scrollVerticalEvent">
            <summary>
            scroll vertical event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.sqlPreviewEvent">
            <summary>
            sql preview event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.treeNodeSelectedEvent">
            <summary>
            tree node selected event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.treeNodeSelectingEvent">
            <summary>
            tree node selecting event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.updateEndEvent">
            <summary>
            update end event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.updateStartEvent">
            <summary>
            update start event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindow.wsErrorEvent">
            <summary>
            ws error event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.buttonclicked(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user clicks a button inside a DataWindow object.
            </summary>
            <param name="l1">The number of the row the user clicked.</param>
            <param name="l2">The value returned by the action performed by the button.</param>
            <param name="dwo">A reference to the control within the DataWindow under the pointer when the user clicked. </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.buttonclicking(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user clicks a button. This event occurs before the ButtonClicked event.  
            </summary>
            <param name="l">The number of the row the user clicked. </param>
            <param name="dwo">A reference to the control within the DataWindow under the pointer when the user clicked. </param>
            <returns>
            0  Execute the action assigned to the button, then trigger the ButtonClicked event
            1  Prevent the action assigned to button from executing and the ButtonClicked event from firing
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.clicked(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user clicks anywhere in a DataWindow control.
            </summary>
            <param name="xpos">The distance of the pointer from the left side of the DataWindow workspace. The distance is given in pixels.</param>
            <param name="ypos">The distance of the pointer from the top of the DataWindow workspace. The distance is given in pixels.</param>
            <param name="row">The number of the row the user clicked.If the user does not click on a row, the value of the row argument is 0.</param>
            <param name="dwo">A reference to the control within the DataWindow under the pointer when the user clicked. </param>
            <returns>
            0  Continue processing
            1  Prevent the focus from changing
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.collapsed(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when a node in a TreeView DataWindow has collapsed.
            </summary>
            <param name="row">The number of the first row in the group to be collapsed.</param>
            <param name="grouplevel">The TreeView level of the group to be collapsed.</param>
            <returns>no return codes.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.collapsing(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs before a node in a TreeView DataWindow collapses.
            </summary>
            <param name="row">The number of the first row in the group to be collapsed.</param>
            <param name="grouplevel">The TreeView level of the group to be collapsed.</param>
            <returns>Return 0 to continue processing (collapse the selected node) or return any other value to cancel the collapse.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.constructor">
            <summary>
            Occurs when the DataWindow control or DataStore object is created, just before the Open event for the window that contains the control.
            </summary>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dberror(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when a database error occurs in the DataWindow or DataStore.
            </summary>
            <param name="sqldbcode">A database-specific error code. </param>
            <param name="sqlerrtext">A database-specific error message.</param>
            <param name="sqlsyntax">The full text of the SQL statement being sent to the DBMS when the error occurred.</param>
            <param name="buffer">The buffer containing the row involved in the database activity that caused the error.</param>
            <param name="row">The number of the row involved in the database activity that caused the error (the row being updated, selected, inserted, or deleted). </param>
            <returns>
            0  Display the error message
            1  Do not display the error message
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.destructor">
            <summary>
            Occurs when the DataWindow control or DataStore object is destroyed, immediately after the Close event of a window or form.
            </summary>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.doubleclicked(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user double-clicks in a DataWindow control.
            </summary>
            <param name="xpos">The distance of the pointer from the left side of the DataWindow's workspace. The distance is given in pixels.</param>
            <param name="ypos">The distance of the pointer from the top of the DataWindow's workspace. The distance is given in pixels.</param>
            <param name="row">The number of the row the user double-clicked. </param>
            <param name="dwo"> A reference to the control within the DataWindow the user double-clicked. </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user drags an object onto the control and releases the mouse button to drop the object.
            </summary>
            <param name="source">A reference to the control being dragged. </param>
            <param name="row">The number of the row the pointer was over when the user dropped the object. </param>
            <param name="dwo">A reference to the control under the pointer within the DataWindow when the user dropped the object. </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dragenter(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            Occurs when the user is dragging an object and enters the control.
            </summary>
            <param name="source">A reference to the control being dragged.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dragleave(Sybase.PowerBuilder.WPF.PBDragObject)">
            <summary>
            Occurs when the user is dragging an object and leaves the control.
            </summary>
            <param name="source">A reference to the control being dragged. </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the user is dragging an object within the control.
            </summary>
            <param name="source">A reference to the control being dragged.</param>
            <param name="row">The number of the row the pointer is over.</param>
            <param name="dwo">A reference to the control under the pointer within the DataWindow.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.editchanged(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Occurs for each keystroke the user types in an edit control in the DataWindow.
            </summary>
            <param name="row">The number of the row containing the item whose value is being changed.</param>
            <param name="dwo">A reference to the column containing the item whose value is being changed. </param>
            <param name="data">The current contents of the DataWindow edit control.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.error(Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBUInt,Sybase.PowerBuilder.PBExceptionActionValue@,Sybase.PowerBuilder.PBAny@)">
            <summary>
            Occurs when an error is found in a data or property expression for an external object or a DataWindow object. 
            Also occurs when a communications error is found in a distributed application.
            </summary>
            <param name="ErrorNumber">PowerBuilder's error number</param>
            <param name="ErrorText">PowerBuilder's error message</param>
            <param name="ErrorWindowMenu">The name of the window or menu that is the parent of the object whose script caused the error.</param>
            <param name="ErrorObject">The name of the object whose script caused the error.</param>
            <param name="ErrorScript">The full text of the script in which the error occurred.</param>
            <param name="ErrorLine">The line in the script where the error occurred. </param>
            <param name="Action">A value you specify to control the application's course of action as a result of the error</param>
            <param name="ReturnValue">
            A value whose datatype matches the expected value that the OLE server or DataWindow would have returned. 
            This value is used when the value of action is ExceptionSubstituteReturnValue!.
            </param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.expanded(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when a node in a TreeView DataWindow has expanded.
            </summary>
            <param name="row">The number of the first row in the group that has been expanded.</param>
            <param name="grouplevel">The TreeView level of the group that has been expanded.</param>
            <returns>no return codes.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.expanding(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs before a node in a TreeView DataWindow expands.
            </summary>
            <param name="row">The number of the first row in the group to be expanded.</param>
            <param name="grouplevel">The TreeView level of the group to be expanded.</param>
            <returns>Return 0 to continue processing (expand the selected node) or return any other value to cancel the expansion.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.getfocus">
            <summary>
            Occurs just before the control receives focus (before it is selected and becomes active).
            </summary>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.itemchanged(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Occurs when a field in a DataWindow control has been modified and loses focus.
            It occurs before the change is applied to the item. 
            ItemChanged can also occur when the AcceptText or Update method is called for a DataWindow control or DataStore object.
            </summary>
            <param name="row">The number of the row containing the item whose value is being changed.</param>
            <param name="dwo">A reference to the column containing the item whose value has been changed.</param>
            <param name="data">The new data the user has specified for the item.</param>
            <returns>
            0  (Default) Accept the data value
            1  Reject the data value and do not allow focus to change
            2  Reject the data value but allow the focus to change
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.itemerror(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject,Sybase.PowerBuilder.PBString)">
            <summary>
            Occurs when a field has been modified, the field loses focus and the data in the field 
            does not pass the validation rules for its column. 
            ItemError can also occur when a value imported into a DataWindow control or DataStore 
            does not pass the validation rules for its column.
            </summary>
            <param name="row">The number of the row containing the item whose new value has failed validation.</param>
            <param name="dwo">
            A reference to the column containing the item. Dwo is a reference to the column control, 
            not the name of the column.
            </param>
            <param name="data">The new data the user specified for the item.</param>
            <returns>
            0  (Default) Reject the data value and show an error message box
            1  Reject the data value with no message box
            2  Accept the data value
            3  Reject the data value but allow focus to change
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.itemfocuschanged(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the current item in the control changes.
            </summary>
            <param name="l">The number of the row containing the item that just gained focus.</param>
            <param name="dwo"> A reference to the column containing the item.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.losefocus">
            <summary>
            Occurs just before a control loses focus (after it becomes inactive).
            </summary>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when a system message occurs that is not a PowerBuilder message.
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.printend(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when the printing of a DataWindow or DataStore ends.
            </summary>
            <param name="l">The total number of pages that were printed.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.printpage(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs before each page of the DataWindow or DataStore is formatted for printing.
            </summary>
            <param name="l1">The number of the page about to be printed.</param>
            <param name="l2">The number of the copy being printed.</param>
            <returns>
            0  Do not skip the page
            1  Skip the page
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.printstart(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when the printing of the DataWindow or DataStore starts.
            </summary>
            <param name="l">The total number of pages that will be printed, unless pages are skipped.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.rbuttondown(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBDWObject)">
            <summary>
            Occurs when the right mouse button is pressed on the DataWindow control.
            </summary>
            <param name="xpos">
            The distance of the pointer from the left edge of the window's workspace in pixels.
            </param>
            <param name="ypos">
            The distance of the pointer from the top of the window's workspace in pixels.
            </param>
            <param name="row">The number of the row under the pointer.</param>
            <param name="dwo"> DataWindow </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.resize(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Occurs when the user or a script opens or resizes the client area of a DataWindow control.
            </summary>
            <param name="ul">
            0 - (SIZE_RESTORED) The DataWindow has been resized, but it was not minimized or maximized. 
            The user may have dragged the borders or a script may have called the Resize method.
            1 - (SIZE_MINIMIZED) The DataWindow has been minimized.
            2 - (SIZE_MAXIMIZED) The DataWindow has been maximized.
            </param>
            <param name="i1">The width of the client area of the DataWindow control in pixels.</param>
            <param name="i2">The height of the client area of the DataWindow control in pixels.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.retrieveend(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when the retrieval for the DataWindow or DataStore is complete.
            </summary>
            <param name="l">The number of rows that were retrieved.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.retrieverow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs after a row has been retrieved.
            </summary>
            <param name="l">The number of the row that was just retrieved</param>
            <returns>
            0  Continue processing
            1  Stop the retrieval
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.retrievestart">
            <summary>
            Occurs when the retrieval for the DataWindow or DataStore is about to begin.
            </summary>
            <returns>
            0  Continue processing
            1  Do not perform the retrieval
            2  Do not reset the rows and buffers before retrieving data
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.rowfocuschanged(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when the current row changes in the DataWindow.
            </summary>
            <param name="l">The number of the row that has just become current.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.rowfocuschanging(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when the current row is about to change in the DataWindow.
            The RowFocusChanging event occurs just before the RowFocusChanged event.
            </summary>
            <param name="l1">
            The number of the row that is current (before the row is deleted or its number changes). 
            If the DataWindow object is empty, currentrow is 0 to indicate there is no current row. 
            </param>
            <param name="l2">The number of the row that is about to become current. If the new row is going to be an inserted row, 
            newrow is 0 to indicate that it does not yet exist. </param>
            <returns>
            0  Continue processing (setting the current row)
            1  Prevent the current row from changing
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.scrollhorizontal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Occurs when user scrolls left or right in the DataWindow with the tab or arrow keys or the scroll bar.
            </summary>
            <param name="l">
            The distance in PowerBuilder units of the scroll box from the left end of the scroll bar 
            (if the DataWindow is split, in the pane being scrolled).
            </param>
            <param name="i">The number of the pane being scrolled. </param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.scrollvertical(Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when user scrolls up or down in the DataWindow with the Tab or arrow keys or the scroll bar.
            </summary>
            <param name="i">The distance in PowerBuilder units of the scroll box from the top of the scroll bar.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.sqlpreview(Sybase.PowerBuilder.PBSQLPreviewFunctionValue,Sybase.PowerBuilder.PBSQLPreviewTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs immediately before a SQL statement is submitted to the DBMS. 
            Methods that trigger DBMS activity are Retrieve, Update, and ReselectRow.
            </summary>
            <param name="request">The function that initiated the database activity.</param>
            <param name="sqltype">The type of SQL statement being sent to the DBMS.</param>
            <param name="sqlsyntax">The full text of the SQL statement.</param>
            <param name="buffer">The buffer containing the row involved in the database activity. </param>
            <param name="row">
            The number of the row involved in the database activity, that is, 
            the row being updated, selected, inserted, or deleted.
            </param>
            <returns>
            0  Continue processing
            1  Stop processing
            2  Skip this request and execute the next request
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.treenodeselected(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs after a node in a TreeView DataWindow is selected.
            </summary>
            <param name="row">The number of the first row in the group that has been selected.</param>
            <param name="grouplevel">The level of the group that has been selected.</param>
            <returns>no return codes.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.treenodeselecting(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs before a node in a TreeView DataWindow is selected.
            </summary>
            <param name="row">The number of the first row in the group to be selected.</param>
            <param name="grouplevel">The TreeView level of the group to be selected.</param>
            <returns>Return 0 to continue the selecting operation or return any other value to cancel the selecting operation.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.updateend(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Occurs when all the updates to the database from the DataWindow (or DataStore) are complete.
            </summary>
            <param name="l1">The number of rows inserted.</param>
            <param name="l2">The number of rows updated.</param>
            <param name="l3">The number of rows deleted.</param>
            <returns>0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.updatestart">
            <summary>
            Occurs after a script calls the Update method and just before changes in the DataWindow or DataStore are sent to the database.
            </summary>
            <returns>
            0  Continue processing
            1  Do not perform the update
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.wserror(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Occurs when an error is returned for a DataWindow using a Web service data source. 
            The error can occur during any of the following operations: connect, retrieve, delete, insert, update, or disconnect.
            </summary>
            <param name="operation">type of operation (Retrieve, Update, Insert, Delete, Connect, or Disconnect)</param>
            <param name="rownum">row number or 0 if not applicable, such as when an error occurs during connection to the Web service</param>
            <param name="bufferName">name of the buffer being accessed while the error occurred (Primary, Filter, or Delete)</param>
            <param name="wsdl">URL that defines the Web service, or the assembly that is used access the Web service</param>
            <param name="method">name of the Web service method invoked</param>
            <param name="errormessage">exception message returned from the method</param>
            <returns>
            0  Display the error message
            1  Do not display the error message
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event name to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.OnMouseLButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the MouseLButtonUp event
            </summary>
            <param name="sender">The control sent out the event</param>
            <param name="e">The event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.OnQueryContinueDrag(System.Object,System.Windows.QueryContinueDragEventArgs)">
            <summary>
            Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e"> arguments for the QueryContinueDrag event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ToDWImportType(Sybase.PowerBuilder.PBSaveAsTypeValue)">
            <summary>
            For ImportClipboard, ImportFile, ImportString methods
            Although PBSaveAsType dose not contail RTF type,DWImportType dose,
            the above 3 methods do not need DWImportType.Rtf enum.
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ToDWWebServiceConnection(Sybase.PowerBuilder.PBWSConnection)">
            <summary>
            for InsertDocument only
            Although PBFileType and DWImportType do not match exactly,
            InsertDocument only need DWImportType.Rtf enum.
            </summary>
            <param name="ft"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.AcceptText">
            <summary>
            Applies the contents of the DataWindow's edit control to the current item in the buffer of a DataWindow control or DataStore.
            The data in the edit control must pass the validation rule for the column before it can be stored in the item.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if it fails
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ClearValues(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column number</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ClearValues(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column name</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Create(Sybase.PowerBuilder.PBString)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object. 
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Create(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object.
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <param name="e">The name of a string that will hold any error messages that are generated.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CrosstabDialog">
            <summary>
            Displays the Crosstab Definition dialog box so the user can modify the definition of a crosstab DataWindow at runtime. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DBCancel">
            <summary>
            Cancels the retrieval in process in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DBErrorCode">
            <summary>
            Reports the database-specific error code that triggered the DBError event.
            </summary>
            <returns>
            Returns an error code when a database error occurs
            -1  Can't connect to the database because of missing values in the transaction object.
            -2  Can't connect to the database.
            -3  The key specified in an Update or Retrieve no longer matches an existing row.
            -4  Writing a blob to the database failed.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DBErrorMessage">
            <summary>
            Reports the database-specific error message that triggered the DBError event.
            </summary>
            <returns>
            Returns a string whose value is a database-specific error message generated by a database error.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Describe(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the values of properties of a DataWindow object and controls within the object.
            </summary>
            <param name="s">A string whose value is a blank-separated list of properties or Evaluate functions</param>
            <returns>
            Returns a string that includes a value for each property or Evaluate function.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <param name="d">A value indicating the DataWindow buffer you want to search for required row.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindGroupChange(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Searches for the next break for the specified group. 
            A group break occurs when the value in the column for the group changes. 
            </summary>
            <param name="r">A value identifying the row at which you want to begin searching for the group break.</param>
            <param name="l">The number of the group for which you are searching.</param>
            <returns>
            Returns 0 if the value in the group column did not change and a negative number if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            If the starting row is:
            (1) The first row in a group, then FindGroupChange returns the starting row number
            (2) A row within a group, other than the last group, then FindGroupChange returns the row number of the first row of the next group
            (3) A row in the last group, other than the first row of the last group, then FindGroupChange returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindRequired(Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Reports the next row and column that is required and contains a null value.
            </summary>
            <param name="b">A value indicating the DataWindow buffer you want to search for required columns. </param>
            <param name="r">
            A value identifying the first row to be searched.
            r also stores the number of the found row. 
            </param>
            <param name="c">
            A value identifying the first column to be searched.  
            c also stores the number of the found column. 
            </param>
            <param name="n">
            A string in which you want to store the name of the required column that contains a null value
            </param>
            <param name="u">A value indicating whether you want to validate all rows and columns </param>
            <returns>
            Returns 1 if FindRequired successfully checked the rows and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetBandAtPointer">
            <summary>
            Reports the band in which the pointer is currently located, as well as the row number associated with the band. 
            </summary>
            <returns>
            Returns a string that names the band in which the pointer is located, 
            followed by a tab character and the number of the row associated with the band
            Returns the empty string (" ") if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetChild``1(Sybase.PowerBuilder.PBString,``0@)">
            <summary>
            Provides a reference to a child DataWindow or to a report in a composite DataWindow
            </summary>
            <typeparam name="T1">Type of datawindow child</typeparam>
            <param name="n">A string that names the column containing the child DataWindow or that names the report in the composite DataWindow.</param>
            <param name="c">A variable in which you want to store the reference to the child DataWindow or report. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If any argument is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetMessageText">
            <summary>
            Obtains the message text generated by a crosstab DataWindow object in a DataWindow control. 
            </summary>
            <returns>Returns the text of the message generated by dwcontrol. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetNextModified(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the next row that has been modified in the specified buffer.
            </summary>
            <param name="r">
            A value identifying the row location after which you want to locate the modified row. 
            To search from the beginning, specify 0.
            </param>
            <param name="b"> DataWindow buffer in which you want to locate the modified row.</param>
            <returns>
            Returns the number of the first row that was modified after row in  dwbuffer in dwcontrol.
            Returns 0 if there are no modified rows after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetObjectAtPointer">
            <summary>
            Reports the control within the DataWindow object and row number under the pointer.
            </summary>
            <returns>
            Returns the string whose value is the name of the control under the pointer, followed by a tab character and the row number. 
            Returns the empty string ("") if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSQLPreview">
            <summary>
            Reports the SQL statement that the DataWindow control is currently submitting to the database.
            </summary>
            <returns>
            Returns the current SQL statement.
            Returns the empty string ("") if an error occurs. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetUpdateStatus(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBDWBufferValue@)">
            <summary>
            Reports the row number and buffer of the row that is currently being updated in the database.
            </summary>
            <param name="r">
            A variable that will store the number of the row that will be updated or for which an update was attempted.
            </param>
            <param name="b">the DataWindow buffer that contains the row being updated</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GroupCalc">
            <summary>
            Recalculates the breaks in the grouping levels in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.OleActivate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Not Support in WPF DataWindow
            Just implement for the Interface
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.OleActivate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
             Not Support in WPF DataWindow
             Just implement for the Interface
            </summary>
            <param name="r"></param>
            <param name="c"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Modify(Sybase.PowerBuilder.PBString)">
            <summary>
            Modifies a DataWindow object by applying specifications, given as a list of instructions, 
            that change the DataWindow object's definition. 
            </summary>
            <param name="s">
            A string whose value is the specifications for the modification.
            </param>
            <returns>
            Returns empty string if it succeeds and an error message if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ResetUpdate">
            <summary>
            Clears the update flags in the primary and filter buffers and 
            empties the delete buffer of a DataWindow or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsDiscard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Discards a range of rows in a DataWindow control. 
            </summary>
            <param name="s">The number of the first row you want to discard.</param>
            <param name="e">The number of the last row you want to discard.</param>
            <param name="f">The DataWindow buffer containing the rows to be discarded.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDetailHeight(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the height of each row in the specified range to the specified value.
            </summary>
            <param name="s">The first row in the range of rows for which you want to set the height.</param>
            <param name="e">The last row in the range of rows for which you want to set the height.</param>
            <param name="h">
            The height of the detail area for the specified rows in the units specified for the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetPosition(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Moves a control within the DataWindow to another band 
            or changes the front-to-back order of controls within a band.
            </summary>
            <param name="n">The name of the control within the DataWindow that you want to move.</param>
            <param name="b">
            A string whose value is the name of the band or layer in which you want to position the control. 
            Layer names are background and foreground.
            </param>
            <param name="t">A boolean indicating whether you want to bring the control to the front</param>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSQLPreview(Sybase.PowerBuilder.PBString)">
            <summary>
            The SQL statement for a DataWindow control or DataStore
            </summary>
            <param name="s">
            A string whose value is valid SQL syntax for the SQL statement that will be submitted to the database server
            </param>
            <returns>
            Returns 1 if it succeeds and 0 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShareData(Sybase.PowerBuilder.IPBDataStore)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShareData(Sybase.PowerBuilder.IPBDataWindowControl)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShareData(Sybase.PowerBuilder.IPBDataWindowChild)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShareDataOff">
            <summary>
            Turns off the sharing of data buffers for a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, ShareDataOff returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DeletedCount">
             <summary>
             Reports the number of rows that have been marked for deletion in the database.
             </summary>
             <returns>
             Returns the number of rows that have been deleted from dwcontrol but not updated in the associated database table.
             Returns 0 if no rows have been deleted or if all the deleted rows have been updated in the database table. 
             DeletedCount returns -1 if it fails. 
             If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DeleteRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Deletes a row from a DataWindow control, DataStore object, or child DataWindow.
            </summary>
            <param name="r">
            A value identifying the row you want to delete. To delete the current row, specify 0 for row.
            </param>
            <returns>
            Returns 1 if the row is successfully deleted and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Filter">
            <summary>
            Displays rows in a DataWindow that pass the current filter criteria. 
            Rows that do not meet the filter criteria are moved to the filter buffer.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FilteredCount">
            <summary>
            Reports the number of rows that are not displayed in the DataWindow because of the current filter criteria.
            </summary>
            <returns>
            Returns the number of rows in dwcontrol that are not displayed because they do not meet the current filter criteria.
            Returns 0 if all rows are displayed and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GenerateHTMLForm(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString)">
            <summary>
            Creates an HTML Form element containing columns for one or more rows in a DataWindow control or DataStore.
            </summary>
            <param name="syn">String into which the method places HTML Form syntax.</param>
            <param name="style">String into which the method places HTML style sheet.</param>
            <param name="action">String specifying the ACTION attribute for the Form element.</param>
            <returns>Returns 1 if the method succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GenerateHTMLForm(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Creates an HTML Form element containing columns for one or more rows in a DataWindow control or DataStore.
            </summary>
            <param name="syn">String into which the method places HTML Form syntax.</param>
            <param name="style">String into which the method places HTML style sheet.</param>
            <param name="action">String specifying the ACTION attribute for the Form element.</param>
            <param name="sr">Value specifying the first row to be converted to HTML Form syntax.</param>
            <param name="er">Value specifying the last row to be converted to HTML Form syntax.</param>
            <param name="sc">Column number specifying the first column to be converted to HTML Form syntax.</param>
            <param name="ec">Column number specifying the last column to be converted to HTML Form syntax.</param>
            <returns>Returns 1 if the method succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GenerateHTMLForm(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Creates an HTML Form element containing columns for one or more rows in a DataWindow control or DataStore.
            </summary>
            <param name="syn">String into which the method places HTML Form syntax.</param>
            <param name="style">String into which the method places HTML style sheet.</param>
            <param name="action">String specifying the ACTION attribute for the Form element.</param>
            <param name="sr">Value specifying the first row to be converted to HTML Form syntax.</param>
            <param name="er">Value specifying the last row to be converted to HTML Form syntax.</param>
            <param name="sc">Column number specifying the first column to be converted to HTML Form syntax.</param>
            <param name="ec">Column number specifying the last column to be converted to HTML Form syntax.</param>
            <param name="b">
            A value of the dwBuffer enumerated datatype specifying the buffer from which the method converts rows.
            </param>
            <returns>Returns 1 if the method succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GenerateResultSet">
            <summary>
            Not support in WPF DataWindow
            Just implement for the Interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GenerateResultSet(Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Not support in WPF DataWindow
            Just implement for the Interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetBorderStyle(Sybase.PowerBuilder.PBInt)">
            <summary>
            Reports the border style of a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want to obtain the border style.</param>
            <returns>
            Returns the border style of column.
            Returns null if it fails. If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetBorderStyle(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the border style of a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column name for which you want to obtain the border style.</param>
            <returns>
            Returns the border style of column.
            Returns null if it fails. If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetChanges(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetChanges(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes"> 
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetChanges(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetChanges(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">
             A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetClickedColumn">
            <summary>
            Obtains the number of the column the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the column that the user clicked or double-clicked in dwcontrol. 
            Returns 0 if the user did not click or double-click a column 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetClickedRow">
            <summary>
            Obtains the number of the row the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the row that the user clicked or double-clicked in DataWindow control. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetColumn">
            <summary>
            Obtains the number of the current column. The current column is the column that has focus.
            </summary>
            <returns>
            Returns the number of the current column in DataWindow control.
            Returns 0 if no column is current,and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetColumnName">
            <summary>
            Obtains the name of the current column. The current column is the column that has the focus.
            </summary>
            <returns>
            Returns the name of the current column in dwcontrol. Returns the empty string ("") if no column is current or if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetFormat(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetFormat(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column name for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetFullState(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves the complete state of a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">A variable into which the returned DataWindow will be placed.</param>
            <returns>
            Returns the number of rows in the DataWindow blob if it succeeds and -1 if an error occurs. 
            GetFullState will return -1 if the DataWindow control or DataStore does not have a DataWindow object associated with it.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetFullState(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves the complete state of a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">A variable into which the returned DataWindow will be placed.</param>
            <returns>
            Returns the number of rows in the DataWindow blob if it succeeds and -1 if an error occurs. 
            GetFullState will return -1 if the DataWindow control or DataStore does not have a DataWindow object associated with it.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRow">
            <summary>
            Reports the number of the current row in a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the current row in dwcontrol. 
            Returns 0 if no row is current and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRowIdFromRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRowIdFromRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <param name="b"> The DataWindow buffer that contains the row.</param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRowFromRowId(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the row number of a row in a DataWindow control or DataStore object 
            from the unique row identifier associated with that row.
            </summary>
            <param name="r">
            A number specifying the row identifier for which you want the associated row number.
            </param>
            <returns>
            Returns the row number in buffer. 
            Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRowFromRowId(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
             <summary>
             Gets the row number of a row in a DataWindow control or DataStore object 
             from the unique row identifier associated with that row.
             </summary>
             <param name="r">
             A number specifying the row identifier for which you want the associated row number.
             </param>
             <param name="b"> The DataWindow buffer that contains the row.</param>
             <returns>
             Returns the row number in buffer. 
             Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
             If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSelectedRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Reports the number of the next highlighted row after a specified row in 
            a DataWindow control or DataStore object.
            </summary>
            <param name="r">
            A value identifying the location of the row after which you want to search for the next selected row. 
            </param>
            <returns>
            Returns the number of the first row that is selected after row in dwcontrol. 
            Returns 0 if no row is selected after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSQLSelect">
            <summary>
            Reports the SQL SELECT statement associated with a DataWindow 
            </summary>
            <returns>
            Returns the current SQL SELECT statement
            GetSQLSelect returns the empty string ("") if it cannot return the statement. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetStateStatus(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves the current status of the internal state flags for a DataWindow and places this information in a blob. 
            </summary>
            <param name="Cookie">
            A variable in which you want to store a cookie that contains state information for the DataWindow
            </param>
            <returns>Returns 1 if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetText">
            <summary>
            Obtains the value in the edit control over the current row and column. 
            </summary>
            <returns>
            Returns the value in the edit control over the current row and column.
            Returns the empty string (" ") if no column is currently selected in  dwcontrol. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Gets the values for the DataWindow control or DataStore object's internal transaction object 
            and stores these values in the programmer-specified transaction object.
            </summary>
            <param name="t">
            The name of the transaction object into which you want to put the values
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetValidate(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetValidate(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the item.</param>
            <param name="i">The number of the item in the value list or the code table for the edit style.</param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the item.</param>
            <param name="i">
            The number of the item in the value list or the code table for the edit style.
            </param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportClipboard">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportClipboard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">
            The number of the first detail row in the clipboard that you want to copy.
            </param>
            <param name="args">Th arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportClipboard(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="t">import type</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data. 
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportFile(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="t">import type</param>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data.
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ImportString(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="t">import type</param>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.InsertRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Inserts a row in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row before which you want to insert a row. </param>
            <returns>
            Returns the number of the row that was added if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.IsSelected(Sybase.PowerBuilder.PBLong)">
            <summary>
            Determines whether a row is selected in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row you want to test to see if it is selected</param>
            <returns>
            Returns true if row in dwcontrol is selected and false if it is not selected. 
            If row is greater than the number of rows in dwcontrol or is 0 or negative, IsSelected also returns false. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ModifiedCount">
            <summary>
            Reports the number of rows that have been modified but not updated in a DataWindow or DataStore.
            </summary>
            <returns>
            Returns the number of rows that have been modified in the primary buffer. 
            Returns 0 if no rows have been modified or if all modified rows have been updated in the database table. 
            Returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Print">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Print(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Print(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <param name="showPrintDlg">
            A boolean value indicating whether you want to display the system Print dialog box.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.PrintCancel">
            <summary>
            Cancels the printing of a DataWindow or DataStore 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, PrintCancel returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ReselectRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Accesses the database to retrieve values for all columns that can be updated and 
            refreshes all timestamp columns in a row in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row to reselect</param>
            <returns>
            Returns 1 if it is successful and -1 if the row cannot be reselected
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Reset">
            <summary>
            Clears all the data from a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ResetTransObject">
            <summary>
            Stops a DataWindow control or DataStore from using the programmer-specified transaction object 
            that is currently in effect through a call to the SetTransObject method. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Retrieve">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Retrieve(Sybase.PowerBuilder.PBAny,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Retrieve(Sybase.PowerBuilder.PBArray,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetWSObject(Sybase.PowerBuilder.PBWSConnection)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified Web service connection object. 
            The connection object provides the information necessary for communicating with a Web service data source.
            </summary>
            <param name="wsObject">The connection object you want to use</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If the WSConnection object is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.RowCount">
            <summary>
            Obtains the number of rows that are currently available in a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns the number of rows that are currently available in dwcontrol, 0 if no rows are currently available, and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsAscii(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <param name="nl">A string whose value is placed at the end of each line.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsAscii(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard ANSI text file.
            </summary>
            <param name="f">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values. </param>
            <param name="nl">A string whose value is placed at the end of each line.</param>
            <param name="b">
            A boolean value that determines whether line feed and carriage return characters 
            contained within the row are converted to white space.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <param name="nl">A string whose value is placed at the end of each line. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAsFormattedText(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBEncodingValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore into a standard text file with custom formatting.
            </summary>
            <param name="f">A string whose value is the name of the file in which to save the contents.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <param name="s">A string whose value is the character to be used to delimit values.</param>
            <param name="q">A string whose value is the character to be used to wrap values.</param>
            <param name="nl">A string whose value is placed at the end of each line. </param>
            <param name="b">
            A boolean value that determines whether line feed and carriage return characters contained 
            within the row are converted to white space. 
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollNextPage">
            <summary>
            Scrolls a DataWindow control forward one page
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the last row. 
            ScrollNextPage returns 1 with nested or composite reports and child DataWindows since, 
            in these cases, the current row cannot be changed. ScrollNextPage returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollNextRow">
            <summary>
            Scrolls a DataWindow control to the next row.
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the last row. 
            ScrollNextRow returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollPriorPage">
            <summary>
            Scrolls a DataWindow control backward one page, displaying another group of rows 
            in the DataWindow's display area. 
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the first row. 
            ScrollPriorPage returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollPriorRow">
            <summary>
            Scrolls a DataWindow control backward one row.
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the first row. 
            ScrollPriorRow returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollToRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Scrolls a DataWindow control to the specified row.
            </summary>
            <param name="r">A value identifying the row to which you want to scroll.</param>
            <returns>
            Returns the number of the row to which the DataWindow scrolls if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Highlights or removes highlights from rows in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row you want to select or deselect. </param>
            <param name="f">A boolean value that determines whether the row is selected or not selected.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, the method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetBorderStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetBorderStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetChanges(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetChanges(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change string which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetChanges(Sybase.PowerBuilder.PBBlob,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetChanges(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetColumn(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetColumn(Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetFilter(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies filter criteria for a DataWindow control or DataStore.
            </summary>
            <param name="f">
            A string whose value is a boolean expression that you want to use as the filter criteria.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If no DataWindow object has been assigned to the DataWindow or DataStore, SetFilter returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetFormat(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetFormat(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetFullState(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A blob that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetFullState(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A string that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetHTMLAction(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Accepts action and context information about user interaction with the Web DataWindow
            client control in a Web browser so that newly generated HTML can reflect any requested changes.
            </summary>
            <param name="action">
            A string describing an action associated with a button click or method call in a Web DataWindow client control on a Web page.
            </param>
            <param name="context">A string describing the context of action in the Web DataWindow client control.</param>
            <returns>
            Returns 1 if it succeeds and one of these negative values if an error occurs:
            -1  Reloading the current context failed.
            -2  The action was attempted but it failed.
            -3  The action could not be performed (for example, the action was InsertRow but the DataWindow has no editable fields for entering new data).
            -4  The action was aborted by the HTMLContextApplied event.
            -5  The action is invalid.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRedraw(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Controls the automatic redrawing of an object or control after each change to its properties.
            </summary>
            <param name="f">
            A boolean value that controls whether PowerBuilder redraws an object automatically after a change.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the current row in a DataWindow control or DataStore.
            </summary>
            <param name="r">The row you want to make current</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If row is less than 1 or greater than the number of rows, SetRow fails. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <param name="y">
            The y coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <param name="y">
            The y coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSort(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies sort criteria for a DataWindow control or DataStore.
            </summary>
            <param name="c">A string whose value is valid sort criteria for the DataWindow </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSQLSelect(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies the SQL SELECT statement for a DataWindow control or DataStore.
            </summary>
            <param name="s">
            A string whose value is the SELECT statement for the DataWindow object.
            </param>
            <returns>
            SetSQLSelect returns 1 if it succeeds and -1 if the SELECT statement cannot be changed.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetTabOrder(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the tab sequence number of a column in a DataWindow control to the specified value.
            </summary>
            <param name="c">The column number to which you are assigning a tab value. </param>
            <param name="n">
            The tab sequence number you want to assign to the DataWindow column.
            </param>
            <returns>
            Returns the previous tab value of the column if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetTabOrder(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the tab sequence number of a column in a DataWindow control to the specified value.
            </summary>
            <param name="c">The column name to which you are assigning a tab value. </param>
            <param name="n">
            The tab sequence number you want to assign to the DataWindow column.
            </param>
            <returns>
            Returns the previous tab value of the column if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the text in the edit control over the current row and column 
            in a DataWindow control or DataStore.
            </summary>
            <param name="t">A string whose value you want to put in the current row and column. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Sets the values in the internal transaction object for a DataWindow control or DataStore 
            to the values from the specified transaction object.
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetTransObject(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified transaction object. 
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetValidate(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column number for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetValidate(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column name for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Sort">
            <summary>
            Sorts the rows in a DataWindow control or DataStore using the DataWindow's 
            current sort criteria.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
             If dwcontrol is null, Sort returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Update">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Update(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Update(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <param name="c">
            A boolean value specifying whether dwcontrol should automatically reset the update flags
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwCreate(Sybase.PowerBuilder.PBString)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object. 
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <returns>returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwCreate(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString@)">
            <summary>
            Creates a DataWindow object using DataWindow source code and 
            puts that object in the specified DataWindow control or DataStore object.
            </summary>
            <param name="s">
            A string whose value is the DataWindow source code that will be used to create the DataWindow object.
            </param>
            <param name="e">The name of a string that will hold any error messages that are generated.</param>
            <returns>returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwCrosstabDialog">
            <summary>
            Displays the Crosstab Definition dialog box so the user can modify the definition of a crosstab DataWindow at runtime. 
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwDescribe(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the values of properties of a DataWindow object and controls within the object.
            </summary>
            <param name="s">A string whose value is a blank-separated list of properties or Evaluate functions</param>
            <returns>Returns a string that includes a value for each property or Evaluate function.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwFind(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <returns>Returns the number of the first row that meets the search criteria within the search range.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwFind(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <param name="d">A value indicating the DataWindow buffer you want to search for required row.</param>
            <returns>Returns the number of the first row that meets the search criteria within the search range.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwFindGroupChange(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Searches for the next break for the specified group. 
            A group break occurs when the value in the column for the group changes. 
            </summary>
            <param name="r">A value identifying the row at which you want to begin searching for the group break.</param>
            <param name="l">The number of the group for which you are searching.</param>
            <returns>
            If the starting row is:
            (1) The first row in a group, then FindGroupChange returns the starting row number
            (2) A row within a group, other than the last group, then FindGroupChange returns the row number of the first row of the next group
            (3) A row in the last group, other than the first row of the last group, then FindGroupChange returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwFindRequired(Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Reports the next row and column that is required and contains a null value.
            </summary>
            <param name="b">A value indicating the DataWindow buffer you want to search for required columns. </param>
            <param name="r">
            A value identifying the first row to be searched.
            r also stores the number of the found row. 
            </param>
            <param name="c">
            A value identifying the first column to be searched.  
            c also stores the number of the found column. 
            </param>
            <param name="n">
            A string in which you want to store the name of the required column that contains a null value
            </param>
            <param name="u">A value indicating whether you want to validate all rows and columns </param>
            <returns>Returns 1 if successfully checked the rows and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetBandAtPointer">
            <summary>
            Reports the band in which the pointer is currently located, as well as the row number associated with the band. 
            </summary>
            <returns>
            Returns a string that names the band in which the pointer is located, 
            followed by a tab character and the number of the row associated with the band
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetChild``1(Sybase.PowerBuilder.PBString,``0@)">
            <summary>
            Provides a reference to a child DataWindow or to a report in a composite DataWindow
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="n">A string that names the column containing the child DataWindow or that names the report in the composite DataWindow.</param>
            <param name="c">A variable in which you want to store the reference to the child DataWindow or report. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column number for which you want the status.</param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>A value of the dwItemStatus enumerated datatype</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column name for which you want the status.</param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>A value of the dwItemStatus enumerated datatype</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetMessageText">
            <summary>
            Obtains the message text generated by a crosstab DataWindow object in a DataWindow control. 
            </summary>
            <returns>Returns the text of the message generated by dwcontrol. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetNextModified(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the next row that has been modified in the specified buffer.
            </summary>
            <param name="r">
            A value identifying the row location after which you want to locate the modified row. 
            To search from the beginning, specify 0.
            </param>
            <param name="b"> DataWindow buffer in which you want to locate the modified row.</param>
            <returns>Returns the number of the first row that was modified after row in  dwbuffer in dwcontrol.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetObjectAtPointer">
            <summary>
            Reports the control within the DataWindow object and row number under the pointer.
            </summary>
            <returns>
            Returns the string whose value is the name of the control under the pointer, 
            followed by a tab character and the row number. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetSQLPreview">
            <summary>
            Reports the SQL statement that the DataWindow control is currently submitting to the database.
            </summary>
            <returns>Returns the current SQL statement.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGetUpdateStatus(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBDWBufferValue@)">
            <summary>
            Reports the row number and buffer of the row that is currently being updated in the database.
            </summary>
            <param name="r">
            A variable that will store the number of the row that will be updated or for which an update was attempted.
            </param>
            <param name="b">the DataWindow buffer that contains the row being updated</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwGroupCalc">
            <summary>
            Recalculates the breaks in the grouping levels in a DataWindow.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwOleActivate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Activates Object Linking and Embedding (OLE) for the specified object and 
            sends the specified command verb to the OLE server application.
            </summary>
            <param name="r">
            A long identifying the row location of the Database Blob control in the DataWindow object.
            </param>
            <param name="c">The column number location of the Database Blob.</param>
            <param name="v">Usually 0, but the verb is dependent on the OLE server.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwOleActivate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Activates Object Linking and Embedding (OLE) for the specified object and 
            sends the specified command verb to the OLE server application.
            </summary>
            <param name="r">
            A long identifying the row location of the Database Blob control in the DataWindow object.
            </param>
            <param name="c">The column name location of the Database Blob.</param>
            <param name="v">Usually 0, but the verb is dependent on the OLE server.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwModify(Sybase.PowerBuilder.PBString)">
            <summary>
            Modifies a DataWindow object by applying specifications, given as a list of instructions, 
            that change the DataWindow object's definition. 
            </summary>
            <param name="s">
            A string whose value is the specifications for the modification.
            </param>
            <returns>Returns empty string if it succeeds and an error message if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwResetUpdate">
            <summary>
            Clears the update flags in the primary and filter buffers and 
            empties the delete buffer of a DataWindow or DataStore.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataWindow,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsDiscard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Discards a range of rows in a DataWindow control. 
            </summary>
            <param name="s">The number of the first row you want to discard.</param>
            <param name="e">The number of the last row you want to discard.</param>
            <param name="f">The DataWindow buffer containing the rows to be discarded.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataWindow,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwRowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.WPF.PBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwSetDetailHeight(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the height of each row in the specified range to the specified value.
            </summary>
            <param name="s">The first row in the range of rows for which you want to set the height.</param>
            <param name="e">The last row in the range of rows for which you want to set the height.</param>
            <param name="h">
            The height of the detail area for the specified rows in the units specified for the DataWindow object
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwSetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row. 
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status.</param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s">The new status.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwSetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row. 
            The modification status determines the type of SQL statement the Update method will generate for the row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s">The new status.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwSetPosition(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Moves a control within the DataWindow to another band 
            or changes the front-to-back order of controls within a band.
            </summary>
            <param name="n">The name of the control within the DataWindow that you want to move.</param>
            <param name="b">
            A string whose value is the name of the band or layer in which you want to position the control. 
            Layer names are background and foreground.
            </param>
            <param name="t">A boolean indicating whether you want to bring the control to the front</param>
            <returns>Returns 1 when it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwSetSQLPreview(Sybase.PowerBuilder.PBString)">
            <summary>
            The SQL statement for a DataWindow control or DataStore
            </summary>
            <param name="s">
            A string whose value is valid SQL syntax for the SQL statement that will be submitted to the database server
            </param>
            <returns>Returns 1 if it succeeds and 0 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwShareData(Sybase.PowerBuilder.WPF.PBDataStore)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwShareData(Sybase.PowerBuilder.WPF.PBDataWindow)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwShareData(Sybase.PowerBuilder.WPF.PBDataWindowChild)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="c">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.dwShareDataOff">
            <summary>
            Turns off the sharing of data buffers for a DataWindow control or DataStore.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CanUndo">
            <summary>
            Tests whether Undo can reverse the most recent edit in the editable control 
            over the current row and column.
            </summary>
            <returns>
            Returns true if the last edit can be reversed (undone) using the Undo method and false if the last edit cannot be reversed. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Clear">
            <summary>
            Deletes selected text in the edit control over the current row and column, 
            but does not store it in the clipboard.
            </summary>
            <returns>
            Returns the number of characters that Clear removed from dwcontrol. 
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Copy">
            <summary>
            Puts selected text from the current row and column of an edit control onto the clipboard.
            </summary>
            <returns>
            Returns the number of characters that were copied to the clipboard. 
            If no text is selected in objectref, no characters are copied and Copy returns 0. 
            If an error occurs, Copy returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Cut">
            <summary>
            Deletes selected text in the current row and column of an edit control and stores it on the clipboard, 
            replacing the clipboard contents with the deleted text.
            </summary>
            <returns>
            Returns the number of characters that were cut from dwcontrol and stored in the clipboard. 
            If no text is selected, no characters are cut and Cut returns 0. 
            If an error occurs, Cut returns -1.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.LineCount">
            <summary>
            Determines the number of lines in an edit control that allows multiple lines.
            </summary>
            <returns>
            Returns the number of lines in dwcontrol if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, LineCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control.
            </summary>
            <returns>
            Returns the number of characters that were pasted into the edit control for dwcontrol.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Position">
            <summary>
            Reports the position of the insertion point in a DataWindow.
            </summary>
            <returns>
            Returns the location of the insertion point in editname if it succeeds and -1 if an error occurs. 
            If editname is null, Position returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in the edit control for the current row and column with 
            a specified string.
            </summary>
            <param name="t">The string that replaces the selected text</param>
            <returns>
            Returns the number of characters in string and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Scroll(Sybase.PowerBuilder.PBInt)">
            <summary>
            Scrolls the edit control of a DataWindow a specified number of lines up or down.
            </summary>
            <param name="n">
            A value specifying the direction and number of lines you want to scroll. 
            </param>
            <returns>
            Scroll returns the line number of the first visible line in dwcontrol if it succeeds. 
            Scroll returns -1 if an error occurs. 
            If any argument's value is null, Scroll returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectedLength">
            <summary>
            Determines the total number of characters in the selected text in an edit control, 
            including spaces and line endings.
            </summary>
            <returns>
            Returns the length of the selected text in dwcontrol. If no text is selected, SelectedLength returns 0. 
            If an error occurs, it returns -1. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectedLine">
            <summary>
            Obtains the number of the line that contains the insertion point in an editable control.
            </summary>
            <returns>
            Returns the number of the line containing the insertion point in  dwcontrol. 
            If an error occurs, SelectedLine returns -1. 
            If dwcontrol is null, SelectedLine returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectedStart">
            <summary>
            Reports the position of the first selected character in the edit control.
            </summary>
            <returns>
            Returns the starting position of the selected text in dwcontrol. 
            If no text is selected, SelectedStart returns the position of the character immediately following the insertion point. 
            If an error occurs, SelectedStart returns -1.
            If  dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectedText">
            <summary>
            Obtains the selected text in the edit control of a DataWindow control.
            </summary>
            <returns>
            Returns the selected text in dwcontrol. 
            If there is no selected text or if an error occurs, SelectedText returns the empty string (""). 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectText(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Selects text in an editable control.
            </summary>
            <param name="x">
            A numeric value specifying the position at which you want to start the selection.
            </param>
            <param name="y">
            A numeric value specifying the number of characters you want to select. 
            </param>
            <returns>
            Returns the number of characters selected. 
            If an error occurs, SelectText returns -1. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.TextLine">
            <summary>
            Obtains the text of the line that contains the insertion point.
            </summary>
            <returns>
            Returns the text on the line with the insertion point in editname. 
            If an error occurs, TextLine returns the empty string (""). 
            If editname is null, TextLine returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Undo">
            <summary>
            Cancels the last edit in an edit control, restoring the text to the content 
            before the last change.
            </summary>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs. 
            If editname is null, Undo returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CopyRTF">
            <summary>
            Returns the selected text, pictures, and input fields in a RichText DataWindow 
            as a string with rich text formatting.
            </summary>
            <returns>
            Returns the selected text as a string.
            CopyRTF returns an empty string ("") if there is no selection and selected is true or an error occurs
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CopyRTF(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Returns the selected text, pictures, and input fields in a RichText DataWindow 
            as a string with rich text formatting.
            </summary>
            <param name="s">A value indicating whether to copy selected text only.</param>
            <returns>
            Returns the selected text as a string.
            CopyRTF returns an empty string ("") if there is no selection and selected is true or an error occurs
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CopyRTF(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Returns the selected text, pictures, and input fields in a RichText DataWindow 
            as a string with rich text formatting.
            </summary>
            <param name="s">A value indicating whether to copy selected text only.</param>
            <param name="b">A value specifying the band from which to copy text.</param>
            <returns>
            Returns the selected text as a string.
            CopyRTF returns an empty string ("") if there is no selection and selected is true or an error occurs
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            </param>
            <param name="f">
            A boolean value indicating the direction you want to search. 
            </param>
            <param name="i">
            A boolean value indicating the search string and the found text must match case.
            </param>
            <param name="w">
            A boolean value indicating that the found text must be a whole word. 
            </param>
            <param name="p">
            A boolean value indicating where the search begins.
            </param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range. 
            Returns 0 if no rows are found and one of these negative numbers if an error occurs:
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindNext">
            <summary>
            Finds the next occurrence of text in a RichTextEdit DataWindow control and highlights it, 
            using criteria set up in a previous call of the Find method.
            </summary>
            <returns>
            Returns the number of characters found. 
            FindNext returns 0 if no matching text is found and -1 if the DataWindow's presentation style is not RichTextEdit or an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.InsertDocument(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBFileTypeValue)">
            <summary>
            Inserts a rich text format or plain text file into a DataWindow control or DataStore object. 
            </summary>
            <param name="f">
            A string whose value is the name of the file you want to display in the RichTextEdit control. 
            </param>
            <param name="d">
            A boolean value specifying whether the new file will replace the current contents of the control. 
            </param>
            <param name="t">
            A value of the FileType enumerated datatype specifying the type of file being opened. 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, InsertDocument returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.PasteRTF(Sybase.PowerBuilder.PBString)">
            <summary>
            Pastes rich text data from a string into a DataWindow control or DataStore object.
            </summary>
            <param name="s">A string whose value is data with rich text formatting.</param>
            <returns>
            Returns -1 if an error occurs.
            If richtextstring is null, PasteRTF returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.PasteRTF(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Pastes rich text data from a string into a DataWindow control or DataStore object.
            </summary>
            <param name="s">A string whose value is data with rich text formatting.</param>
            <param name="b">A value specifying the band into which the rich text data is pasted.</param>
            <returns>
            Returns -1 if an error occurs.
            If richtextstring is null, PasteRTF returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Position(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Determines the line and column position of the insertion point or 
            the start and end of selected text in a RichTextEdit control.
            </summary>
            <param name="l1">
            A variable in which you want to save the number of the line where the insertion point or 
            the start of the selection is.
            </param>
            <param name="c1">
            A variable in which you want to save the number in the line of the first character 
            in the selection or after the insertion point. 
            </param>
            <returns>
            Returns the location of the insertion point in editname if it succeeds and -1 if an error occurs. 
            If editname is null, Position returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Position(Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Determines the line and column position of the insertion point or 
            the start and end of selected text in a RichTextEdit control.
            </summary>
            <param name="l1">
            A variable in which you want to save the number of the line where the insertion point or 
            the start of the selection is.
            </param>
            <param name="c1">
            A variable in which you want to save the number in the line of the first character 
            in the selection or after the insertion point. 
            </param>
            <param name="l2">
            A variable in which you want to save the number of the line where the selection ends.
            </param>
            <param name="c2">
            A variable in which you want to save the number in the line of the character 
            before which the selection ends.
            </param>
            <returns>
            Returns the location of the insertion point in editname if it succeeds and -1 if an error occurs. 
            If editname is null, Position returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Selects text beginning and ending at a line and character position in a RichText DataWindow.
            </summary>
            <param name="l1">
            A value specifying the line number where the selection starts.
            </param>
            <param name="c1">
            A value specifying the number in the line of the first character in the selection.
            </param>
            <param name="l2">
            A value specifying the line number where the selection ends. To specify an insertion point,
            </param>
            <param name="c2">
            A value specifying the number in the line of the character before which the selection ends.
            </param>
            <returns>
            Returns the number of characters selected. 
            If an error occurs, SelectText returns -1. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectText(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Selects text beginning and ending at a line and character position in a RichText DataWindow.
            </summary>
            <param name="l1">
            A value specifying the line number where the selection starts.
            </param>
            <param name="c1">
            A value specifying the number in the line of the first character in the selection.
            </param>
            <param name="l2">
            A value specifying the line number where the selection ends. To specify an insertion point,
            </param>
            <param name="c2">
            A value specifying the number in the line of the character before which the selection ends.
            </param>
            <param name="b">
            A value of the Band enumerated datatype specifying the band in which to make the selection. 
            </param>
            <returns>
            Returns the number of characters selected. 
            If an error occurs, SelectText returns -1. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectTextAll">
            <summary>
            Selects all the contents of a RichTextEdit control including any special characters 
            such as carriage return and end-of-file markers.
            </summary>
            <returns>
            Returns the number of characters selected.
            if an error occurs, SelectTextAll returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectTextAll(Sybase.PowerBuilder.PBBandValue)">
            <summary>
            Selects all the contents of a RichTextEdit control including any special characters 
            such as carriage return and end-of-file markers.
            </summary>
            <param name="b">
            A value of the Band enumerated datatype specifying the band in which you want to select all the text.
            </param>
            <returns>
            Returns the number of characters selected.if an error occurs, SelectTextAll returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectTextLine">
            <summary>
            Selects the line containing the insertion point in a RichTextEdit control.
            </summary>
            <returns>
            Returns the number of characters selected if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectTextWord">
            <summary>
            Selects the word containing the insertion point in a RichTextEdit control.
            </summary>
            <returns>
            Returns the number of characters selected if it succeeds and -1 if a word cannot be selected or an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRichTextAlign(Sybase.PowerBuilder.PBAlignmentValue@)">
            <summary>
            Gets the current alignment setting for editing columns with the RichText edit style.
            </summary>
            <param name="align">Current alignment setting of the selected text</param>
            <returns>
            Returns an integer to indicate whether the column that you selected has the RichText edit style and whether the content has one or more alignment types applied.
            0   Success
            -1  No RichText column is being edited
            -2  The selected text is a mix of alignment types
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRichTextAlign(Sybase.PowerBuilder.PBAlignment)">
            <summary>
            Sets the alignment value to use while editing columns with the RichText edit style.
            </summary>
            <param name="align">
            Value for specifying the alignment that you want to set for columns with the RichText edit style. 
            </param>
            <returns>
            Returns 0 if it succeeds and -1 if an error occurs. 
            If the argument's value is null, SetRichTextAlign returns null.
            0  Success
            -1  No RichText column is being edited
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRichTextColor(Sybase.PowerBuilder.PBLong@)">
            <summary>
            Gets the current color setting for editing columns with the RichText edit style.
            </summary>
            <param name="color">A long used to define the color</param>
            <returns>
            Returns an integer to indicate whether the column that you selected has the RichText edit style and whether the content has one or more colors applied.
            0   Success
            -1  No RichText column is being edited
            -2  The selected text is a mix of colors
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRichTextColor(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the color to use while editing columns with the RichText edit style.
            </summary>
            <param name="color">
            A long value specifying the color that you want to set for editing columns with the RichText edit style
            </param>
            <returns>
            Returns 0 if it succeeds and -1 if an error occurs. 
            If the argument's value is null, SetRichTextColor returns null.
            0  Success
            -1  No RichText column is being edited
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRichTextFaceName(Sybase.PowerBuilder.PBString@)">
            <summary>
            Gets the current typeface setting for editing columns with the RichText edit style.
            </summary>
            <param name="name">A string used to define the type</param>
            <returns>
            Returns an integer to indicate whether the column that you selected has the RichText edit style and whether the content has one or more fonts applied.
            0   Success
            -1  No RichText column is being edited
            -2  The selected text is a mix of fonts
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRichTextFaceName(Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the typeface to use while editing columns with the RichText edit style.
            </summary>
            <param name="name">
            A string value for the typeface that you want to set for editing columns with the RichText edit style
            </param>
            <returns>
            Returns 0 if it succeeds and -1 if an error occurs. 
            If the argument's value is null, SetRichTextFaceName returns null.
            0   Success
            -1  No RichText column is being edited
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRichTextStyle(Sybase.PowerBuilder.PBTextStyleValue,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Determines whether selected text or text at the cursor in a RichText column has a specified formatting.
            </summary>
            <param name="s">Value for specifying a text style.</param>
            <param name="state">ndicates whether the selected text or text at the cursor position has a style applied to it</param>
            <returns>
            Returns an integer to indicate whether the column that you selected has the RichText edit style and whether the content has one or more styles applied.
            0   Success
            -1  No RichText column is being edited
            -2  The selected text is a mix of styles
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRichTextStyle(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sets the style of the font to use while editing columns with the RichText edit style.
            </summary>
            <param name="bold">A boolean for the bold style</param>
            <param name="underline">A boolean for the underlined style</param>
            <param name="italics">A boolean for the italic style</param>
            <param name="strikout">A boolean for the strikeout style</param>
            <returns>
            Returns 0 if it succeeds and -1 if an error occurs. 
            If the argument's value is null, SetRichTextStyle returns null.
            0  Success
            -1  No RichText column is being edited
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetRichTextSize(Sybase.PowerBuilder.PBInt@)">
            <summary>
            Gets the current font size setting for editing columns with the RichText edit style.
            </summary>
            <param name="size">Value indicating the point size of the font;</param>
            <returns>
            Returns an integer to indicate whether the column that you selected has the RichText edit style and whether the content has one or more sizes applied.
            0  Success
            -1  No RichText column is being edited
            -2  The selected text is a mix of sizes
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetRichTextSize(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the size of the font to use while editing columns with the RichText edit style.
            </summary>
            <param name="size">
            A long value for the point size of the font that you want to set for editing columns with the RichText edit style
            </param>
            <returns>
            Returns 0 if it succeeds and -1 if an error occurs. 
            If the argument's value is null, SetRichTextSize returns null.
             0  Success
            -1  No RichText column is being edited
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShowHeadFoot(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Displays the panels for editing the header and footer in a RichTextEdit control or 
            hides the panels and returns to editing the main text.
            </summary>
            <param name="s">A boolean value specifying the editing panel to display. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ShowHeadFoot(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Displays the panels for editing the header and footer in a RichTextEdit control or 
            hides the panels and returns to editing the main text.
            </summary>
            <param name="s">A boolean value specifying the editing panel to display. </param>
            <param name="b">
            A boolean value specifying whether the insertion point (caret) 
            for editing the header/footer panel is in the header or the footer section. 
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Clear(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Deletes selected text in the edit control over the current row and column, 
            but does not store it in the clipboard.
            </summary>
            <param name="s">
            A boolean value specifying the clear flag to remove the selected row in RichText grid object
            If s is true, remove the selected text and selected grid row,
            Else, only remove the selected text
            </param>
            <returns>
            Returns the number of characters that Clear removed from dwcontrol. 
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ClearAll">
            <summary>
            Deletes all text in the edit control over the current row and column, 
            but does not store it in the clipboard.
            </summary>
            <returns>
            Returns the number of characters that removed from dwcontrol. 
            If no text, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Collapse(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be collapsed
            </param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the collapse operation succeeds
            One of the following negative values if it fails:
            -1   DataWindow is null
            -5   One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CollapseAll">
            <summary>
            Collapses all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the CollapseAll operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CollapseAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row; also collapses all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be collapsed</param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CollapseLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses all the groups in a TreeView DataWindow that have the specified TreeView level.
            </summary>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Expand(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be expanded
            </param>
            <param name="l">
            The TreeView level of the group to be expanded
            </param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ExpandAll">
            <summary>
            Expands all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ExpandAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level and 
            includes the specified row; also expands all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be expanded</param>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ExpandLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands all the groups in a TreeView DataWindow that have the specified TreeView level. 
            </summary>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.IsExpanded(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Performs a test to see whether a group in a TreeView DataWindow with the specified TreeView level is expanded, 
            and whether the group includes the specified row.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <returns>
            Returns true if the group is expanded and false if the group is not expanded. 
            IsExpanded also returns false if the DataWindow is not a TreeView DataWindow or the row or groupLevel is invalid.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SelectTreeNode(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Selects or deselects a TreeView node in a TreeView DataWindow.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <param name="bSelect">Indicates whether the TreeView node is selected or not</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ResetInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong)">
            <summary>
            Clears ink from an InkPicture control in a DataWindow.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to clear the picture.
            </param>
            <param name="r">
            The number of the row that contains the picture to be cleared.
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink. 
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control.
            </param>
            <param name="f">
            A value of the InkPersistenceFormat enumerated variable that specifies the format 
            in which you want to save the ink. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue,Sybase.PowerBuilder.PBInkCompressionModeValue)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control.
            </param>
            <param name="f">
            A value of the InkPersistenceFormat enumerated variable that specifies the format 
            in which you want to save the ink. 
            </param>
            <param name="m">
            A value of the InkCompressionMode enumerated variable that specifies the compression mode 
            in which you want to save the ink. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.</param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="b">The name of a blob passed by reference that will hold the ink in the control. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInkPicture(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Saves a picture and optionally overlay ink to a file from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the picture. 
            </param>
            <param name="r">
            The number of the row that contains the picture to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file 
            that will hold the picture in the control. 
            </param>
            <param name="format">
            An integer specifying the format in which the picture is to be saved. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveInkPicture(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves a picture and optionally overlay ink to a file from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the picture. 
            </param>
            <param name="r">
            The number of the row that contains the picture to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file 
            that will hold the picture in the control. 
            </param>
            <param name="format">
            An integer specifying the format in which the picture is to be saved. 
            </param>
            <param name="withink">
            A boolean specifying whether overlay ink should be saved with the picture. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grCategoryCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of categories on the category axis of a graph.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the number of categories. 
            </param>
            <returns>
            Returns the count if it succeeds and -1 if an error occurs. 
            If any argument's value is null, CategoryCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grCategoryName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the category name associated with the specified category number.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the name of a specific category. 
            </param>
            <param name="c">
            The number of the category for which you want the name.
            </param>
            <returns>
            Returns the name of categorynumber in controlname. If an error occurs, it returns the empty string (""). 
            If any argument's value is null, CategoryName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grClipboard(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the contents of the system clipboard with a bitmap image of a graph. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Clipboard returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataCount(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the number of data points in the specified series in a graph.
            </summary>
            <param name="n">
            The name of the graph in the DataWindow control 
            </param>
            <param name="s">
            A string whose value is the name of the series for which you want the number of data points
            </param>
            <returns>
            Returns the number of data points in the specified series if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DataCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the fill pattern of a data point.</param>
            <param name="i">The number of the data point for which you want the fill pattern. </param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores a value of the FillPattern enumerated datatype representing the fill pattern used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the symbol type of a data point.</param>
            <param name="i">The number of the data point for which you want the symbol type.</param>
            <param name="m">In PowerBuilder, a variable of type grSymbolType in which you want to store the symbol type.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            Stores, according to the type of symbolvariable, a value of that enumerated datatype representing the symbol used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the width of the line. The width is measured in pixels. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the color of a data point.</param>
            <param name="i">The number of the data point for which you want the color.</param>
            <param name="c">
            A value of the grColorType enumerated datatype (in PowerBuilder) or an integer (in JavaScript) specifying the aspect of the data point for which you want the color.
            </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores an RGB color value in colorvariable. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grFindSeries(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a series in a graph when you know the series' name.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control </param>
            <param name="s">A string whose value is the name of the series for which you want the number</param>
            <returns>
            Returns the number of the series named in seriesname in the graph. 
            If an error occurs, FindSeries returns -1. 
            If any argument's value is null, FindSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="y">
            A value of the grDataType enumerated datatype (in PowerBuilder) specifying whether you want the x or y value of the data point in a scatter graph.
            </param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grGetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Reports the percentage of the pie graph's radius that a pie slice is moved away from the center of the pie graph. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control</param>
            <param name="s">The number that identifies the series</param>
            <param name="i">The number of the exploded data point (that is, the pie slice)</param>
            <param name="p">An integer variable in which you want to store the percentage that the pie slice is exploded</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grObjectAtPointer(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Finds out where the user clicked in a graph. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">In PowerBuilder, an integer variable in which you want to store the number of the series under the pointer.</param>
            <param name="i">In PowerBuilder, an integer variable in which you want to store the number of the data point under the pointer.</param>
            <returns>Returns a value of the grObjectType enumerated datatype</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grResetDataColors(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Restores the color of a data point to the default color for its series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control </param>
            <param name="s">The number of the series in which you want to reset the color of a data point</param>
            <param name="i">The number of the data point for which you want to reset the color</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, ResetDataColors returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSaveAs(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">
            A value of the SaveAsType enumerated datatype 
            </param>
            <param name="i">A boolean value indicating whether you want column headings with the saved data. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SaveAs returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">A value of the SaveAsType enumerated datatype </param>
            <param name="i">A boolean value indicating whether you want column headings with the saved data. </param>
            <param name="e">Character encoding of the file to which the data is saved. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the number of series</param>
            <returns>
            Returns the number of series in the graph if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SeriesCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the series name associated with the specified series number.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the name of a series</param>
            <param name="s">The number of the series for which you want to obtain the name</param>
            <returns>
            Returns the name assigned to the series. 
            If an error occurs, it returns the empty string (""). 
            If any argument's value is null, SeriesName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Reports whether a series in a graph is an overlay—whether it is shown as a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the overlay status.</param>
            <param name="o">In PowerBuilder, a boolean variable in which you want to store a value indicating whether the series is an overlay. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  overlayindicator true if the specified series is an overlay and false if it is not. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. In PowerBuilder, stores in fillvariable identifying the fill pattern for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol used for data points in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="m">In PowerBuilder, the variable of type grSymbolType in which you want to store the symbol value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  symbolvariable a value of the grSymbolType enumerated datatype for the symbol used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the line width for seriesname.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">A string whose value is the name of the series for which you want the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color's RGB value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in colorvariable the RGB value of the specified series and item. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Explodes a pie slice in a pie graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control in which you want to explode a pie slice.</param>
            <param name="s">The number that identifies the series.</param>
            <param name="i">The number of the data point (that is, the pie slice) to be exploded.</param>
            <param name="p">A number between 0 and 100 which is the percentage of the radius that the pie slice is moved away from the center. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer whose value is the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the color of a data point.</param>
            <param name="i">The number of the data point for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">A long whose value is the new color for colortype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Specifies whether a series is an overlay, meaning that the series is represented by a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string (PowerBuilder) or integer (Web ActiveX) whose value is the name of the series whose overlay status you want to change.</param>
            <param name="o">A boolean value indicating whether you want the series to be an overlay, </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer specifying the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.grSetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the item for which you want to set the color.</param>
            <param name="v">A long specifying an RGB value for the new color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CategoryCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of categories on the category axis of a graph.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the number of categories. 
            </param>
            <returns>
            Returns the count if it succeeds and -1 if an error occurs. 
            If any argument's value is null, CategoryCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.CategoryName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the category name associated with the specified category number.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow for which you want the name of a specific category. 
            </param>
            <param name="c">
            The number of the category for which you want the name.
            </param>
            <returns>
            Returns the name of categorynumber in controlname. If an error occurs, it returns the empty string (""). 
            If any argument's value is null, CategoryName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Clipboard(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the contents of the system clipboard with a bitmap image of a graph. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Clipboard returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.DataCount(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the number of data points in the specified series in a graph.
            </summary>
            <param name="n">
            The name of the graph in the DataWindow control 
            </param>
            <param name="s">
            A string whose value is the name of the series for which you want the number of data points
            </param>
            <returns>
            Returns the number of data points in the specified series if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DataCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Obtains the number of a category in a graph when you know the category's label. The category values label the category axis. 
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control. 
            </param>
            <param name="c">
            A value that is the category for which you want the number. 
            The value you specify must be the same datatype as the datatype of the category axis.
            </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph. 
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FindSeries(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of a series in a graph when you know the series' name.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control </param>
            <param name="s">A string whose value is the name of the series for which you want the number</param>
            <returns>
            Returns the number of the series named in seriesname in the graph. 
            If an error occurs, FindSeries returns -1. 
            If any argument's value is null, FindSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetData(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Gets the value of a data point in a series in a graph when the values axis has numeric values.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="y">
            A value of the grDataType enumerated datatype (in PowerBuilder) specifying whether you want the x or y value of the data point in a scatter graph.
            </param>
            <returns>
            Returns the value of the data in datapoint if it succeeds, 0 if the series does not exist, and -1 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the fill pattern of a data point.</param>
            <param name="i">The number of the data point for which you want the fill pattern. </param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores a value of the FillPattern enumerated datatype representing the fill pattern used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the symbol type of a data point.</param>
            <param name="i">The number of the data point for which you want the symbol type.</param>
            <param name="m">In PowerBuilder, a variable of type grSymbolType in which you want to store the symbol type.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            Stores, according to the type of symbolvariable, a value of that enumerated datatype representing the symbol used for the specified data point. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the line style and width of a data point. </param>
            <param name="i">The number of the data point for which you want the line style and width. </param>
            <param name="l">In PowerBuilder, a variable of type LineStyle in which you want to store the line style.</param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the width of the line. The width is measured in pixels. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, for the specified series and data point, GetDataStyle stores its line style in linestyle and the line's width in linewidth. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want the color of a data point.</param>
            <param name="i">The number of the data point for which you want the color.</param>
            <param name="c">
            A value of the grColorType enumerated datatype (in PowerBuilder) or an integer (in JavaScript) specifying the aspect of the data point for which you want the color.
            </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, GetDataStyle stores an RGB color value in colorvariable. 
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">A value of the grDataType enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataValue returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Reports the percentage of the pie graph's radius that a pie slice is moved away from the center of the pie graph. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control</param>
            <param name="s">The number that identifies the series</param>
            <param name="i">The number of the exploded data point (that is, the pie slice)</param>
            <param name="p">An integer variable in which you want to store the percentage that the pie slice is exploded</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Reports whether a series in a graph is an overlay—whether it is shown as a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the overlay status.</param>
            <param name="o">In PowerBuilder, a boolean variable in which you want to store a value indicating whether the series is an overlay. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  overlayindicator true if the specified series is an overlay and false if it is not. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="p">In PowerBuilder, a variable of type FillPattern in which you want to store the fill pattern value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. In PowerBuilder, stores in fillvariable identifying the fill pattern for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the symbol used for data points in a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the style information.</param>
            <param name="m">In PowerBuilder, the variable of type grSymbolType in which you want to store the symbol value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in  symbolvariable a value of the grSymbolType enumerated datatype for the symbol used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want the line style information.</param>
            <param name="l">n PowerBuilder, a variable of type LineStyle in which you want to store the line style of seriesname. </param>
            <param name="w">In PowerBuilder, an integer variable in which you want to store the line width for seriesname.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in linestyle a value of the LineStyle enumerated datatype and in linewidth the width of the line used for the specified series. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">A string whose value is the name of the series for which you want the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">In PowerBuilder, a long variable in which you want to store the color's RGB value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            In PowerBuilder, stores in colorvariable the RGB value of the specified series and item. 
            If any argument's value is null, GetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.ObjectAtPointer(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Finds out where the user clicked in a graph. 
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">In PowerBuilder, an integer variable in which you want to store the number of the series under the pointer.</param>
            <param name="i">In PowerBuilder, an integer variable in which you want to store the number of the data point under the pointer.</param>
            <returns>Returns a value of the grObjectType enumerated datatype</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs(Sybase.PowerBuilder.PBString)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control.
            </param>
            <param name="f">
            A string whose value is the name of the file in which you want to save the data in the graph. 
            </param>
            <param name="t">
            A value of the SaveAsType enumerated datatype
            </param>
            <param name="i">
            A boolean value indicating whether you want column headings with the saved data. 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="n">
            A string whose value is the name of the graph in the DataWindow control.
            </param>
            <param name="f">
            A string whose value is the name of the file in which you want to save the data in the graph.
            </param>
            <param name="t">
            A value of the SaveAsType enumerated datatype
            </param>
            <param name="i">
            A boolean value indicating whether you want column headings with the saved data.
            </param>
            <param name="e">
            Character encoding of the file to which the data is saved. 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SeriesCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Counts the number of series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the number of series</param>
            <returns>
            Returns the number of series in the graph if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SeriesCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SeriesName(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the series name associated with the specified series number.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control for which you want the name of a series</param>
            <param name="s">The number of the series for which you want to obtain the name</param>
            <returns>
            Returns the name assigned to the series. 
            If an error occurs, it returns the empty string (""). 
            If any argument's value is null, SeriesName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataPieExplode(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Explodes a pie slice in a pie graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control in which you want to explode a pie slice.</param>
            <param name="s">The number that identifies the series.</param>
            <param name="i">The number of the data point (that is, the pie slice) to be exploded.</param>
            <param name="p">A number between 0 and 100 which is the percentage of the radius that the pie slice is moved away from the center. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer whose value is the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a data point in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">The number of the series in which you want to set the color of a data point.</param>
            <param name="i">The number of the data point for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype </param>
            <param name="v">A long whose value is the new color for colortype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Specifies whether a series is an overlay, meaning that the series is represented by a line on top of another graph type.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string (PowerBuilder) or integer (Web ActiveX) whose value is the name of the series whose overlay status you want to change.</param>
            <param name="o">A boolean value indicating whether you want the series to be an overlay, </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="p">A value of the FillPattern enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the symbol for data markers in a series.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="m">A value of the grSymbolType enumerated datatype </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype</param>
            <param name="w">An integer specifying the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a series in a graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control. </param>
            <param name="s">A string whose value is the name of the series for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the item for which you want to set the color.</param>
            <param name="v">A long specifying an RGB value for the new color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the transparency percentage of a data point in a DirectX 3D graph (those with 3D rendering).
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the transparency value.</param>
            <param name="v">
            Integer value for percent transparency. 
            A value of 0 means that the data point is opaque and a value of 100 means that it is completely transparent. 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataTransparency returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the transparency percentage of a series in a DirectX 3D graph (those with 3D rendering).
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The string that identifies the series from which you want the transparency value.</param>
            <param name="v">
            Integer value for percent transparency. 
            A value of 0 means that the series is opaque and a value of 100 means that it is completely transparent. 
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetSeriesTransparency returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the transparency percentage for a data point in a series in a DirectX 3D graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series in which you want to set the transparency value of a data point.</param>
            <param name="i">The number of the data point for which you want to set a transparency value.</param>
            <param name="v">Integer value for percent transparency.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataTransparency returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the transparency percentage of a series in a DirectX 3D type graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The string that identifies the series in which you want to set the transparency value.</param>
            <param name="v">Integer value for percentage transparency. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesTransparency returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetDataLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Determines whether the data at a given data point is labeled in a DirectX 3D graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The string that identifies the series in which you want the data labelling value.</param>
            <param name="i">The data point for which you want to obtain a label.</param>
            <param name="v">Boolean passed by reference to indicate whether the data point has a label. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.GetSeriesLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Determines whether the data for a given series is labeled in a DirectX 3D graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The string that names the series in which you want the series label setting.</param>
            <param name="v">A boolean passed by reference to indicate whether the series has labels. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetSeriesLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetDataLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the data label for a DirectX 3D graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The number that identifies the series in which you want to set the data labelling value.</param>
            <param name="i">The datapoint.</param>
            <param name="v">Indicates whether to label the data with its value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.SetSeriesLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the series label for a DirectX 3D graph.
            </summary>
            <param name="n">A string whose value is the name of the graph in the DataWindow control.</param>
            <param name="s">The string that names the series in which you want to change the series label setting.</param>
            <param name="v">Indicates whether to label the series with its values.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.Resize(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Resizes an object or control by setting its Width and Height 
            properties and then redraws the object.
            </summary>
            <param name="w">The new width in PowerBuilder units</param>
            <param name="h">The new height in PowerBuilder units</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs or if objectname is a minimized or maximized window. 
            If any argument's value is null, Resize returns null.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sybase.PowerBuilder.WPF.PBDataWindow.Drag(Sybase.PowerBuilder.PBDragModesValue)" -->
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindow.FocusWPFControl">
            <summary>
            the datawindow's setfocus funct
            </summary>
            <returns>Returns true if it succeeds and false if it fails.</returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ButtonClickedEvent">
            <summary>
            Button Click Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ButtonClickingEvent">
            <summary>
            Button Clicking Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.CollapsedEvent">
            <summary>
            Collapsed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.CollapsingEvent">
            <summary>
            Collapsing Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DBErrorEvent">
            <summary>
            DB Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DoubleClickedEvent">
            <summary>
            Double Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DragDropEvent">
            <summary>
            Drag Drop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DragEnterEvent">
            <summary>
            Drag Enter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DragLeaveEvent">
            <summary>
            Drag Leave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.DragWithinEvent">
            <summary>
            Drag Within Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.EditChangedEvent">
            <summary>
            Edit Changed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ErrorEvent">
            <summary>
            Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ExpandedEvent">
            <summary>
            Expanded Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ExpandingEvent">
            <summary>
            Expanding Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.GetFocusEvent">
            <summary>
            Get Focus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ItemChangedEvent">
            <summary>
            Item Changed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ItemErrorEvent">
            <summary>
            Item Error Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ItemFocusChangedEvent">
            <summary>
            Item Focus Changed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.LoseFocusEvent">
            <summary>
            Lose Focus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.PrintEndEvent">
            <summary>
            Print End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.PrintPageEvent">
            <summary>
            Print Page Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.PrintStartEvent">
            <summary>
            Print Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RButtonDownEvent">
            <summary>
            Right Button Down Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ResizeEvent">
            <summary>
            Resize Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RetrieveEndEvent">
            <summary>
            Retrieve End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RetrieveRowEvent">
            <summary>
            Retrieve Row Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RetrieveStartEvent">
            <summary>
            Retrieve Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RowFocusChangedEvent">
            <summary>
            Row Focus Changed Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.RowFocusChangingEvent">
            <summary>
            Row Focus Changing Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollHorizontalEvent">
            <summary>
            Scroll Horizontal Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.ScrollVerticalEvent">
            <summary>
            Scroll Vertical Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.SQLPreviewEvent">
            <summary>
            SQL Preview Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.TreeNodeSelectedEvent">
            <summary>
            Tree Node Selected Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.TreeNodeSelectingEvent">
            <summary>
            Tree Node Selecting Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.UpdateEndEvent">
            <summary>
            Update End Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.UpdateStartEvent">
            <summary>
            Update Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBDataWindow.WsErrorEvent">
            <summary>
            Ws Error Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Border">
            <summary>
            Gets or sets the Border
            
            When the Border property is enabled, the DataWindow control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.BorderStyle">
            <summary>
            Gets or sets the borderstyle
            
            The border style of the DataWindow control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.DataObject">
            <summary>
            Gets or sets the dataobject
            
            The name of the DataWindow object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Enabled">
            <summary>
            Gets or sets the enabled
            
            Whether the DataWindow control is Enabled
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.HScrollBar">
            <summary>
            Gets or sets the hscrollbar
            When the HScroll Bar property is enabled, a horizontal scroll bar appears when all of the data cannot be displayed at one time. 
            If this property is not enabled, no horizontal scroll bar appears.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.LiveScroll">
            <summary>
            Gets or sets the livescroll
            
            When the LiveScroll property is enabled, the rows in the DataWindow control scroll while the user is moving the scroll box. 
            If this property is not enabled, the rows do not scroll until the user releases the scroll box.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Object">
            <summary>
            Gets the object
            
            The Object property of the DataWindow control lets you specify expressions that refer directly to the data of the DataWindow object in the control. 
            This direct data manipulation allows you to access small and large amounts of data in a single statement, without calling methods.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.RightToLeft">
            <summary>
            Gets or sets the righttoleft
            
            The RightToLeft property specifies that characters should be displayed in right-to-left order. 
            The application must be running on an operating system that supports right-to-left display.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.VScrollBar">
            <summary>
            Gets or sets the vscrollbar
            
            When the VScrollBar property is enabled, PowerBuilder adds a vertical scroll bar to the right of DataWindow control 
            when the contents of the object are outside the borders. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Height">
            <summary>
            Gets or sets the Height property of the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Width">
            <summary>
            Gets or sets the Width property of the control 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindow.Resizable">
            <summary>
            Gets or sets the resizable
            
            A resizable DataWindow has a thick border, and the user can use the mouse or the keyboard to resize it.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.DragDropAdorner">
            <summary>
            the dragdrop adorner class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.DragDropAdorner.presenter">
            <summary>
            the content presenter for the adorner
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.DragDropAdorner.isCursor">
            <summary>
            indicating whether or not this is used for dragcursor
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.DragDropAdorner.position">
            <summary>
            the position where to draw the adorner
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.DragDropAdorner.visible">
            <summary>
            the visible local value
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.ReplaceImage(System.Windows.UIElement)">
            <summary>
            Replace the image when dragicon is changed
            </summary>
            <param name="elementToShow">The new iamge to be shown</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.#ctor(System.Windows.UIElement,System.Windows.UIElement,System.Boolean)">
            <summary>
            constructor for dragdrop adorner
            </summary>
            <param name="element">the container element</param>
            <param name="elementToShow">the adornered element</param>
            <param name="forCursor">if it is used for dragcursor</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.UpdatePosition(System.Windows.Point)">
            <summary>
            updates the position of the adorner
            </summary>
            <param name="point">the position</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.UpdateVisible(System.Boolean)">
            <summary>
            updates the position of the adorner
            </summary>
            <param name="point">the position</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the size required for child elements and determines a size
            </summary>
            <param name="constraint">A size to constrain the AdornerDecorator to.</param>
            <returns>A Size object representing the amount of layout space needed by the AdornerDecorator</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for the AdornerDecorator.
            </summary>
            <param name="finalSize">The size reserved for this element by its parent.</param>
            <returns>The actual size needed by the element.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.GetVisualChild(System.Int32)">
            <summary>
            Gets a Visual child at the specified index position.
            </summary>
            <param name="index">The index position of the wanted Visual child.</param>
            <returns>A Visual child of the parent Viewbox element.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
            <summary>
            Returns a Transform for the adorner, based on the transform that is currently applied to the adorned element.
            </summary>
            <param name="transform">The transform that is currently applied to the adorned element.</param>
            <returns>A transform to apply to the adorner.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.CreateClone(System.Windows.UIElement)">
            <summary>
            create a clone for the ui element
            </summary>
            <param name="element">the ui element</param>
            <returns>the clone result ui element</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.CloneSingleControl(System.Windows.UIElement)">
            <summary>
            clone a single control
            </summary>
            <param name="element">the ui element will be cloned</param>
            <returns>the result ui element</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.CloneMultiListviewItems(Sybase.PowerBuilder.WPF.Controls.ListView)">
            <summary>
            clone the listview items
            </summary>
            <param name="lv">the listview control</param>
            <returns>the clone result ui element</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.CloneTreeviewItem(Sybase.PowerBuilder.WPF.Controls.TreeView)">
            <summary>
            clone the treeview item
            </summary>
            <param name="element">the treeview item</param>
            <returns>the clone result ui element</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.GetReportListViewItemByIndex(Sybase.PowerBuilder.WPF.Controls.ListView,System.Int32)">
            <summary>
            Get the report view listview's item by index
            </summary>
            <param name="lv">the listview control</param>
            <param name="index">the listview index</param>
            <returns>the listview item</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.DragDropAdorner.GetListviewSelectedItems(Sybase.PowerBuilder.WPF.Controls.ListView)">
            <summary>
            Get the listview's selected items
            </summary>
            <param name="lv">the listview control</param>
            <returns>the selected items collection</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.DragDropAdorner.VisualChildrenCount">
            <summary>
            Gets the number of child Visual objects in this instance of AdornerDecorator.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBToolbarComparer">
            <summary>
            The PBToolbarComparer class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBToolbarComparer.#ctor">
            <summary>
            The contructor of PBToolbarComparer
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBToolbarComparer.Compare(System.Object,System.Object)">
            <summary>
            the compare method
            </summary>
            <param name="x">pbtoolbar object x</param>
            <param name="y">pbtoolbar object y</param>
            <returns>
            Less than zero: x is less than y. 
            Zero: x equals y
            Greater than zero: x is greater than y
            </returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMenuCascade">
            <summary>
            The PBMenuCascade class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenuCascade.columns">
            <summary>
            Columns property
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenuCascade.currentItem">
            <summary>
            CurrentItem property
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMenuCascade.dropDown">
            <summary>
            DropDown property
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenuCascade.#ctor">
            <summary>
            The contructor of PBMenuCascade
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMenuCascade.OnDestroy">
            <summary>
            the OnDestroy event handler
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenuCascade.Columns">
            <summary>
            Gets or sets the number of columns in the drop-down button palette.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenuCascade.CurrentItem">
            <summary>
            Gets or sets the Menu object that is currently displayed on the main toolbar 
            as the representative (active) button for the drop-down button palette.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMenuCascade.DropDown">
            <summary>
            Gets or sets a value indicating whether the Menu objects contained in the 
            MenuCascade object display as a drop-down button palette.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBEditMask">
            <summary>
            The PBEditMask class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.modifiedEvent">
            <summary>
            Modified event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.otherEvent">
            <summary>
            Other event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.rbuttonDownEvent">
            <summary>
            RButtonDown event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBEditMask.wpfEditMask">
            <summary>
            the real inner wpf EditMask object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.#ctor">
            <summary>
            Constructor of PBEditMask class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.modified">
            <summary>
            stub of modified mthod
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="ul"> UnsignedLong by value </param>
            <param name="l"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.CreateInnerControl">
            <summary>
            Create the inner control instance and attach event functions on it.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.CanUndo">
            <summary>
            Tests whether Undo can reverse the most recent edit for an editable control.
            </summary>
            <returns>
            Returns true if the last edit can be reversed (undone) using the Undo function 
            and false if the last edit cannot be reversed. If editname is null, CanUndo returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Clear">
            <summary>
            Deletes selected text or an OLE object from the specified control, 
            but does not store it in the clipboard.
            </summary>
            <returns>
            returns the number of characters that Clear removed from objectname.
            If no text is selected, no characters are removed and Clear returns 0. 
            If an error occurs, Clear returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Copy">
            <summary>
            Puts selected text or an OLE object on the clipboard. 
            Copy does not change the source text or object.
            </summary>
            <returns>
            Copy returns the number of characters that were copied to the clipboard. 
            If no text is selected in objectref, no characters are copied and Copy returns 0.
            If an error occurs, Copy returns -1</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Cut">
            <summary>
            Deletes selected text or an OLE object from the specified control and stores it on the clipboard, 
            replacing the clipboard contents with the deleted text or object.
            </summary>
            <returns>
            Cut returns the number of characters that were cut from controlname and stored in the clipboard. 
            If no text is selected, no characters are cut and Cut returns 0. 
            If an error occurs, Cut returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.LineCount">
            <summary>
            Determines the number of lines in an edit control that allows multiple lines
            </summary>
            <returns>
            Returns the number of lines in editname 
            if it succeeds and -1 if an error occurs. 
            If editname is null, LineCount returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.LineLength">
            <summary>
            Determines the length of the line containing the insertion point in an edit control
            </summary>
            <returns>
            Returns the length of the line containing the insertion point in editname. 
            Returns -1 if an error occurs. 
            If editname is null, LineLength returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Paste">
            <summary>
            Inserts (pastes) the contents of the clipboard into the specified control. 
            For editable controls, text on the clipboard is pasted at the insertion point
            </summary>
            <returns> 
            returns the number of characters that were pasted into  controlname. 
            If nothing has been cut or copied (the clipboard is empty), 
            the Paste function does not change the contents of the edit control and returns 0. 
            If the clipboard contains nontext data (for example, a bitmap or OLE object) 
            and the control cannot accept that data, Paste does not change the contents and returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Position">
            <summary>
            Determines the position of the insertion point in an edit control.
            </summary>
            <returns>
            Returns the location of the insertion point in editname 
            if it succeeds and -1 if an error occurs. 
            If editname is null, Position returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.ReplaceText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces selected text in an edit control with a specified string.
            </summary>
            <param name="replString">The string that replaces the selected text</param>
            <returns>
            returns the number of characters in string and -1 if an error occurs. 
            If any argument's value is null, ReplaceText returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Scroll(Sybase.PowerBuilder.PBLong)">
            <summary>
            Scrolls a EditMask control or the edit control of a DataWindow a specified number of lines up or down
            </summary>
            <param name="n">
            A long specifying the direction and number of lines you want to scroll.
            To scroll down, use a positive long value. To scroll up, use a negative long value
            </param>
            <returns>
            Scroll returns the line number of the first visible line in editname if it succeeds. 
            Scroll returns -1 if an error occurs. 
            If any argument's value is null, Scroll returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SelectedLength">
            <summary>
            Determines the total number of characters in the selected text in an editable control, 
            including spaces and line endings
            </summary>
            <returns>
            Returns the length of the selected text in editname. 
            If no text is selected, SelectedLength returns 0. 
            If an error occurs, it returns -1. 
            If editname is null, SelectedLength returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SelectedLine">
            <summary>
            Obtains the number of the line that contains the insertion point in an editable control
            </summary>
            <returns>
            Returns the number of the line containing the insertion point in  editname. 
            If an error occurs, SelectedLine returns -1.
            If editname is null, SelectedLine returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SelectedStart">
            <summary>
            Reports the position of the first selected character in an editable control.
            </summary>
            <returns>
            Long. Returns the starting position of the selected text in editname. 
            If no text is selected, SelectedStart returns the position of the character immediately following the insertion point. 
            If an error occurs, SelectedStart returns -1. 
            If  editname is null, SelectedStart returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SelectedText">
            <summary>
            Obtains the selected text in an editable control
            </summary>
            <returns>
            Returns the selected text in editname. 
            If there is no selected text or if an error occurs, SelectedText returns the empty string (""). 
            If editname is null, SelectedText returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SelectText(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBULong)">
            <summary>
            Selects text in an editable control. 
            You specify where the selection begins and how many characters to select
            </summary>
            <param name="selStartIndex">A long specifying the position at which you want to start the selection</param>
            <param name="noofChars">
            A long specifying the number of characters you want to select. 
            If length is 0, no text is selected but PowerBuilder moves the insertion point to the location specified in start.
            </param>
            <returns>
            Returns the number of characters selected. If an error occurs, SelectText returns -1
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.TextLine">
            <summary>
            Obtains the text of the line that contains the insertion point. 
            TextLine works for controls that can contain multiple lines.
            </summary>
            <returns>
            Returns the text on the line with the insertion point in editname. 
            If an error occurs, TextLine returns the empty string (""). 
            If editname is null, TextLine returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.Undo">
            <summary>
            Cancels the last edit in an edit control, restoring the text to the content before the last change.
            </summary>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs. If editname is null, Undo returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBDate@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBDecimal@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.GetData(Sybase.PowerBuilder.PBTime@)">
            <summary>
            Obtains the unformatted data in the control.
            </summary>
            <param name="d">A variable to which GetData will assign the unformatted data in the EditMask control. </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's 
            value is null, GetData returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.SetMask(Sybase.PowerBuilder.PBMaskDataTypeValue,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the edit mask and edit mask datatype for an EditMask control.
            </summary>
            <param name="t">A MaskDataType enumerated datatype indicating the datatype of the mask. </param>
            <param name="m">A string whose value is the edit mask.</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If any argument's value is null, SetMask returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.ConvertAlignmentFromWPFToPB(System.Windows.TextAlignment)">
            <summary>
            To convert WPF Alignment to PBAlignment 
            </summary>
            <param name="alignment">WPF Alignment</param>
            <returns>PBAlignment Value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.ConvertAlignmentFromPBToWPF(Sybase.PowerBuilder.PBAlignmentValue)">
            <summary>
            To convert PBAlignment to WPF Alignment
            </summary>
            <param name="pbalignment">PBAlignment Value</param>
            <returns>WPF Alignment</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.ConvertMaskDataTypeFromDWToPB(Sybase.DataWindow.Shared.MaskDataType)">
            <summary>
            To convert DW MaskDataType to PBMaskDataType 
            </summary>
            <param name="maskdatatype">DW MaskDataType</param>
            <returns>PBMaskDataType Value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.ConvertMaskDataTypeFromPBToDW(Sybase.PowerBuilder.PBMaskDataTypeValue)">
            <summary>
            To convert PBMaskDataType to DW MaskDataType
            </summary>
            <param name="pbmaskdatatype">PBMaskDataType Value</param>
            <returns>DW MaskDataType</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.OnConstructor(System.Object,System.EventArgs)">
            <summary>
            the Constructor event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.OnGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the GotFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.OnLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            the LostFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.OnModified(System.Object,System.EventArgs)">
            <summary>
            the Modified event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBEditMask.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            the MouseRButtonDown event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.DragWithinEvent">
            <summary>
            DragWithin event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.LoseFocusEvent">
            <summary>
            LoseFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.ModifiedEvent">
            <summary>
            Modified event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBEditMask.RButtonDownEvent">
            <summary>
            RButtonDown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Italic">
            <summary>
            Gets or sets a value indicating whether text displays in italic format.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.TextSize">
            <summary>
            Gets or sets the point size of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.UnderLine">
            <summary>
            Gets or sets a value indicating whether text displays with underlines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Weight">
            <summary>
            Gets or sets the weight of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Accelerator">
            <summary>
            Gets or sets the ASCII value of the accelerator key.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Alignment">
            <summary>
            Gets or sets the alignment of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.AutoHScroll">
            <summary>
            Gets or sets a value indicating whether PowerBuilder automatically scrolls left or right.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.AutoVScroll">
            <summary>
            Gets or sets a value indicating whether PowerBuilder automatically scrolls up or down.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.BackColor">
            <summary>
            Gets or sets the numeric value of the background color.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.DisplayOnly">
            <summary>
            Gets or sets a value indicating whether the text in the control is display only and cannot be changed by the user. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.HideSelection">
            <summary>
            Gets or sets a value indicating whether selected text stays selected (highlighted) even when the control does not have focus
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.HScrollBar">
            <summary>
            Gets or sets a value indicating whether a horizontal scroll bar displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.IgnoreDefaultButton">
            <summary>
            Gets or sets a value indicating whether the Clicked event for the window's Default command button is triggered when user presses Enter.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.IMEMode">
            <summary>
            Gets or sets the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Limit">
            <summary>
            Gets or sets the maximum number of characters (0 to 32,767) that can be entered in the control (0 means unlimited)
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.RightToLeft">
            <summary>
            Gets or sets a value indicating whether characters should be displayed in right-to-left order
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.TabStop">
            <summary>
            Gets or sets the positions of tab stops in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Text">
            <summary>
            Gets or sets the text that displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.TextCase">
            <summary>
            Gets or sets the case used to display text the user enters.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.TextColor">
            <summary>
            Gets or sets the color to be used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.VScrollBar">
            <summary>
            Gets or sets a value indicating whether a vertical scroll bar displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.AutoSkip">
            <summary>
            Gets or sets a value indicating whether to skip to the next control when the last character in the edit mask has been entered. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.CalendarBackColor">
            <summary>
            Gets or sets the numeric value of the background color of the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.CalendarTextColor">
            <summary>
            Gets or sets the numeric value of the text color in the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.CalendarTitleBackColor">
            <summary>
            Gets or sets the numeric value of the background color of the calendar's title
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.CalendarTitleTextColor">
            <summary>
            Gets or sets the numeric value of the color used for text in the calendar's title
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.CalendarTrailingTextColor">
            <summary>
            Gets or sets the numeric value of the color used for leading and trailing days in the calendar
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.DisplayData">
            <summary>
            Gets or sets the data that initially displays in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.DropDownCalendar">
            <summary>
            Gets or sets a value indicating whether a drop-down calendar displays in a control with a Date or DateTime edit mask.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.DropDownRight">
            <summary>
            Gets or sets a value indicating whether the drop-down calendar is aligned with the right or left side of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Increment">
            <summary>
            Gets or sets the increment of the spin.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Mask">
            <summary>
            Gets or sets the mask to use to format and edit data in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.MaskDataType">
            <summary>
            Gets or sets the datatype of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.MinMax">
            <summary>
            Gets or sets the minimum and maximum values for the spin.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.Spin">
            <summary>
            Gets or sets a value indicating whether to scroll through the spin values.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBEditMask.UseCodeTable">
            <summary>
            Gets or sets a value indicating whether PowerBuilder uses the code table for the column to validate data.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBDataWindowChild">
            <summary>
            PBDataWindowChild class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindowChild.dwchild">
            <summary>
            Child DataWindow
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindowChild.dwParent">
            <summary>
            Parent of DataWindow
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBDataWindowChild.topDWParent">
            <summary>
            Top parent of DataWindow
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.#ctor">
            <summary>
            The Construcotr of PBDataWindowChild
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.AcceptText">
            <summary>
            Applies the contents of the DataWindow's edit control to the current item in the buffer of a DataWindow control or DataStore.
            The data in the edit control must pass the validation rule for the column before it can be stored in the item.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if it fails
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ClearValues(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column number</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ClearValues(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes all the items from a value list or code table associated with a DataWindow column. 
            ClearValues does not affect the data stored in the column.
            </summary>
            <param name="c">column name</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.DBCancel">
            <summary>
            Cancels the retrieval in process in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.DBErrorCode">
            <summary>
            Reports the database-specific error code that triggered the DBError event.
            </summary>
            <returns>
            Returns an error code when a database error occurs
            -1  Can't connect to the database because of missing values in the transaction object.
            -2  Can't connect to the database.
            -3  The key specified in an Update or Retrieve no longer matches an existing row.
            -4  Writing a blob to the database failed.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.DBErrorMessage">
            <summary>
            Reports the database-specific error message that triggered the DBError event.
            </summary>
            <returns>
            Returns a string whose value is a database-specific error message generated by a database error.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.DeletedCount">
             <summary>
             Reports the number of rows that have been marked for deletion in the database.
             </summary>
             <returns>
             Returns the number of rows that have been deleted from dwcontrol but not updated in the associated database table.
             Returns 0 if no rows have been deleted or if all the deleted rows have been updated in the database table. 
             DeletedCount returns -1 if it fails. 
             If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.DeleteRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Deletes a row from a DataWindow control, DataStore object, or child DataWindow.
            </summary>
            <param name="r">
            A value identifying the row you want to delete. To delete the current row, specify 0 for row.
            </param>
            <returns>
            Returns 1 if the row is successfully deleted and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Filter">
            <summary>
            Displays rows in a DataWindow that pass the current filter criteria. 
            Rows that do not meet the filter criteria are moved to the filter buffer.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.FilteredCount">
            <summary>
            Reports the number of rows that are not displayed in the DataWindow because of the current filter criteria.
            </summary>
            <returns>
            Returns the number of rows in dwcontrol that are not displayed because they do not meet the current filter criteria.
            Returns 0 if all rows are displayed and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetBorderStyle(Sybase.PowerBuilder.PBInt)">
            <summary>
            Reports the border style of a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want to obtain the border style.</param>
            <returns>
            Returns the border style of column.
            Returns null if it fails. If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetBorderStyle(Sybase.PowerBuilder.PBString)">
            <summary>
            Reports the border style of a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want to obtain the border style.</param>
            <returns>
            Returns the border style of column.
            Returns null if it fails. If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetChanges(Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetChanges(Sybase.PowerBuilder.PBBlob@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes"> 
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetChanges(Sybase.PowerBuilder.PBString@)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob. 
            </summary>
            <param name="Changes">
            A variable into which the returned DataWindow changes will be placed.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetChanges(Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBlob)">
            <summary>
            Retrieves changes made to a DataWindow or DataStore as a blob.
            </summary>
            <param name="Changes">
             A variable into which the returned DataWindow changes will be placed.
            </param>
            <param name="Cookie">
            A read-only blob created by GetStateStatus that is compared with the changeblob to 
            determine the likely success of a subsequent call to SetChanges.
            </param>
            <returns>
            Returns the number of rows in the DataWindow change blob if it succeeds and one of the following values if it fails:
            -1  An internal error occurred.
            -2  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; an attempt to use this blob in a SetChanges call against the DataWindow will fail.
            -3  There is a conflict between the state of the DataWindow change blob and the state of the DataWindow from which the cookie was created; but partial changes from the change blob can be applied.
            If any argument is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetClickedColumn">
            <summary>
            Obtains the number of the column the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the column that the user clicked or double-clicked in dwcontrol. 
            Returns 0 if the user did not click or double-click a column 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetClickedRow">
            <summary>
            Obtains the number of the row the user clicked or double-clicked in a 
            DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the row that the user clicked or double-clicked in DataWindow control. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetColumn" -->
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetColumnName">
            <summary>
            Obtains the name of the current column. The current column is the column that has the focus.
            </summary>
            <returns>
            Returns the name of the current column in dwcontrol. Returns the empty string ("") if no column is current or if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetFormat(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column number for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetFormat(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the display format assigned to a column in a DataWindow control or DataStore object.
            </summary>
            <param name="c">The column name for which you want the display format.</param>
            <returns>
            Returns the display format specification
            If an error occurs, GetFormat returns the empty string (" "). 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetRow">
            <summary>
            Reports the number of the current row in a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns the number of the current row in dwcontrol. 
            Returns 0 if no row is current and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetRowIdFromRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetRowIdFromRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Gets the unique row identifier of a row in a DataWindow control or DataStore object 
            from the row number associated with that row.
            </summary>
            <param name="r">
            A number specifying the row number for which you want the associated row identifier.
            </param>
            <param name="b"> The DataWindow buffer that contains the row.</param>
            <returns>
            Returns the row identifier in buffer. 
            Returns 0 if the row identifier is not in the current buffer and -1 if an error occurs.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetRowFromRowId(Sybase.PowerBuilder.PBLong)">
            <summary>
            Gets the row number of a row in a DataWindow control or DataStore object 
            from the unique row identifier associated with that row.
            </summary>
            <param name="r">
            A number specifying the row identifier for which you want the associated row number.
            </param>
            <returns>
            Returns the row number in buffer. 
            Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetRowFromRowId(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
             <summary>
             Gets the row number of a row in a DataWindow control or DataStore object 
             from the unique row identifier associated with that row.
             </summary>
             <param name="r">
             A number specifying the row identifier for which you want the associated row number.
             </param>
             <param name="b"> The DataWindow buffer that contains the row.</param>
             <returns>
             Returns the row number in buffer. 
             Returns 0 if the row number is not in the current buffer and -1 if an error occurs. 
             If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetSelectedRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Reports the number of the next highlighted row after a specified row in 
            a DataWindow control or DataStore object.
            </summary>
            <param name="r">
            A value identifying the location of the row after which you want to search for the next selected row. 
            </param>
            <returns>
            Returns the number of the first row that is selected after row in dwcontrol. 
            Returns 0 if no row is selected after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetSQLSelect">
            <summary>
            Reports the SQL SELECT statement associated with a DataWindow 
            </summary>
            <returns>
            Returns the current SQL SELECT statement
            GetSQLSelect returns the empty string ("") if it cannot return the statement. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetText">
            <summary>
            Obtains the value in the edit control over the current row and column. 
            </summary>
            <returns>
            Returns the value in the edit control over the current row and column.
            Returns the empty string (" ") if no column is currently selected in  dwcontrol. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Gets the values for the DataWindow control or DataStore object's internal transaction object 
            and stores these values in the programmer-specified transaction object.
            </summary>
            <param name="t">
            The name of the transaction object into which you want to put the values
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetValidate(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetValidate(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the validation rule for a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the validation rule. </param>
            <returns>
            Returns the validation rule for column
            Returns the empty string ("") if no validation criteria are defined for the column. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column number for which you want the item.</param>
            <param name="i">The number of the item in the value list or the code table for the edit style.</param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of an item in a value list or code table associated with a column in a DataWindow.
            </summary>
            <param name="c">The column name for which you want the item.</param>
            <param name="i">
            The number of the item in the value list or the code table for the edit style.
            </param>
            <returns>
            Returns the item identified by index in the value list or the code table associated with column of dwcontrol.
            Returns the empty string (" ") if the index is not valid or the column does not have a value list or code table. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportClipboard">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">
            The number of the first column in the DataWindow control or DataStore that should receive data.
            </param>
            <param name="args">Th arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportClipboard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">
            The number of the first column in the DataWindow control or DataStore that should receive data.
            </param>
            <param name="args">Th arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportClipboard(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore object from tab-separated, 
            comma-separated, or XML data on the clipboard.
            </summary>
            <param name="t">import type</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds 
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data. 
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportFile(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from a file.
            </summary>
            <param name="t">import type</param>
            <param name="f">
            A string whose value is the name of the file from which you want to copy data.
            </param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported
            -1   No rows or startrow value supplied is greater than the number of rows in the file
            -2   Empty file
            -3   Invalid argument
            -4   Invalid input
            -5   Could not open the file
            -6   Could not close the file
            -7   Error reading the text
            -8   Unsupported file name suffix (must be *.txt, *.csv, *.dbf or *.xml)
            -10  Unsupported dBase file format (not version 2 or 3)
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            -15  File size exceeds limit
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ImportString(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a DataWindow control or DataStore from tab-separated, comma-separated, 
            or XML data in a string.
            </summary>
            <param name="t">import type</param>
            <param name="s">A string from which you want to copy the data.</param>
            <param name="args">The arg list</param>
            <returns>
            Returns the number of rows that were imported if it succeeds
            -1   No rows or startrow value supplied is greater than the number of rows in the string
            -3   Invalid argument
            -4   Invalid input
            -11  XML Parsing Error; XML parser libraries not found or XML not well formed
            -12  XML Template does not exist or does not match the DataWindow
            -13  Unsupported DataWindow style for import
            -14  Error resolving DataWindow nesting
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.InsertRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Inserts a row in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row before which you want to insert a row. </param>
            <returns>
            Returns the number of the row that was added if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.IsSelected(Sybase.PowerBuilder.PBLong)">
            <summary>
            Determines whether a row is selected in a DataWindow or DataStore.
            </summary>
            <param name="r">A value identifying the row you want to test to see if it is selected</param>
            <returns>
            Returns true if row in dwcontrol is selected and false if it is not selected. 
            If row is greater than the number of rows in dwcontrol or is 0 or negative, IsSelected also returns false. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ModifiedCount">
            <summary>
            Reports the number of rows that have been modified but not updated in a DataWindow or DataStore.
            </summary>
            <returns>
            Returns the number of rows that have been modified in the primary buffer. 
            Returns 0 if no rows have been modified or if all modified rows have been updated in the database table. 
            Returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Print">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Print(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Print(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Sends the contents of a DataWindow control or DataStore object to the printer as a print job.
            </summary>
            <param name="d">
            A boolean value indicating whether you want to display a nonmodal dialog 
            that allows the user to cancel printing.
            </param>
            <param name="showPrintDlg">
            A boolean value indicating whether you want to display the system Print dialog box.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, Print returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.PrintCancel">
            <summary>
            Cancels the printing of a DataWindow or DataStore 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, PrintCancel returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ReselectRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Accesses the database to retrieve values for all columns that can be updated and 
            refreshes all timestamp columns in a row in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row to reselect</param>
            <returns>
            Returns 1 if it is successful and -1 if the row cannot be reselected
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Reset">
            <summary>
            Clears all the data from a DataWindow control or DataStore object.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ResetTransObject">
            <summary>
            Stops a DataWindow control or DataStore from using the programmer-specified transaction object 
            that is currently in effect through a call to the SetTransObject method. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Retrieve">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Retrieve(Sybase.PowerBuilder.PBAny,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Retrieve(Sybase.PowerBuilder.PBArray,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Retrieves rows from the database for a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns the number of rows displayed (that is, rows in the primary buffer) if it succeeds and -1 if it fails. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetWSObject(Sybase.PowerBuilder.PBWSConnection)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified Web service connection object. 
            The connection object provides the information necessary for communicating with a Web service data source.
            </summary>
            <param name="wsObject">The connection object you want to use</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If the WSConnection object is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowCount">
            <summary>
            Obtains the number of rows that are currently available in a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns the number of rows that are currently available in dwcontrol, 0 if no rows are currently available, and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveAs">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the contents of a DataWindow or DataStore in the format you specify.
            </summary>
            <param name="fileName">
            A string whose value is the name of the file in which to save the contents.
            </param>
            <param name="t">save as type</param>
            <param name="i">
            A boolean value indicating whether you want to include the DataWindow's column headings 
            at the beginning of the file.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SaveAs returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ScrollNextPage">
            <summary>
            Scrolls a DataWindow control forward one page
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the last row. 
            ScrollNextPage returns 1 with nested or composite reports and child DataWindows since, 
            in these cases, the current row cannot be changed. ScrollNextPage returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ScrollNextRow">
            <summary>
            Scrolls a DataWindow control to the next row.
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the last row. 
            ScrollNextRow returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ScrollPriorPage">
            <summary>
            Scrolls a DataWindow control backward one page, displaying another group of rows 
            in the DataWindow's display area. 
            </summary>
            <returns>
            Returns the number of the row displayed at the top of the DataWindow control when the scroll finishes or tries to scroll past the first row. 
            ScrollPriorPage returns -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ScrollToRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Scrolls a DataWindow control to the specified row.
            </summary>
            <param name="r">A value identifying the row to which you want to scroll.</param>
            <returns>
            Returns the number of the row to which the DataWindow scrolls if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SelectRow(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Highlights or removes highlights from rows in a DataWindow control or DataStore. 
            </summary>
            <param name="r">A value identifying the row you want to select or deselect. </param>
            <param name="f">A boolean value that determines whether the row is selected or not selected.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, the method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetBorderStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetBorderStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBorderValue)">
            <summary>
            Sets the border style of a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name in which you want to change the border style.</param>
            <param name="b">The border style</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetChanges(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetChanges(Sybase.PowerBuilder.PBBlob,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetChanges(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change string which you want to apply changes.
            </param>
            <returns>
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1  Method failed
            -2  There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3  Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetChanges(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWConflictResolutionValue)">
            <summary>
            Applies changes to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A read-only change blob which you want to apply changes.
            </param>
            <param name="Res">How conflicts should be resolved</param>
            <returns> 
            1   All changes were applied
            2   A partial update was successful; conflicting changes were discarded
            -1   Method failed
            -2   There is a conflict between the state of the DataWindow changeblob and the state of the DataWindow
            -3   Column specifications do not match
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetColumn(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetColumn(Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the current column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name you want to make current. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If column is less than 1 or greater than the number of columns, SetColumn fails.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetFilter(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies filter criteria for a DataWindow control or DataStore.
            </summary>
            <param name="f">
            A string whose value is a boolean expression that you want to use as the filter criteria.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If no DataWindow object has been assigned to the DataWindow or DataStore, SetFilter returns -1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetFormat(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetFormat(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies a display format for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name for which you are specifying the display format. </param>
            <param name="f">A string whose value is the display format for the DataWindow column.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetFullState(Sybase.PowerBuilder.PBBlob)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A blob that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetFullState(Sybase.PowerBuilder.PBString)">
            <summary>
            Applies the contents of a DataWindow blob retrieved by GetFullState to a DataWindow or DataStore.
            </summary>
            <param name="Changes">
            A string that contains the state information you want to apply to the DataWindow control or DataStore
            </param>
            <returns>
            Returns -1 if an error occurs 
            1   DataWindow objects match; old data and state overwritten.
            2   DataWindow objects do not match; old object, data, and state replaced.
            3   No DataWindow object associated with DataWindow control or DataStore; the DataWindow object associated with the blob is used. The value of the DataObject property remains an  empty string.
            Null   If any argument's value is null in PowerBuilder or JavaScript, the method returns null. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRow(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the current row in a DataWindow control or DataStore.
            </summary>
            <param name="r">The row you want to make current</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If row is less than 1 or greater than the number of rows, SetRow fails. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.PBRowFocusIndValue,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="i">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <param name="y">
            The y coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetRowFocusIndicator(Sybase.PowerBuilder.IPBPicture,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the visual indicator that identifies the current row in the DataWindow control. 
            </summary>
            <param name="p">The visual indicator for the current row</param>
            <param name="x">
            The x coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <param name="y">
            The y coordinate units of the position of the hand or bitmap relative to 
            the upper-left corner of the row.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, SetRowFocusIndicator returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetSort(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies sort criteria for a DataWindow control or DataStore.
            </summary>
            <param name="c">A string whose value is valid sort criteria for the DataWindow </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetSQLSelect(Sybase.PowerBuilder.PBString)">
            <summary>
            Specifies the SQL SELECT statement for a DataWindow control or DataStore.
            </summary>
            <param name="s">
            A string whose value is the SELECT statement for the DataWindow object.
            </param>
            <returns>
            SetSQLSelect returns 1 if it succeeds and -1 if the SELECT statement cannot be changed.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetTabOrder(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the tab sequence number of a column in a DataWindow control to the specified value.
            </summary>
            <param name="c">The column number to which you are assigning a tab value. </param>
            <param name="n">
            The tab sequence number you want to assign to the DataWindow column.
            </param>
            <returns>
            Returns the previous tab value of the column if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetTabOrder(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Changes the tab sequence number of a column in a DataWindow control to the specified value.
            </summary>
            <param name="c">The column name to which you are assigning a tab value. </param>
            <param name="n">
            The tab sequence number you want to assign to the DataWindow column.
            </param>
            <returns>
            Returns the previous tab value of the column if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetText(Sybase.PowerBuilder.PBString)">
            <summary>
            Replaces the text in the edit control over the current row and column 
            in a DataWindow control or DataStore.
            </summary>
            <param name="t">A string whose value you want to put in the current row and column. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetTrans(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Sets the values in the internal transaction object for a DataWindow control or DataStore 
            to the values from the specified transaction object.
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetTransObject(Sybase.PowerBuilder.PBTransaction)">
            <summary>
            Causes a DataWindow control or DataStore to use a programmer-specified transaction object. 
            </summary>
            <param name="t">The transaction object </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetValidate(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column number for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetValidate(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the input validation rule for a column in a DataWindow control or DataStore.
            </summary>
            <param name="c">
            The column name for which you want to set the input validation rule.
            </param>
            <param name="m">A string whose value is the validation rule for validating the data.</param>
            <returns>
            returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column number that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetValue(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of an item in a value list or code table for a column in 
            a DataWindow control or DataStore.
            </summary>
            <param name="c">The column name that contains the value list or code table.</param>
            <param name="i">
            The number of the item in the value list or code table for which you want to set the value.
            </param>
            <param name="v">A string whose value is the new value for the item.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Sort">
            <summary>
            Sorts the rows in a DataWindow control or DataStore using the DataWindow's 
            current sort criteria.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
             If dwcontrol is null, Sort returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Update">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Update(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Update(Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Updates the database with the changes made in a DataWindow control or DataStore.
            </summary>
            <param name="a">
            A boolean value specifying whether the DataWindow control or DataStore should 
            automatically perform an AcceptText prior to performing the update
            </param>
            <param name="c">
            A boolean value specifying whether dwcontrol should automatically reset the update flags
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, Update returns null. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, this method returns 1.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.CrosstabDialog">
            <summary>
            Displays the Crosstab Definition dialog box so the user can modify the definition of a crosstab DataWindow at runtime. 
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Find(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Finds the next row in a DataWindow or DataStore in which data meets a specified condition.
            </summary>
            <param name="s">
            A string whose value is a boolean expression that you want to use as the search criterion. 
            The expression includes column names.
            </param>
            <param name="b">A value identifying the row location at which to begin the search.</param>
            <param name="e">A value identifying the row location at which to end the search.</param>
            <param name="d">A value indicating the DataWindow buffer you want to search for required row.</param>
            <returns>
            Returns the number of the first row that meets the search criteria within the search range.
            Returns 0 if no rows are found.
            -1  General error
            -5  Bad argument
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.FindGroupChange(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Searches for the next break for the specified group. 
            A group break occurs when the value in the column for the group changes. 
            </summary>
            <param name="r">A value identifying the row at which you want to begin searching for the group break.</param>
            <param name="l">The number of the group for which you are searching.</param>
            <returns>
            Returns 0 if the value in the group column did not change and a negative number if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            If the starting row is:
            (1) The first row in a group, then FindGroupChange returns the starting row number
            (2) A row within a group, other than the last group, then FindGroupChange returns the row number of the first row of the next group
            (3) A row in the last group, other than the first row of the last group, then FindGroupChange returns 0
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.FindRequired(Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBLong@,Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Reports the next row and column that is required and contains a null value.
            </summary>
            <param name="b">A value indicating the DataWindow buffer you want to search for required columns. </param>
            <param name="r">
            A value identifying the first row to be searched.
            r also stores the number of the found row. 
            </param>
            <param name="c">
            A value identifying the first column to be searched.  
            c also stores the number of the found column. 
            </param>
            <param name="n">
            A string in which you want to store the name of the required column that contains a null value
            </param>
            <param name="u">A value indicating whether you want to validate all rows and columns </param>
            <returns>
            Returns 1 if FindRequired successfully checked the rows and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetBandAtPointer">
            <summary>
            Reports the band in which the pointer is currently located, as well as the row number associated with the band. 
            </summary>
            <returns>
            Returns a string that names the band in which the pointer is located, 
            followed by a tab character and the number of the row associated with the band
            Returns the empty string (" ") if an error occurs.
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetChild``1(Sybase.PowerBuilder.PBString,``0@)">
            <summary>
            Provides a reference to a child DataWindow or to a report in a composite DataWindow
            </summary>
            <typeparam name="T1">Type of datawindow child</typeparam>
            <param name="n">A string that names the column containing the child DataWindow or that names the report in the composite DataWindow.</param>
            <param name="c">A variable in which you want to store the reference to the child DataWindow or report. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs
            If any argument is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetNextModified(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the next row that has been modified in the specified buffer.
            </summary>
            <param name="r">
            A value identifying the row location after which you want to locate the modified row. 
            To search from the beginning, specify 0.
            </param>
            <param name="b"> DataWindow buffer in which you want to locate the modified row.</param>
            <returns>
            Returns the number of the first row that was modified after row in  dwbuffer in dwcontrol.
            Returns 0 if there are no modified rows after the specified row. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetSQLPreview">
            <summary>
            Reports the SQL statement that the DataWindow control is currently submitting to the database.
            </summary>
            <returns>
            Returns the current SQL statement.
            Returns the empty string ("") if an error occurs. 
            If dwcontrol is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GroupCalc">
            <summary>
            Recalculates the breaks in the grouping levels in a DataWindow.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Modify(Sybase.PowerBuilder.PBString)">
            <summary>
            Modifies a DataWindow object by applying specifications, given as a list of instructions, 
            that change the DataWindow object's definition. 
            </summary>
            <param name="s">
            A string whose value is the specifications for the modification.
            </param>
            <returns>
            Returns empty string if it succeeds and an error message if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ResetUpdate">
            <summary>
            Clears the update flags in the primary and filter buffers and 
            empties the delete buffer of a DataWindow or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If dwcontrol is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsCopy(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Copies a range of rows from one DataWindow control to another, 
            or from one buffer to another within a single DataWindow control
            </summary>
            <param name="s">The number of the first row you want to copy.</param>
            <param name="e">The number of the last row you want to copy.</param>
            <param name="f">The DataWindow buffer from which you want to copy rows.</param>
            <param name="d">
            A reference to the DataWindow control or DataStore object 
            to which you want to copy the rows. 
            </param>
            <param name="i">The number of the row before which you want to insert the copied rows. </param>
            <param name="t">The target DataWindow buffer for the copied rows. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsDiscard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Discards a range of rows in a DataWindow control. 
            </summary>
            <param name="s">The number of the first row you want to discard.</param>
            <param name="e">The number of the last row you want to discard.</param>
            <param name="f">The DataWindow buffer containing the rows to be discarded.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowControl,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataWindowChild,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.RowsMove(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.IPBDataStore,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Clears a range of rows from one DataWindow control and inserts them in another.
            </summary>
            <param name="s">The number of the first row you want to move.</param>
            <param name="e">The number of the last row you want to move.</param>
            <param name="f">The DataWindow buffer from which you want to move the rows.</param>
            <param name="d">The name of the DataWindow control to which you want to move the rows.</param>
            <param name="i">The number of the row before which you want to insert the moved rows.</param>
            <param name="t">The target buffer</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetDetailHeight(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the height of each row in the specified range to the specified value.
            </summary>
            <param name="s">The first row in the range of rows for which you want to set the height.</param>
            <param name="e">The last row in the range of rows for which you want to set the height.</param>
            <param name="h">
            The height of the detail area for the specified rows in the units specified for the DataWindow object
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetPosition(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Moves a control within the DataWindow to another band 
            or changes the front-to-back order of controls within a band.
            </summary>
            <param name="n">The name of the control within the DataWindow that you want to move.</param>
            <param name="b">
            A string whose value is the name of the band or layer in which you want to position the control. 
            Layer names are background and foreground.
            </param>
            <param name="t">A boolean indicating whether you want to bring the control to the front</param>
            <returns>
            Returns 1 when it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetSQLPreview(Sybase.PowerBuilder.PBString)">
            <summary>
            The SQL statement for a DataWindow control or DataStore
            </summary>
            <param name="s">
            A string whose value is valid SQL syntax for the SQL statement that will be submitted to the database server
            </param>
            <returns>
            Returns 1 if it succeeds and 0 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ShareData(Sybase.PowerBuilder.IPBDataStore)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ShareData(Sybase.PowerBuilder.IPBDataWindowControl)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ShareData(Sybase.PowerBuilder.IPBDataWindowChild)">
            <summary>
            Shares data retrieved by one DataWindow control with another DataWindow control or DataStore.
            </summary>
            <param name="d">The secondary DataStore</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ShareDataOff">
            <summary>
            Turns off the sharing of data buffers for a DataWindow control or DataStore.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If dwcontrol is null, ShareDataOff returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Collapse(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be collapsed
            </param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the collapse operation succeeds
            One of the following negative values if it fails:
            -1   DataWindow is null
            -5   One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.CollapseAll">
            <summary>
            Collapses all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the CollapseAll operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.CollapseAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row; also collapses all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be collapsed</param>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.CollapseLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses all the groups in a TreeView DataWindow that have the specified TreeView level.
            </summary>
            <param name="l">The TreeView level of the group to be collapsed</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.Expand(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level 
            and includes the specified row. 
            </summary>
            <param name="r">
            The number of the row that belongs to the TreeView level of the group to be expanded
            </param>
            <param name="l">
            The TreeView level of the group to be expanded
            </param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ExpandAll">
            <summary>
            Expands all groups in a TreeView DataWindow. 
            </summary>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ExpandAllChildren(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a group in a TreeView DataWindow that has the specified TreeView level and 
            includes the specified row; also expands all the group's children. 
            </summary>
            <param name="r">The number of the row that belongs to the group to be expanded</param>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ExpandLevel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands all the groups in a TreeView DataWindow that have the specified TreeView level. 
            </summary>
            <param name="l">The TreeView level of the group to be expanded</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.IsExpanded(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Performs a test to see whether a group in a TreeView DataWindow with the specified TreeView level is expanded, 
            and whether the group includes the specified row.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <returns>
            Returns true if the group is expanded and false if the group is not expanded. 
            IsExpanded also returns false if the DataWindow is not a TreeView DataWindow or the row or groupLevel is invalid.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SelectTreeNode(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Selects or deselects a TreeView node in a TreeView DataWindow.
            </summary>
            <param name="r">The number of the row that belongs to the group</param>
            <param name="l">The TreeView level of the group</param>
            <param name="bSelect">Indicates whether the TreeView node is selected or not</param>
            <returns>
            Returns 1 if the expand operation succeeds
            One of the following negative values if it fails:
            -1  DataWindow is null
            -5  One or more of the parameters are invalid
            -16  DataWindow is not a TreeView DataWindow
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.ResetInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong)">
            <summary>
            Clears ink from an InkPicture control in a DataWindow.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to clear the picture.
            </param>
            <param name="r">
            The number of the row that contains the picture to be cleared.
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink. 
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control.
            </param>
            <param name="f">
            A value of the InkPersistenceFormat enumerated variable that specifies the format 
            in which you want to save the ink. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInkPersistenceFormatValue,Sybase.PowerBuilder.PBInkCompressionModeValue)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.
            </param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="filename">
            A string containing the name and location of a file that will hold the ink in the control.
            </param>
            <param name="f">
            A value of the InkPersistenceFormat enumerated variable that specifies the format 
            in which you want to save the ink. 
            </param>
            <param name="m">
            A value of the InkCompressionMode enumerated variable that specifies the compression mode 
            in which you want to save the ink. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInk(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBBlob@)">
            <summary>
            Saves overlay ink to a file or blob from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the ink.</param>
            <param name="r">
            The number of the row that contains the ink to be saved.
            </param>
            <param name="b">The name of a blob passed by reference that will hold the ink in the control. </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInkPicture(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Saves a picture and optionally overlay ink to a file from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the picture. 
            </param>
            <param name="r">
            The number of the row that contains the picture to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file 
            that will hold the picture in the control. 
            </param>
            <param name="format">
            An integer specifying the format in which the picture is to be saved. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SaveInkPicture(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves a picture and optionally overlay ink to a file from an InkPicture control.
            </summary>
            <param name="name">
            The name of the InkPicture control from which you want to save the picture. 
            </param>
            <param name="r">
            The number of the row that contains the picture to be saved. 
            </param>
            <param name="filename">
            A string containing the name and location of a file 
            that will hold the picture in the control. 
            </param>
            <param name="format">
            An integer specifying the format in which the picture is to be saved. 
            </param>
            <param name="withink">
            A boolean specifying whether overlay ink should be saved with the picture. 
            </param>
            <returns>Returns 1 for success and -1 for failure.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDate(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Date from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data. </param>
            <returns>
            Returns the date value in the specified row and column.
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore.
            Returns 1900-01-01 if any other error occurs. 
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column number location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDateTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is DateTime from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column name location of the data.</param>
            <returns>
            Returns the DateTime or Timestamp value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 1900-01-01 00:00:00.000000 if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <param name="b">A value identify the DataWindow buffer from which you want to get the data. </param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column number of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemDecimal(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is decimal from the specified buffer of a DataWindow control or DataStore object.
            </summary>
            <param name="r">A value identifying the row location of the decimal data.</param>
            <param name="c">The column name of the data. </param>
            <returns>
            Returns the decimal value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs (see "Handling errors"). 
            If any argument value is null, the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemNumber(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets numeric data from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the numeric data.</param>
            <param name="c">The column location of the numeric data. </param>
            <returns>
            Returns the numeric value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Triggers the SystemError event and returns -1 if any other error occurs
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the string value in the specified row and column. 
            Returns the empty string (" ") if there is no DataWindow object assigned to the DataWindow control or DataStore or if any other error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemFormattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets and formats data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the fromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemUnformattedString(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets raw (unformatted) data whose type is String from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the string data.</param>
            <param name="c">The column location of the data. </param>
            <returns>Returns the unfromatted string value in the specified row and column. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="b">A value identifying the DataWindow buffer from which you want to get the data.</param>
            <param name="o">A boolean indicating whether you want the original or current values</param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemTime(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            Gets data whose type is Time from the specified buffer of a DataWindow control or DataStore object. 
            </summary>
            <param name="r">A value identifying the row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <returns>
            Returns the time value in the specified row and column. 
            Returns null if the column value is null or if there is no DataWindow object assigned to the DataWindow control or DataStore. 
            Returns 00:00:00.000000 if an error occurs. 
            If any argument value is null, in PowerBuilder the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.GetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue)">
            <summary>
            Reports the modification status of a row or a column within a row. 
            </summary>
            <param name="r">A value identifying the row for which you want the status.</param>
            <param name="c">The column for which you want the status. </param>
            <param name="b">A value identifying the DataWindow buffer containing the row for which you want status. </param>
            <returns>
            A value identifies the status 
            If column is 0, GetItemStatus returns the status of row. 
            If there is no DataWindow object assigned to the DataWindow control or DataStore, GetItemStatus returns null.
            If any argument value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Sets the value of a row and column in a DataWindow control or DataStore to the specified value.
            </summary>
            <param name="r">The row location of the data.</param>
            <param name="c">The column location of the data. </param>
            <param name="v">The value to which you want to set the data at the row and column location.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBDataWindowChild.SetItemStatus(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDWBufferValue,Sybase.PowerBuilder.PBDWItemStatusValue)">
            <summary>
            Changes the modification status of a row or a column within a row.
            </summary>
            <param name="r">The row location in which you want to set the status.</param>
            <param name="c">The column location in which you want to set the status. </param>
            <param name="b">A value identifying the DataWindow buffer that contains the row.</param>
            <param name="s"> The new status value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, in PowerBuilder and JavaScript the method returns null.
            </returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindowChild.DWChild">
            <summary>
            Gets or sets the Child DataWindow
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindowChild.DWParent">
            <summary>
            Gets or sets the Parent of DataWindow
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindowChild.TopDWParent">
            <summary>
            Gets or sets the Top parent of DataWindow
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBDataWindowChild.Object">
            <summary>
            Gets the object
            
            The Object property of the DataWindow control lets you specify expressions that refer directly to the data of the DataWindow object in the control. 
            This direct data manipulation allows you to access small and large amounts of data in a single statement, without calling methods.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm">
            <summary>
            Interaction logic for UpdaterNotifierForm.xaml
            </summary>
            <summary>
            PBUpdaterNotifierForm
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.SetBackgroundBitmap(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Sets the background bitmap and its transparency color
            </summary>
            <param name="image">Image/Bitmap object which represents the Background Bitmap</param>
            <param name="transparencyColor">Color of the Bitmap which won't be visible</param>
            <returns>Nothing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.ForceNotifierHidden">
            <summary>
            Force the window to immediately move to the hidden state.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierOpeningMilliseconds">
            <summary>
            The time the TaskbarNotifier window should take to open in milliseconds.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierHidingMilliseconds">
            <summary>
            The time the TaskbarNotifier window should take to hide in milliseconds.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierStayOpenMilliseconds">
            <summary>
            The time the TaskbarNotifier window should stay open in milliseconds.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierLeftOffset">
            <summary>
            The space, if any, between the left side of the TaskNotifer window and the right side of the screen.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierDisplayState">
            <summary>
            The current DisplayState
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBUpdaterNotifierForm.NotifierDisplayStates">
            <summary>
            Notifier states.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBML_Preview_EventHandler_refs">
            <summary>
            preview delegate
            </summary>
            <param name="command">command string</param>
            <returns>result string</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBSync">
            <summary>
            implement IPBSync interface
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.IPBSync">
            <summary>
            Interface definition for MobiLink and UltraLite
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetSyncReg(System.String,System.String)">
            <summary>
            set Synchronize registry key value
            </summary>
            <param name="root">root key name</param>
            <param name="key">sub key name</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetSyncReg(System.String)">
            <summary>
            get Synchronize registry key value
            </summary>
            <param name="root">root key name</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetObjectRevisionFromRegistry(System.Int32@)">
            <summary>
            get object revision from registry
            </summary>
            <param name="revision">revision value</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetMlUser">
            <summary>
            get mobilink user
            </summary>
            <returns>mobilink user</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetMlUser(System.String)">
            <summary>
            set mobilink user
            </summary>
            <param name="user">mobilink user</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetHost">
            <summary>
            get mobilink host
            </summary>
            <returns>mobilink host</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetHost(System.String)">
            <summary>
            set mobilink host
            </summary>
            <param name="host">mobilink host</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetPort">
            <summary>
            get mobilink port
            </summary>
            <returns>mobilink port</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetPort(System.String)">
            <summary>
            set mobilink port
            </summary>
            <param name="port">mobilink port</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetPublication">
            <summary>
            get publication
            </summary>
            <returns>publication value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetPublication(System.String)">
            <summary>
            set publication value
            </summary>
            <param name="publication">publication value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetLogFileName">
            <summary>
            get log file name
            </summary>
            <returns>log file name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetLogFileName(System.String)">
            <summary>
            set log file name
            </summary>
            <param name="fileName">log file name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetLogOpts">
            <summary>
            get log options
            </summary>
            <returns>log options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetLogOpts(System.String)">
            <summary>
            set log options
            </summary>
            <param name="logOptions">log options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetAdditionalOpts">
            <summary>
            get additional options
            </summary>
            <returns>additional options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetAdditionalOpts(System.String)">
            <summary>
            set additional options
            </summary>
            <param name="additionalOptions">additional options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetExtendedOpts">
            <summary>
            get extend options
            </summary>
            <returns>extend options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetExtendedOpts(System.String)">
            <summary>
            set extend options
            </summary>
            <param name="extendedOptions">extend options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetError(System.String,System.Boolean)">
            <summary>
            set errors
            </summary>
            <param name="error">error description</param>
            <param name="append">indicate append or reset error</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.SetNewMlPass(System.String)">
            <summary>
            set new mobilink password
            </summary>
            <param name="mobilinkPassword">new mobilink password</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.IPBSync.GetError">
            <summary>
            get error description
            </summary>
            <returns>error description</returns>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.FDSucess">
            <summary>
            successful operation
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.FDEndOfBuffer">
            <summary>
            buffer size
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.FDErrGeneral">
            <summary>
            general error
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.FDErrNotImplemented">
            <summary>
            not implement error
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.ENMSyncProcBIDirectional">
            <summary>
            two direction sync, upload or download
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.ENMSyncProcDownloadOnly">
            <summary>
            download sync
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.ENMSyncProcUploadOnly">
            <summary>
            upload sync
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.SYNCControlTimer">
            <summary>
            Specifies a timer identifier
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.NoError">
            <summary>
            no error status.
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYMobilink">
            <summary>
            registry key name for mobilink
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYDBUser">
            <summary>
            registry key name for db user
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYDatasource">
            <summary>
            registry key name for datasource
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASARegkey">
            <summary>
            registry key name for ASA
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYPub">
            <summary>
            registry key name for publication
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYMLUser">
            <summary>
            registry key name for mobilink user
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYHost">
            <summary>
            registry key name for host
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYPort">
            <summary>
            registry key name for port
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYAddOpts">
            <summary>
            registry key name for additional options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYExtOpts">
            <summary>
            registry key name for extended options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYLogOpts">
            <summary>
            registry key name for log options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYLogFileName">
            <summary>
            registry key name for log file name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYObjectRevision">
            <summary>
            registry key name for object revision
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYMLServerVersion">
            <summary>
            registry key name for mobilink server version
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYUseWindow">
            <summary>
            registry key name for use window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYUseLogFile">
            <summary>
            registry key name for use log file
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYProcessOption">
            <summary>
            registry key name for process option
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYLocation">
            <summary>
            registry key name for location
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASA8">
            <summary>
            registry key name for ASA8
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASA9">
            <summary>
            registry key name for ASA9
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASA10">
            <summary>
            registry key name for ASA10
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASA11">
            <summary>
            registry key name for ASA11
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYASA12">
            <summary>
            registry key name for ASA12
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYError">
            <summary>
            registry key name for Error
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.REGKEYUltralite">
            <summary>
            registry key name for ultralite
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.publication">
            <summary>
            publication content
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.mobilinkPass">
            <summary>
            mobilink password
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.mobilinkUser">
            <summary>
            mobilink user
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.host">
            <summary>
            host field
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.port">
            <summary>
            port field
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.logOpts">
            <summary>
            log options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.logFileName">
            <summary>
            log file name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.additionalOpts">
            <summary>
            additional options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.extendedOpts">
            <summary>
            extend options
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.mobilinkServerVersion">
            <summary>
            mobilink server version
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.authenticateParms">
            <summary>
            authenticate parameters
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.useWindow">
            <summary>
            whether use window
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.useLogFile">
            <summary>
            whether use log file
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.processOption">
            <summary>
            process option
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.objectRevision">
            <summary>
            object revision
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.restart">
            <summary>
            whether restart
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.newMLPass">
            <summary>
            new mobilink password
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.errors">
            <summary>
            mobilink errors
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBSync.syncRegistryKey">
            <summary>
            registry key for Synchronize
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.#ctor">
            <summary>
            constructor method
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetSyncReg(System.String,System.String)">
            <summary>
            set Synchronize registry key value
            </summary>
            <param name="rootKeyName">root key name</param>
            <param name="subKeyName">sub key name</param>
            <returns>1: success , otherwise fail.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetSyncReg(System.String)">
            <summary>
            get Synchronize registry key value
            </summary>
            <param name="rootKeyName">root key name</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetObjectRevisionFromRegistry(System.Int32@)">
            <summary>
            get revision from registry .
            </summary>
            <param name="revision">revision value</param>
            <returns>not implemented error</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetMlUser">
            <summary>
            get mobilink user
            </summary>
            <returns>mobilink user</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetMlUser(System.String)">
            <summary>
            set mobilink user
            </summary>
            <param name="user">mobilink user name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetHost">
            <summary>
            get host name
            </summary>
            <returns>mobilink host name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetHost(System.String)">
            <summary>
            set host name
            </summary>
            <param name="hostName">mobilink host name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetPort">
            <summary>
            get mobilink port value
            </summary>
            <returns>mobilink port value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetPort(System.String)">
            <summary>
            set port value
            </summary>
            <param name="portValue">port value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetLogFileName">
            <summary>
            get log file name
            </summary>
            <returns>log file name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetLogFileName(System.String)">
            <summary>
            set log file name
            </summary>
            <param name="fileName">log file name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetLogOpts">
            <summary>
            get log options
            </summary>
            <returns>log options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetLogOpts(System.String)">
            <summary>
            set log options
            </summary>
            <param name="options">log options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetAdditionalOpts">
            <summary>
            get additional options
            </summary>
            <returns>additional options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetAdditionalOpts(System.String)">
            <summary>
            set additional options
            </summary>
            <param name="options">additional options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetExtendedOpts">
            <summary>
            get extend options
            </summary>
            <returns>extend options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetExtendedOpts(System.String)">
            <summary>
            set extend options
            </summary>
            <param name="options">extend options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetPublication">
            <summary>
            get publication
            </summary>
            <returns>publication value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetPublication(System.String)">
            <summary>
            set publication value
            </summary>
            <param name="publicationValue">publication value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetError">
            <summary>
            get errors
            </summary>
            <returns>mobilink errors</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetError(System.String,System.Boolean)">
            <summary>
            set errors
            </summary>
            <param name="err">error description</param>
            <param name="append">whether append the error</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetNewMlPass(System.String)">
            <summary>
            set new mobilink password
            </summary>
            <param name="password">new password</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetRestartStatus">
            <summary>
            get restart status
            </summary>
            <returns>restart staus,true is restart,false not</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.SetRestartStatus(System.Boolean)">
            <summary>
            set restart status
            </summary>
            <param name="restartValue">restart value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBSync.GetObjectRevisionFromRegistry(System.Int32@,System.String)">
            <summary>
            get revision from registry
            </summary>
            <param name="revision">revision value</param>
            <param name="suffix">the subkey</param>
            <returns>1:success,otherwise fail.</returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.Publication">
            <summary>
            Gets or sets publication value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.MobilinkUser">
            <summary>
            Gets or sets mobilink user
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.MobilinkPass">
            <summary>
            Gets or sets mobilink password value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.Host">
            <summary>
            Gets or sets host value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.Port">
            <summary>
            Gets or sets port value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.LogOpts">
            <summary>
            Gets or sets log options
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.LogFileName">
            <summary>
            Gets or sets log file name
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.AdditionalOpts">
            <summary>
            Gets or sets additional options
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.ExtendedOpts">
            <summary>
            Gets or sets extended options
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.MobilinkServerVersion">
            <summary>
            Gets or sets mobilink server version
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.AuthenticateParms">
            <summary>
            Gets or sets authentication parameters
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.UseWindow">
            <summary>
            Gets or sets use window value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.UseLogFile">
            <summary>
            Gets or sets use log file value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.ProcessOption">
            <summary>
            Gets or sets process option
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.ObjectRevision">
            <summary>
            Gets or sets obejct revision
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.Restart">
            <summary>
            Gets or sets a value indicating whether need to restart
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.NewMLPass">
            <summary>
            Gets or sets new mobilink password
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.Errors">
            <summary>
            Gets or sets errors value
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBSync.SyncRegistryKey">
            <summary>
            Gets or sets synchronize registry key
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBVProgressBar">
            <summary>
            The PBVProgressBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.doubleClickedEvent">
            <summary>
            doubleclicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.loseFocusEvent">
            <summary>
            lost focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.rbuttonDownEvent">
            <summary>
            right button down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBVProgressBar.wpfVProgressBar">
            <summary>
            The inner VProgressBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.#ctor">
            <summary>
            Constructor of PBVProgressBar class
            </summary> 
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.clicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            When the left mouse button is pressed on the control
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window workspace or control in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace or control in pixels</param>
            <returns>Return code choices (specify in a RETURN statement)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.doubleclicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            When the left mouse button is double pressed on the control
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window workspace or control in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace or control in pixels</param>
            <returns>Return code choices (specify in a RETURN statement)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.OffsetPos(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the offset for progress bar controls.
            </summary>
            <param name="increment">An integer that is added to the start position of the progress bar control</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.SetRange(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the range of the control. The control uses the range and 
            the current position to determine the percentage of the progress bar to fill with the highlight color
            </summary>
            <param name="startPos">Integer indicating the initial position of the range</param>
            <param name="endPos">Integer indicating the terminal position of the range</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.StepIt">
            <summary>
            Moves the control's current position by the amount specified by the value of the SetStep property
            </summary>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse double clicked event handler
            </summary>
            <param name="sender">The control send out the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBVProgressBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBVProgressBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the progress bar is at the top of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the progress bar is at the bottom of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.Position">
            <summary>
            Gets or sets the value of the current position within the range of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.SetStep">
            <summary>
            Gets or sets a step increment for the progress bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.SmoothScroll">
            <summary>
            Gets or sets a value that indicates the control displays as a smooth scrolling bar instead of the default segmented bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBVProgressBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBTreeView">
            <summary>
            The PBTreeView class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.beginDragEvent">
            <summary>
            BeginDrag evnet handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.beginLabelEditEvent">
            <summary>
            BeginLabelEdit event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.beginRightDragEvent">
            <summary>
            BeginRgihtDrag event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.clickedEvent">
            <summary>
            Clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.deleteItemEvent">
            <summary>
            DeleteItem event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.doubleClickedEvent">
            <summary>
            DoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.dragDropEvent">
            <summary>
            DragDrop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.dragWithinEvent">
            <summary>
            DragWith event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.endLabelEditEvent">
            <summary>
            EndLabelEdit event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.getFocusEvent">
            <summary>
            GetFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.itemCollapsedEvent">
            <summary>
            ItemCollapsed event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.itemCollapsingEvent">
            <summary>
            ItemCollapsing event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.itemExpandedEvent">
            <summary>
            ItemExpanded event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.itemExpandingEvent">
            <summary>
            ItemExpanding event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.itemPopulateEvent">
            <summary>
            ItemPopulate event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.keyEvent">
            <summary>
            Key event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.loseFocusEvent">
            <summary>
            LoseFocus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.notifyEvent">
            <summary>
            Notify event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.otherEvent">
            <summary>
            Other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.rightClickedEvent">
            <summary>
            RightClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.rightDoubleClickedEvent">
            <summary>
            RightDoubleClicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.selectionChangedEvent">
            <summary>
            SelectionChanged event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.selectionChangingEvent">
            <summary>
            SelectionChanging event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.sortEvent">
            <summary>
            Sort event
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.wpfTreeView">
            <summary>
            the real inner wpf TreeView object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.canTriggerSystemEvent">
            <summary>
            indicating whether the system event can be triggered
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.mouseIsOnItem">
            <summary>
            the local value which indicates whether the mouse is on item
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.beginDragIsTriggered">
            <summary>
            the local value which indicates whether begindrag is triggered
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBTreeView.handleOfItemUnderMouse">
            <summary>
            the local value which indicates the itemindex under the mouse
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.#ctor">
            <summary>
            Constructor of class PBTreeView
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.begindrag(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of begindrag method
            </summary> 
            <param name="l">Long by value (handle of the TreeView item being dragged) </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.beginlabeledit(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of beginlabeledit method
            </summary>
            <param name="l">Long by value (the handle of the selected TreeView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.beginrightdrag(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of beginrightdrag method
            </summary>
            <param name="l">Long by value (the handle of the TreeView item being dragged)  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.clicked(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of clicked method
            </summary>
            <param name="l">Long by value (the handle of the TreeView item the user clicked)  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.deleteitem(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of deleteitem method
            </summary>
            <param name="l">Long by value (the handle of the deleted item) </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.doubleclicked(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of doubleclicked method
            </summary>
            <param name="l">Long by value (the handle of the item the user double-clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.dragdrop(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBLong)">
            <summary>
             stub of dragdrop method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged) </param>
            <param name="handle">Long (a reference to the TreeView item under the pointer in the TreeView control)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.dragwithin(Sybase.PowerBuilder.WPF.PBDragObject,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of dragwithin method
            </summary>
            <param name="source">DragObject by value (a reference to the control being dragged) </param>
            <param name="handle">Long (a reference to the TreeView item under the pointer in the TreeView control)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.endlabeledit(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString)">
            <summary>
            stub of endlabeledit mthod
            </summary>
            <param name="l">The index of the TreeView item for which you have edited the label.</param>
            <param name="s">The string that represents the new label for the TreeView item.</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.itemcollapsed(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of key itemcollapsed
            </summary>
            <param name="l">Long by reference (the handle of the itemcollapsed TreeView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.itemcollapsing(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of key itemcollapsing
            </summary>
            <param name="l">Long by reference (the handle of the itemexpanded TreeView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.itemexpanded(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of key itemexpanded
            </summary>
            <param name="l">Long by reference (the handle of the itemexpanded TreeView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.itemexpanding(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of key itemexpanding
            </summary>
            <param name="l">Long by reference (the handle of the itemexpanding TreeView item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.itempopulate(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of key itempopulate
            </summary>
            <param name="l">Long by reference (the handle of the TreeView item being populated)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.key(Sybase.PowerBuilder.PBKeyCodeValue,Sybase.PowerBuilder.PBULong)">
            <summary>
            stub of key method
            </summary>
            <param name="key">KeyCode by value. </param>
            <param name="keyflags">UnsignedLong by value (the modifier keys that were pressed with the key). </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.notify(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of notify method
            </summary>
            <param name="i">UnsignedLong by value containing the ID of the control sending the message</param>
            <param name="j">Long by value containing a pointer to a structure that contains the window 
              handle and identifier of the control sending a message and a notification code
             </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.rightclicked(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of rightclicked method
            </summary>
            <param name="l">Long by value (the handle of the item the user right clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.rightdoubleclicked(Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of rightdoubleclicked method
            </summary>
            <param name="l">Long by value (the handle of the item the user right double-clicked)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.selectionchanged(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of selectionchanged method
            </summary>
            <param name="l1">Long by value (the handle of the previously selected item)</param>
            <param name="l2">Long by value (the handle of the currently selected item)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.selectionchanging(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of selectionchanging method
            </summary>
            <param name="l1">Long by value (the handle of the currently selected item)</param>
            <param name="l2">Long by value (the handle of the item that is about to be selected)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.sort(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of sort method
            </summary>
            <param name="l1">Long by value (the handle of one item being compared during a sorting operation)</param>
            <param name="l2">Long by value (the handle of the second item being compared)</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.AddPicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the main image list.
            </summary>
            <param name="n">
            The name of the icon, cursor, or bitmap you want to add to the main image list
            </param>
            <returns>
            Returns the picture index number if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.AddStatePicture(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a bitmap, icon, or cursor to the state image list.
            </summary>
            <param name="n">The name of the bitmap, icon, or cursor you are adding</param>
            <returns>Returns the picture index if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.CollapseItem(Sybase.PowerBuilder.PBLong)">
            <summary>
            Collapses the specified item.
            </summary>
            <param name="h">
            The handle of the item you want to collapse
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.DeleteItem(Sybase.PowerBuilder.PBLong)">
            <summary>
            Deletes an item from a control and all its child items,
            </summary>
            <param name="h">The handle of the item you want to delete</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.DeletePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a picture from the image list.
            </summary>
            <param name="i">
            The index number of the picture you want to delete from the TreeView control's image list
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.DeletePictures">
            <summary>
            Deletes all pictures from an image list
            </summary>
            <returns> Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.DeleteStatePicture(Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes a state picture from a control.
            </summary>
            <param name="i">The index number of the state picture you want to delete</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.DeleteStatePictures">
            <summary>
            Deletes all state pictures from a control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.EditLabel(Sybase.PowerBuilder.PBLong)">
            <summary>
            Puts a label in a TreeView into edit mode.
            </summary>
            <param name="h">The handle of the item to be edited</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.ExpandAll(Sybase.PowerBuilder.PBLong)">
            <summary>
            Recursively expands a specified item.
            </summary>
            <param name="h">The handle of the item you want to expand</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.ExpandItem(Sybase.PowerBuilder.PBLong)">
            <summary>
            Expands a specified item.
            </summary>
            <param name="h">The handle of the item you want to expand</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.FindItem(Sybase.PowerBuilder.PBTreeNavigationValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Find an item based on its position in a TreeView control.
            </summary>
            <param name="c">
            A value of the TreeNavigation enumerated datatype specifying the relationship 
            between itemhandle and the item you want to find.
            See the table in Usage note for a list of valid values.
            </param>
            <param name="h">
            A long for the handle of an item related via navigationcode to the item for which you are searching.
            </param>
            <returns>Returns the item handle if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.GetItem``1(Sybase.PowerBuilder.PBLong,``0@)">
            <summary>
            Retrieves the data associated with the specified item.
            </summary>
            <typeparam name="T1">PBTreeViewItem type </typeparam>
            <param name="h">The handle for the item for which you want to retrieve information</param>
            <param name="n">A TreeViewItem variable in which you want to store the item identified by the item handle</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.GetItemAtPointer">
            <summary>
            Gets the handle or the index of the item under the cursor.
            </summary>
            <returns>
            Returns the index (ListView) or handle (TreeView) of the item under the cursor. Returns -1 for failure.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item at a specific level and order in a TreeView control.
            </summary>
            <param name="h">
            The handle of the item one level above the item you want to insert. 
            To insert an item at the first level, specify 0.
            </param>
            <param name="a">T
            he handle of the item on the same level that you will insert the item immediately after.
            </param>
            <param name="l">The label of the item you are inserting.</param>
            <param name="p">The Index of the index of the picture you are adding to the image list.</param>
            <returns>Returns the handle of the inserted item if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Inserts an item at a specific level and order in a TreeView control.
            </summary>
            <param name="h">
            The handle of the item one level above the item you want to insert. To insert an item at the first level, specify 0.
            </param>
            <param name="a">
            The handle of the item on the same level that you will insert the item immediately after.
            </param>
            <param name="n">A TreeViewItem structure for the item you are inserting.</param>
            <returns>Returns the handle of the inserted item if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemFirst(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item as the first child of its parent.
            </summary>
            <param name="h">
            The handle of the item that will be the inserted item's parent.
            To insert the item at the first level, specify 0.
            </param>
            <param name="l">
            The label of the item you want to specify as the first child of its parent.
            </param>
            <param name="p">
            The picture index for the item you want to specify as the first child of its parent.
            </param>
            <returns>
            Returns the handle of the item inserted if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemFirst(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Inserts an item as the last child of its parent.
            </summary>
            <param name="h">
            The handle of the item that will be the inserted item's parent. To insert the item at the first level, specify 0.
            </param>
            <param name="n">A TreeViewItem structure for the item you are inserting.</param>
            <returns>Returns the handle of the item inserted if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemLast(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item as the last child of its parent.
            </summary>
            <param name="h">
            The handle of the item that will be the inserted item's parent.
            To insert the item at the first level, specify 0.
            </param>
            <param name="l">
            The label of the item you want to specify as the last child of its parent.
            </param>
            <param name="p">
            The picture index for the item you want to specify as the last child of its parent.
            </param>
            <returns>Returns the handle of the item inserted if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemLast(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Inserts an item as the last child of its parent.
            </summary>
            <param name="h">
            The handle of the item that will be the inserted item's parent. 
            To insert the item at the first level, specify 0.
            </param>
            <param name="n">A TreeViewItem structure for the item you are inserting.</param>
            <returns>Returns the handle of the item inserted if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemSort(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts an item in sorted order, if possible.
            </summary>
            <param name="h">The handle of the item that will be the inserted item's parent. To insert the item at the first level, specify 0.</param>
            <param name="l">The label by which you want to sort the item as a child of its parent.</param>
            <param name="p">The picture index for the item you want to sort as a child of its parent, according to its label.</param>
            <returns>Returns the handle of the item inserted if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.InsertItemSort(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Inserts an item in sorted order, if possible.
            </summary>
            <param name="h">The handle of the item that will be the inserted item's parent. To insert the item at the first level, specify 0.</param>
            <param name="n">A TreeViewItem structure for the item you are inserting.</param>
            <returns>Returns the handle of the item inserted if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnDestroy">
            <summary>
            the OnDestroy event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SelectItem(Sybase.PowerBuilder.PBLong)">
            <summary>
            Selects a specified item.
            </summary>
            <param name="h">The handle of the specified item</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetDropHighlight(Sybase.PowerBuilder.PBLong)">
            <summary>
            Highlights the specified item as the drop target.
            </summary>
            <param name="h">
            The handle of the item you want to highlight as the target in a drag-and-drop operation
            </param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetFirstVisible(Sybase.PowerBuilder.PBLong)">
            <summary>
            Sets the specified item as the first visible item in a TreeView control.
            </summary>
            <param name="h">The handle of the item you are identifying as the first visible item in the TreeView control</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetFocus">
            <summary>
            Sets the focus on the specified object or control.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs. If objectname is null, SetFocus returns null.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetItem(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Sets the data associated with a specified item.
            </summary>
            <param name="h">The handle associated with the item you want to change</param>
            <param name="n">The TreeView item you want to change</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetLevelPictures(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the picture indexes for all items at a particular level.
            </summary>
            <param name="l">The TreeView level for which you are setting the picture indexes</param>
            <param name="p">An index from the regular picture list specifying the picture to be displayed when the item is not selected</param>
            <param name="q">An index from the regular picture list specifying the picture to be displayed when the item is selected</param>
            <param name="s">An index from the state picture list specifying the picture to be displayed to the left of the regular picture</param>
            <param name="o">An index from the overlay picture list specifying the picture to be displayed on top of the regular picture</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetOverlayPicture(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Puts an image in the control's image list into an overlay image list.
            </summary>
            <param name="o">
            The index number of the overlay picture in the overlay image list. 
            The overlay image list is a 1-based array. Overlayindex must be 1 (for the first image), 
            a previously designated index (replacing an image), or 1 greater than the current largest index (adding another image). 
            SetOverlayPicture fails if you specify an index that creates gaps in the array.
            </param>
            <param name="i">
            The index number of an image in the control's main image list. For ListViews, both the large and small 
            pictures at that index become overlay images. The image is still available for use as an item's main image.
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.Sort(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBGRSortTypeValue)">
            <summary>
            Sorts the children of an item in a TreeView control.
            </summary>
            <param name="h">The item for which you want to sort its children.</param>
            <param name="t">The sort method you want to use. Valid values are:Ascending!Descending!UserDefinedSort!</param>
            <returns>Returns 1 if it succeeds and -1 if it fails.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SortAll(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBGRSortTypeValue)">
            <summary>
            Sorts all the levels below an item in the TreeView item hierarchy.
            </summary>
            <param name="h">The item for which you want to sort all the levels below it.</param>
            <param name="t">The sort method you want to use. Values are:Ascending!Descending!Unsorted!UserDefinedSort!</param>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.CanDrag">
            <summary>
            help function to check whether the listview can be dragged
            </summary>
            <returns>returns true if it can be dragged</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnInitialUpdate">
            <summary>
            whne this control is initialized, this method is called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnDragDrop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Handle the dragdrop event
            </summary>
            <param name="sender">The control fires the event</param>
            <param name="e">the drag event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnDragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            Handle the DragOver event
            </summary>
            <param name="sender">The control fires the event</param>
            <param name="e">the Drag event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPreviewMouseDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse down event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPreviewMouseRightButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse rightbutton down event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPreviewMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Mouse move event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">drag event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPreviewMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Mouse up event handler
            </summary>
            <param name="sender">sender control</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.Constructor(System.Object,System.EventArgs)">
            <summary>
            Process the constuctor event
            </summary>
            <param name="sender">The control sent out the construct event</param>
            <param name="e">The constructor event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnBeginLabelEdit(System.Int32)">
            <summary>
            Handle the BeginLabelEdit event
            </summary>
            <param name="h">the handle of the deleted item</param>
            <returns>
            0  Allow editing of the label
            1  Prevent editing of the label
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnClickedEvent(System.Int32)">
            <summary>
            Handle the Clicked event
            </summary>
            <param name="h">the handle of the deleted item</param>
            <returns> 0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnDeleteItem(System.Int32)">
            <summary>
            the DeleteItem event handler
            </summary>
            <param name="h">the handle of the deleted item</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnDoubleClickedEvent(System.Int32)">
            <summary>
            Handle the doubleClicked event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns> 0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnEndLabelEdit(System.Int32,System.String)">
            <summary>
            Handle the EndLabelEdit event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <param name="s">the label string</param>
            <returns>
            0  Allow the new text to become the item's label
            1  Prevent the new text from becoming the item's label
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPBGotFocus">
            <summary>
            Handle the PBGotFocus event
            </summary>
            <param name="sender">The control fires the event</param>
            <param name="e">the routed event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnItemCollapsed(System.Int32)">
            <summary>
            Handle the item Collapsed event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns> 0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnItemCollapsing(System.Int32)">
            <summary>
            Handle the item Collapsing event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns> 0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnItemExpanded(System.Int32)">
            <summary>
            Handle the Item Expanded event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns> 0  Continue processing</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnItemExpanding(System.Int32)">
            <summary>
            Handle the item expanding event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns>
            0  Continue processing
            1  Prevents the TreeView from expanding
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnItemPopulate(System.Int32)">
            <summary>
            Handle the Item Populate event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns>0  Continue processing </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handle the keydown event
            </summary>
            <param name="sender">The control fires the event</param>
            <param name="e">the key event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnPBLostFocus">
            <summary>
            Handle the PBLostFocus event
            </summary>
            <param name="sender">The control fires the event</param>
            <param name="e">the routed event</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnRightClickedEvent(System.Int32)">
            <summary>
            Handle the RightClicked event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns>0  Continue processing </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnRightDoubleClickedEvent(System.Int32)">
            <summary>
            Handle the RightDoubleClicked event
            </summary>
            <param name="h">the handle of a treeview item</param>
            <returns>0  Continue processing </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnSelectionChanged(System.Int32,System.Int32)">
            <summary>
            Handle the selectionchanged event
            </summary>
            <param name="l1">the handle of a treeview item</param>
            <param name="l2">the handle of another treeview item</param>
            <returns>0  Continue processing </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnSelectionChanging(System.Int32,System.Int32)">
            <summary>
            Handle the selectionchanging event
            </summary>
            <param name="l1">the handle of a treeview item</param>
            <param name="l2">the handle of another treeview item</param>
            <returns>
            0  Allow the selection to change
            1  Prevent the selection from changing
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.OnSort(System.Int32,System.Int32)">
            <summary>
            Handle the sort event
            </summary>
            <param name="l1">the handle of a treeview item</param>
            <param name="l2">the handle of another treeview item</param>
            <returns>
            -1  handle1 is less than handle2
            0  handle1 is equal to handle2
            1  handle1 is greater than handle2
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.ConvertNavigationFromPBToWPF(Sybase.PowerBuilder.PBTreeNavigationValue)">
            <summary>
            To convert PBTreeNavigation to WPF TreeViewNavigation
            </summary>
            <param name="b">PBTreeNavigation Value</param>
            <returns>WPF TreeViewNavigation Type</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.ConvertSortTypeFromWPFToPB(Sybase.PowerBuilder.WPF.Controls.TreeViewSortType)">
            <summary>
            To convert TreeViewSortType to PBGRSortType 
            </summary>
            <param name="b">TreeViewSortType Type</param>
            <returns>PBGRSortType Value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.ConvertSortTypeFromPBToWPF(Sybase.PowerBuilder.PBGRSortTypeValue)">
            <summary>
            To convert PBGRSortType to TreeViewSortType
            </summary>
            <param name="b">PBGRSortType Type</param>
            <returns>TreeViewSortType Value</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetDefaultSelectedItem">
            <summary>
            Set default SelectedItem if SelectedItem is not specified
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetItemProps(Sybase.PowerBuilder.WPF.Controls.TreeViewItem,Sybase.PowerBuilder.WPF.PBTreeViewItem)">
            <summary>
            Set the properties of a treeview item
            </summary>
            <param name="item">the PB wpf treeview item</param>
            <param name="n">the PB treeview item</param>
            <returns>1: successful  -1: failed</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.CheckMouseOnItem(System.Windows.DependencyObject)">
            <summary>
            help function to check whether mouse is on listview item
            </summary>
            <param name="ob">the object which handle mouse event</param>
            <returns>returns true if ob is a inner control of listview item</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBTreeView.SetDragDropInfo(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Set the dragdrop help info
            </summary>
            <param name="e">the mouse button event args</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.BeginDragEvent">
            <summary>
            BeginDrag event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.BeginLabelEditEvent">
            <summary>
            BeginLabelEdit event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.BeginRightDragEvent">
            <summary>
            BeginRightDrag event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ConstructorEvent">
            <summary>
            Constructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DeleteItemEvent">
            <summary>
            DeleteItem event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DestructorEvent">
            <summary>
            Destructor event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DragDropEvent">
            <summary>
            DragDrop event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DragEnterEvent">
            <summary>
            DragEnter  event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DragLeaveEvent">
            <summary>
            DragLeave event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.EndLabelEditEvent">
            <summary>
            EndLabelEdit event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.GetFocusEvent">
            <summary>
            GetFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ItemCollapsedEvent">
            <summary>
            ItemCollapsed event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ItemCollapsingEvent">
            <summary>
            ItemCollapsing event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ItemExpandedEvent">
            <summary>
            ItemExpanded event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ItemExpandingEvent">
            <summary>
            ItemExpanding event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.ItemPopulateEvent">
            <summary>
            ItemPopulate event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.KeyEvent">
            <summary>
            Key event definition
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.LoseFocusEvent">
            <summary>
            LoseFocus event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.NotifyEvent">
            <summary>
            Notify event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.OtherEvent">
            <summary>
            Other event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.RightClickedEvent">
            <summary>
            RightClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.RightDoubleClickedEvent">
            <summary>
            RightDoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.SelectionChangedEvent">
            <summary>
            SelectionChanged event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.SelectionChangingEvent">
            <summary>
            SelectionChanging event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBTreeView.SortEvent">
            <summary>
            Sort event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.FaceName">
            <summary>
            Gets or sets the name of the typeface in which the text of the control displays
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.FontCharSet">
            <summary>
            Gets or sets the font character set used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.FontFamily">
            <summary>
            Gets or sets the font family (type style) used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.FontPitch">
            <summary>
            Gets or sets the pitch (spacing) of the font used for the text in the control
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Italic">
            <summary>
            Gets or sets a value indicating whether text displays in italic format.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.TextSize">
            <summary>
            Gets or sets the point size of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.UnderLine">
            <summary>
            Gets or sets a value indicating whether text displays with underlines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Weight">
            <summary>
            Gets or sets the weight of text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Accelerator">
            <summary>
            Gets or sets the ASCII value of the accelerator key.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.BackColor">
            <summary>
            Gets or sets the numeric value of the background color.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Checkboxes">
            <summary>
            Gets or sets a value indicating whether the state images are replaced by check boxes.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.DeleteItems">
            <summary>
            Gets or sets a value indicating whether the user can delete a TreeView item.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.DisableDragDrop">
            <summary>
            Gets or sets a value indicating whether events for dragging are triggered.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.EditLabels">
            <summary>
            Gets or sets a value indicating whether the user can edit the item labels.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.FullRowSelect">
            <summary>
            Gets or sets a value indicating whether full row selection is enabled.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.HasButtons">
            <summary>
            Gets or sets a value indicating whether TreeView parent items have + and - buttons.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.HasLines">
            <summary>
            Gets or sets a value indicating whether TreeView items are connected by lines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.HideSelection">
            <summary>
            Gets or sets a value indicating whether selected text stays selected (highlighted) even when the control does not have focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.IMEMode">
            <summary>
            Gets or sets the input method editor mode.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Indent">
            <summary>
            Gets or sets the size, in PowerBuilder units, that TreeView items are indented.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.LayoutRTL">
            <summary>
            Gets or sets a value indicating whether the layout of the control should be a mirror image of the standard layout.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.LinesAtRoot">
            <summary>
            Gets or sets a value indicating whether PowerBuilder will connect TreeView root items with lines.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.PictureHeight">
            <summary>
            Gets or sets the size, in pixels, for the height of the TreeView item picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.PictureMaskColor">
            <summary>
            Gets or sets the color to be transparent when used in a TreeView item picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.PictureName">
            <summary>
            Gets or sets the names of the files containing the pictures added during initialization.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.PictureWidth">
            <summary>
            Gets or sets the size, in pixels, for the width of the TreeView item picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.RightToLeft">
            <summary>
            Gets or sets a value indicating whether characters should be displayed in right-to-left order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.SingleExpand">
            <summary>
            Gets or sets a value indicating whether only the selected TreeView item is allowed to be expanded.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.SortType">
            <summary>
            Gets or sets the sort method.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.StatePictureHeight">
            <summary>
            Gets or sets the size, in pixels, for the height of the state picture. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.StatePictureMaskColor">
            <summary>
            Gets or sets the color to be transparent when used in a state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.StatePictureName">
            <summary>
            Gets or sets the name of the picture used as the state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.StatePictureWidth">
            <summary>
            Gets or sets the size in pixels for the width of the state picture.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.TextColor">
            <summary>
            Gets or sets the numeric value of the color used for text.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.Tooltips">
            <summary>
            Gets or sets a value indicating whether an item's label should be displayed in a tooltip if the label is cut off by the right edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBTreeView.TrackSelect">
            <summary>
            Gets or sets a value indicating whether items appear in a different color when the mouse moves over them . 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMDIClient">
            <summary>
            The PBMDIClient class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMDIClient.wpfMDIClient">
            <summary>
            the real inner wpf MDIClient object
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMDIClient.wpfWindow">
            <summary>
            the real inner wpf window object
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMDIClient.#ctor">
            <summary>
            The contructor of PBMDIClient
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMDIClient.SetRedraw(Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Controls the automatic redrawing of an object or control after each change to its properties.
            </summary>
            <param name="f">the state of the redraw flag</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetRedraw returns null.
            </returns>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.BackColor">
            <summary>
            Gets or sets the numerical value of the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.BringToTop">
            <summary>
            Gets or sets a value indicating whether PowerBuilder moves the MDIClient 
            object to the top of the front-to-back order.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.Height">
            <summary>
            Gets or sets the height of the MDIClient object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.MicroHelpHeight">
            <summary>
            Gets the height of the MicroHelp in the MDIClient object. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.Width">
            <summary>
            Gets or sets the width of the MDIClient object
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.X">
            <summary>
            Gets or sets the distance from the left edge of the MDI frame window
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMDIClient.Y">
            <summary>
            Gets or sets the distance from the top of the MDI frame window
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBAnimation">
            <summary>
            The PBAnimation class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.loseFocusEvent">
            <summary>
            lose focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.startEvent">
            <summary>
            start event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.stopEvent">
            <summary>
            stop event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBAnimation.wpfAnimation">
            <summary>
            The real inner wpf Animation object.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.#ctor">
            <summary>
            The contructor of PBAnimation
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">
            the modifier keys and mouse buttons that are pressed
            </param>
            <param name="xpos">
            the distance of the pointer from the left edge of the window's workspace in pixels
            </param>
            <param name="ypos">
            the distance of the pointer from the top of the window's workspace in pixels
            </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.start">
            <summary>
            stub of start method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.stop">
            <summary>
            stub of stop method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.Play(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBLong)">
            <summary>
            Starts playing an animation (an AVI clip). 
            </summary>
            <param name="f">
            A long value in the range 0 to 65,535 indicating the frame 
            where playing starts. The value 0 starts playing the clip at the 
            first frame.
            </param>
            <param name="t">
            A long value in the range -1 to 65,535 indicating the frame where 
            playing ends. The value -1 stops playing the clip at the last frame.
            </param>
            <param name="r">
            A long value in the range -1 to 65,535 indicating the number of times to replay 
            the clip. The value -1 continues playing the clip indefinitely.
            </param>
            <returns>Integer. Returns 1 for success and -1 for failure. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.Seek(Sybase.PowerBuilder.PBLong)">
            <summary>
            Displays a specific frame in an AVI clip in an animation control. 
            </summary>
            <param name="s">
            A long value in the range 0 to 65,535 indicating the frame to display
            </param>
            <returns>Integer. Returns 1 for success and -1 for failure. </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.Stop">
            <summary>
            Stops an animation (an AVI clip) from playing. 
            </summary>
            <returns>
            Integer. Returns 1 if it succeeds and -1 if 
            the animation is not running or could not be stopped.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The Click and DoubleClick event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnStart(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The Start event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBAnimation.OnStop(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The Stop event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.ClickedEvent">
            <summary>
            Clicked Event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.StartEvent">
            <summary>
            Start Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBAnimation.StopEvent">
            <summary>
            Stop Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.AnimationName">
            <summary>
            Gets or sets the name of the file that contains the AVI clip. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.AutoPlay">
            <summary>
            Gets or sets a value indicating whether the animation starts as soon as 
            the AVI clip is opened.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.OriginalSize">
            <summary>
            Gets or sets a value indicating whether the width and height properties of an 
            animation control are set to the size of the AVI clip.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.Pointer">
            <summary>
            Gets or sets the name of the stock pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.PowerTipText">
            <summary>
            Gets or sets a PowerTip for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBAnimation.Transparent">
            <summary>
            Gets or sets a value indicating whether  the background of the control matches 
            the background of the window it is on, creating a transparent effect. 
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.BackPrinting.PrintPrintingJob">
            <summary>
            The class PrintPrintingJob
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBHScrollBar">
            <summary>
            The PBVScrollBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.lineLeftEvent">
            <summary>
            line left event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.lineRightEvent">
            <summary>
            line right event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.loseFocusEvent">
            <summary>
            lost focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.movedEvent">
            <summary>
            moved event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.pageLeftEvent">
            <summary>
            page left event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.pageRightEvent">
            <summary>
            page right event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.rbuttonDownEvent">
            <summary>
            right button down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHScrollBar.wpfHScrollBar">
            <summary>
            The inner HScrollBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.#ctor">
            <summary>
            Constructor of PBVScrollBar class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.lineleft">
            <summary>
            stub of lineleft method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.lineright">
            <summary>
            stub of lineright method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.moved(Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of moved method
            </summary>
            <param name="lscrollPos"> the postion moved </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.pageleft">
            <summary>
            stub of pageleft method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.pageright">
            <summary>
            stub of pageright method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.OnScroll(System.Object,System.Windows.Controls.Primitives.ScrollEventArgs)">
            <summary>
            The scroll event handler
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHScrollBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.LineLeftEvent">
            <summary>
            LineUp event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.LineRightEvent">
            <summary>
            LineDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.MovedEvent">
            <summary>
            Moved event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.PageLeftEvent">
            <summary>
            PageUp event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.PageRightEvent">
            <summary>
            PageDown event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHScrollBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the scroll box is at the right edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the scroll box is at the left edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.Position">
            <summary>
            Gets or sets a value between MinPosition and MaxPosition specifying the position of the scroll box.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.StdHeight">
            <summary>
            Gets or sets a value that indicates whether PowerBuilder uses the standard height for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHScrollBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBGraph">
            <summary>
            The PBGraph class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.doubleClickedEvent">
            <summary>
            double clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.loseFocusEvent">
            <summary>
            lose Focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBGraph.rbuttonDownEvent">
            <summary>
            rbuttonDown event handler
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.#ctor">
            <summary>
            The contructor of PBGraph
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.clicked">
            <summary>
            stub of clicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.doubleclicked">
            <summary>
            stub of doubleclicked method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.losefocus">
            <summary>
            stub of losefocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other method
            </summary>
            <param name="i">UnsignedLong by value</param>
            <param name="j">Long by value</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e">the event to be found</param>
            <param name="token">the event token</param>
            <returns>the event handler</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddCategory(Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a new category to the category axis of a graph
            </summary>
            <param name="c">the category you want to add to the control.</param>
            <returns>
            Returns the number assigned to the category if it succeeds. 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddCategory(Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a new category to the category axis of a graph
            </summary>
            <param name="c">the category you want to add to the control.</param>
            <returns>
            Returns the number assigned to the category if it succeeds. 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddCategory(Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a new category to the category axis of a graph
            </summary>
            <param name="c">the category you want to add to the control.</param>
            <returns>
            Returns the number assigned to the category if it succeeds. 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddCategory(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a new category to the category axis of a graph
            </summary>
            <param name="c">the category you want to add to the control.</param>
            <returns>
            Returns the number assigned to the category if it succeeds. 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddCategory(Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a new category to the category axis of a graph
            </summary>
            <param name="c">the category you want to add to the control.</param>
            <returns>
            Returns the number assigned to the category if it succeeds. 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Adds a value to the end of the specified series for the graph.
            </summary>
            <param name="s">The number that identifies the series to which you want to add data.</param>
            <param name="v">The value of the data you want to add.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the position of the data value in the series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, AddData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.AddSeries(Sybase.PowerBuilder.PBString)">
            <summary>
            Adds a series to the graph and assigns the series a number.
            </summary>
            <param name="s">A string whose value is the name of the series you want to add to the control</param>
            <returns>
            Returns the number assigned to the series if it succeeds.
            If an error occurs, it returns -1. 
            If any argument's value is null, AddSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.CategoryCount">
            <summary>
            Counts the categories in the graph.
            </summary>
            <returns>
            Returns the count if it succeeds 
            Returns -1 if an error occurs. 
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.CategoryName(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the name of the specified category in the graph.
            </summary>
            <param name="c">The number of the category for which you want the name.</param>
            <returns>
            Returns the name of categorynumber in controlname. 
            If an error occurs, it returns the empty string (""). 
            If any argument's value is null, CategoryName returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.Clipboard">
            <summary>
            Copies the graph in bitmap (BMP) format to the clipboard.
            </summary>
            <returns>Returns 1 if it succeeds and -1 if an error occurs.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DataCount(Sybase.PowerBuilder.PBString)">
            <summary>
            Returns the number of data points in a specified series in the graph.
            </summary>
            <param name="s">A string whose value is the name of the series for which you want the number of data points</param>
            <returns>
            Returns the number of data points in the specified series if it succeeds 
            Returns -1 if an error occurs. 
            If any argument's value is null, DataCount returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteCategory(Sybase.PowerBuilder.PBDate)">
            <summary>
            Deletes the specified category and the data values in the series from the graph.
            </summary>
            <param name="c">A value that is the category you want to delete from the control. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteCategory(Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Deletes the specified category and the data values in the series from the graph.
            </summary>
            <param name="c">A value that is the category you want to delete from the control. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteCategory(Sybase.PowerBuilder.PBDouble)">
            <summary>
            Deletes the specified category and the data values in the series from the graph.
            </summary>
            <param name="c">A value that is the category you want to delete from the control. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteCategory(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes the specified category and the data values in the series from the graph.
            </summary>
            <param name="c">A value that is the category you want to delete from the control. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteCategory(Sybase.PowerBuilder.PBTime)">
            <summary>
            Deletes the specified category and the data values in the series from the graph.
            </summary>
            <param name="c">A value that is the category you want to delete from the control. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Deletes the data value in the specified data point in the specified series in the graph.
            </summary>
            <param name="s">The number of the series containing the data value you want to delete from controlname</param>
            <param name="i">The number of the data point containing the data you want to delete</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.DeleteSeries(Sybase.PowerBuilder.PBString)">
            <summary>
            Deletes the specified series and the data values in the series from the graph.
            </summary>
            <param name="s">A string whose value is the name of the series you want to delete</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, DeleteSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindCategory(Sybase.PowerBuilder.PBDate)">
            <summary>
            Obtains the number of the specified category in the graph.
            </summary>
            <param name="c">A value that is the category for which you want the number. </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph control
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindCategory(Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Obtains the number of the specified category in the graph.
            </summary>
            <param name="c">A value that is the category for which you want the number. </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph control
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindCategory(Sybase.PowerBuilder.PBDouble)">
            <summary>
            Obtains the number of the specified category in the graph.
            </summary>
            <param name="c">A value that is the category for which you want the number. </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph control
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindCategory(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number of the specified category in the graph.
            </summary>
            <param name="c">A value that is the category for which you want the number. </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph control
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindCategory(Sybase.PowerBuilder.PBTime)">
            <summary>
            Obtains the number of the specified category in the graph.
            </summary>
            <param name="c">A value that is the category for which you want the number. </param>
            <returns>
            Returns the number of the category named in categoryvalue in the graph control
            If an error occurs, FindCategory returns -1. 
            If any argument's value is null, FindCategory returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.FindSeries(Sybase.PowerBuilder.PBString)">
            <summary>
            Obtains the number PowerBuilder assigned to the specified series
            </summary>
            <param name="s">A string whose value is the name of the series for which you want the number</param>
            <returns>
            Returns the number of the series named in seriesname in the graph control
            If an error occurs, FindSeries returns -1. 
            If any argument's value is null, FindSeries returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the value of the specified data point in the specified series in the graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <returns>
            Returns the value of the data in datapoint if it succeeds 
            Returns 0 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of the specified data point in the specified series in the graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="y">
            A value of the grDataType enumerated datatype specifying whether you want the x or y 
            value of the data point in a scatter graph. 
            </param>
            <returns>
            Returns the value of the data in datapoint if it succeeds 
            Returns 0 if an error occurs. 
            If any argument's value is null, GetData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataLabelling(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Obtain the data labelling for a 3D graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">Indicates whether to label the data with its value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataPieExplode(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Reports the percentage by which a pie slice is exploded in a pie graph.
            </summary>
            <param name="s">The number that identifies the series</param>
            <param name="i">The number of the exploded data point (that is, the pie slice)</param>
            <param name="p">
            An integer variable in which you want to store the percentage of the graph's radius 
            that the pie slice is exploded</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, GetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern or symbol of a data point in a graph. 
            </summary>
            <param name="s">The number of the series in which you want the fill pattern or symbol type of a data point.</param>
            <param name="i">The number of the data point for which you want the fill pattern or symbol type.</param>
            <param name="p">The variable in which you want to store the data style. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the fill pattern or symbol of a data point in a graph. 
            </summary>
            <param name="s">The number of the series in which you want the fill pattern or symbol type of a data point.</param>
            <param name="i">The number of the data point for which you want the fill pattern or symbol type.</param>
            <param name="m">The variable in which you want to store the data style. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want the line style and width.</param>
            <param name="l">A variable of type LineStyle in which you want to store the line style.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want the line style and width.</param>
            <param name="l">A variable of type LineStyle in which you want to store the line style.</param>
            <param name="w">An integer variable in which you want to store the width of the line. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want the color of a data point.</param>
            <param name="i">The number of the data point for which you want the color.</param>
            <param name="c"> the aspect of the data point for which you want the color</param>
            <param name="v">A long variable in which you want to store the color.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataTransparency(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the tranparency percentage of a data point in a series in any 3D graph
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the transparency value.</param>
            <param name="v">Integer value for percent transparency. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">specifying whether you want the x or y value of the data point in a scatter graph. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">specifying whether you want the x or y value of the data point in a scatter graph. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">specifying whether you want the x or y value of the data point in a scatter graph. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">specifying whether you want the x or y value of the data point in a scatter graph. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetDataValue(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime@,Sybase.PowerBuilder.PBGRDataTypeValue)">
            <summary>
            Obtains the value of a data point in a series in a graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="i">The number of the data point for which you want the value.</param>
            <param name="v">The name of a variable that will hold the data value. </param>
            <param name="y">specifying whether you want the x or y value of the data point in a scatter graph. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, GetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Obtain the series labelling for a 3D graph.
            </summary>
            <param name="s">The number that identifies the series from which you want data.</param>
            <param name="v">Indicates whether to label the data with its value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean@)">
            <summary>
            Reports whether a series in a graph is an overlay
            </summary>
            <param name="s">A string whose value is the name of the series </param>
            <param name="o">A boolean variable in which you want to store a value indicating whether the series is an overlay.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue@)">
            <summary>
            Obtains the fill pattern or symbol of a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series</param>
            <param name="p">The variable in which you want to store the style information.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue@)">
            <summary>
            Obtains the fill pattern or symbol of a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series</param>
            <param name="m">The variable in which you want to store the style information.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series</param>
            <param name="l">A variable of type LineStyle in which you want to store the line style of seriesname.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the line style and width for a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series</param>
            <param name="l">A variable of type LineStyle in which you want to store the line style of seriesname.</param>
            <param name="w">An integer variable in which you want to store the line width for seriesname.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong@)">
            <summary>
            Obtains the colors associated with a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the aspect of the series</param>
            <param name="v">A long variable in which you want to store the color's RGB value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.GetSeriesTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Obtains the tranparency percentage of a series in a 3D graph
            </summary>
            <param name="s">The string that identifies the series</param>
            <param name="v">Integer value for percent transparency.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportClipboard">
            <summary>
            Inserts data into a graph control from tab-separated, comma-separated, or XML data on the clipboard.
            </summary>
            <returns>
            Returns the number of rows that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportClipboard(Sybase.PowerBuilder.PBLong,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from tab-separated, comma-separated, or XML data on the clipboard.
            </summary>
            <param name="s">An enumerated value of the SaveAsType constant or a number representing that value</param>
            <param name="args">other args</param>
            <returns>
            Returns the number of rows that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportClipboard(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from tab-separated, comma-separated, or XML data on the clipboard.
            </summary>
            <param name="t">An enumerated value of the SaveAsType constant or a number representing that value </param>
            <param name="args">other args</param>
            <returns>
            Returns the number of rows that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportFile(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from data in a file.
            </summary>
            <param name="f">A string whose value is the name of the file</param>
            <param name="args">other args</param>
            <returns>
            Returns the number of rows that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportFile(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from data in a file.
            </summary>
            <param name="t">An enumerated value of the SaveAsType constant.</param>
            <param name="f">A string whose value is the name of the file</param>
            <param name="args">other args</param>
            <returns>
            Returns the number of rows that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportString(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from tab-separated, comma-separated, or XML data in a string.
            </summary>
            <param name="s">A string from which you want to copy the data. </param>
            <param name="args">other args</param>
            <returns>
            Returns the number of data points that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ImportString(Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBAny[])">
            <summary>
            Inserts data into a graph control from tab-separated, comma-separated, or XML data in a string.
            </summary>
            <param name="t">A value of the SaveAsType enumerated datatype specifying the format of the imported string. </param>
            <param name="s">A string from which you want to copy the data. </param>
            <param name="args">other args</param>
            <returns>
            Returns the number of data points that were imported if it succeeds and negative integers if an error occurs
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertCategory(Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a category on the category axis of a graph at the specified position.
            </summary>
            <param name="c">A value that is the category you want to insert. </param>
            <param name="i">The number of the category before which you want to insert the new category.</param>
            <returns>
            Returns the number of the category if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertCategory(Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a category on the category axis of a graph at the specified position.
            </summary>
            <param name="c">A value that is the category you want to insert. </param>
            <param name="i">The number of the category before which you want to insert the new category.</param>
            <returns>
            Returns the number of the category if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertCategory(Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a category on the category axis of a graph at the specified position.
            </summary>
            <param name="c">A value that is the category you want to insert. </param>
            <param name="i">The number of the category before which you want to insert the new category.</param>
            <returns>
            Returns the number of the category if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertCategory(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a category on the category axis of a graph at the specified position.
            </summary>
            <param name="c">A value that is the category you want to insert. </param>
            <param name="i">The number of the category before which you want to insert the new category.</param>
            <returns>
            Returns the number of the category if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertCategory(Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a category on the category axis of a graph at the specified position.
            </summary>
            <param name="c">A value that is the category you want to insert. </param>
            <param name="i">The number of the category before which you want to insert the new category.</param>
            <returns>
            Returns the number of the category if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Inserts a data point in a series of a graph. 
            </summary>
            <param name="s">The number that identifies the series in which you want to insert data.</param>
            <param name="i">The number of the data point before which you want to insert the data.</param>
            <param name="v">The value of the data point you want to insert.</param>
            <param name="c">The category for this data value on the category axis. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, InsertData returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.InsertSeries(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Inserts a series in a graph at the specified position.
            </summary>
            <param name="n">A string containing the name of the series you want to insert.</param>
            <param name="i">The number of the series before which you want to insert the new series.</param>
            <returns>
            Returns the number of the series if it succeeds and -1 if an error occurs.
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point. </param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDate,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDateTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBDouble,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDate)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDateTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBDouble)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBString)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ModifyData(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBTime,Sybase.PowerBuilder.PBTime)">
            <summary>
            Changes the value of a data point in a series on a graph.
            </summary>
            <param name="s">The number of the series in which you want to modify data.</param>
            <param name="i">The number of the data point for which you want to modify the data.</param>
            <param name="v">The new value of the data point.</param>
            <param name="c">The category for datavalue.</param>
            <returns>
            Returns the number of the data value if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ObjectAtPointer(Sybase.PowerBuilder.PBInt@,Sybase.PowerBuilder.PBInt@)">
            <summary>
            Finds out where the user clicked in a graph.
            </summary>
            <param name="s">An integer variable in which you want to store the number of the series under the pointer</param>
            <param name="i">An integer variable in which you want to store the number of the data point under the pointer</param>
            <returns>
            Returns a value of the grObjectType enumerated datatype if the user clicks anywhere in the graph (including an empty area) 
            and a null value if the user clicks outside the graph.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.Reset(Sybase.PowerBuilder.PBGRResetTypeValue)">
            <summary>
            Clears data from a control or object.
            </summary>
            <param name="t">
            A value of the grResetType enumerated datatype specifying whether you want 
            to delete only data values or all series and all data values
            </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.ResetDataColors(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Restores the color of a data point to the default color for its series.
            </summary>
            <param name="s">The number of the series in which you want to reset the color of a data point</param>
            <param name="i">The number of the data point for which you want to reset the color</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SaveAs">
            <summary>
            Saves the contents of a graph in a file.
            </summary>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">A value of the SaveAsType enumerated datatype specifying the format in which to save the data represented in the graph.</param>
            <param name="i">indicating whether you want column headings with the saved data.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SaveAs(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBSaveAsTypeValue,Sybase.PowerBuilder.PBBoolean,Sybase.PowerBuilder.PBEncodingValue)">
            <summary>
            Saves the data in a graph in the format you specify.
            </summary>
            <param name="f">A string whose value is the name of the file in which you want to save the data in the graph.</param>
            <param name="t">A value of the SaveAsType enumerated datatype specifying the format in which to save the data represented in the graph.</param>
            <param name="i">indicating whether you want column headings with the saved data.</param>
            <param name="e">Character encoding of the file to which the data is saved.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SeriesCount">
            <summary>
            Counts the number of series in a graph.
            </summary>
            <returns>
            Returns the number of series in the graph if it succeeds and -1 if an error occurs. 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SeriesName(Sybase.PowerBuilder.PBInt)">
            <summary>
            Obtains the series name associated with the specified series number.
            </summary>
            <param name="s">The number of the series for which you want to obtain the name</param>
            <returns>
            Returns the name assigned to the series. 
            If an error occurs, it returns the empty string (""). 
            If any argument's value is null, returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataLabelling(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the data label for a 3D graph.
            </summary>
            <param name="s">The number that identifies the series in which you want to data label the data.</param>
            <param name="i">The data point that you want to label.</param>
            <param name="v">Indicates whether to label the data with its value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataPieExplode(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Explodes a pie slice in a pie graph.
            </summary>
            <param name="s">The number that identifies the series.</param>
            <param name="i">The number of the data point (that is, the pie slice) to be exploded.</param>
            <param name="p">the percentage of the radius that the pie slice is moved away from the center.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataPieExplode returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern and symbol for a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="p">An enumerated datatype specifying the appearance setting for the data point.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the fill pattern and symbol for a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want to set the appearance of a data point.</param>
            <param name="i">The number of the data point for which you want to set the appearance.</param>
            <param name="m">An enumerated datatype specifying the appearance setting for the data point.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a data point's line in a graph.
            </summary>
            <param name="s">The number of the series in which you want to set the line style and width of a data point.</param>
            <param name="i">The number of the data point for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype.</param>
            <param name="w">An integer whose value is the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataStyle(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a data point in a graph.
            </summary>
            <param name="s">The number of the series in which you want to set the color of a data point.</param>
            <param name="i">The number of the data point for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the aspect of the data point</param>
            <param name="v">A long whose value is the new color for colortype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetDataTransparency(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the tranparency percentage of a data point in a series in a 3D graph
            </summary>
            <param name="s">The number that identifies the series in which you want to set data.</param>
            <param name="i">The number of the data point for which you want to set a transparency value.</param>
            <param name="v">Integer value for percent transparency. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetDataTransparency returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesLabelling(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Set the series label for a 3D graph.
            </summary>
            <param name="s">The string that names the series in which you want the transparency value.</param>
            <param name="v">Indicates whether to label the data with its value.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesLabelling returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBBoolean)">
            <summary>
            Specifies whether a series is an overlay
            </summary>
            <param name="s">A string whose value is the name of the series whose overlay status you want to change.</param>
            <param name="o">A boolean value indicating whether you want the series to be an overlay</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBFillPatternValue)">
            <summary>
            Specifies the fill pattern and symbol for data markers in a series.
            </summary>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="p">A value of an enumerated datatype specifying an appearance setting for the series</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRSymbolTypeValue)">
            <summary>
            Specifies the fill pattern and symbol for data markers in a series.
            </summary>
            <param name="s">A string whose value is the name of the series in which you want to set the appearance.</param>
            <param name="m">A value of an enumerated datatype specifying an appearance setting for the series</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBLineStyleValue,Sybase.PowerBuilder.PBInt)">
            <summary>
            Specifies the style and width of a series' lines in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series for which you want to set the line style and width.</param>
            <param name="l">A value of the LineStyle enumerated datatype.</param>
            <param name="w">An integer specifying the width of the line in pixels.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesStyle(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBGRColorTypeValue,Sybase.PowerBuilder.PBLong)">
            <summary>
            Specifies the colors of a series in a graph.
            </summary>
            <param name="s">A string whose value is the name of the series for which you want to set the color.</param>
            <param name="c">A value of the grColorType enumerated datatype specifying the item for which you want to set the color.</param>
            <param name="v">A long specifying the new color for colortype.</param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesStyle returns null.
            </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBGraph.SetSeriesTransparency(Sybase.PowerBuilder.PBString,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the tranparency percentage of a series in a 3D graph
            </summary>
            <param name="s">The string that identifies the series for which you want to set the transparency value.</param>
            <param name="v">Integer value for percent transparency. </param>
            <returns>
            Returns 1 if it succeeds and -1 if an error occurs. 
            If any argument's value is null, SetSeriesTransparency returns null.
            </returns>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.ClickedEvent">
            <summary>
            Clicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.ConstructorEvent">
            <summary>
            Constructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DestructorEvent">
            <summary>
            Destructor Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DoubleClickedEvent">
            <summary>
            DoubleClicked Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DragDropEvent">
            <summary>
            DragDrop Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DragEnterEvent">
            <summary>
            DragEnter Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DragLeaveEvent">
            <summary>
            DragLeave Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.DragWithinEvent">
            <summary>
            DragWithin Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.GetFocusEvent">
            <summary>
            GetFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.LoseFocusEvent">
            <summary>
            LoseFocus Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.OtherEvent">
            <summary>
            Other Event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBGraph.RButtonDownEvent">
            <summary>
            RButtonDown Event
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.BackColor">
            <summary>
            Gets or sets the numeric value of the background color
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Border">
            <summary>
            Gets or sets a value indicating whether the control has a border.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.BorderStyle">
            <summary>
            Gets or sets the style of the border of the control.  
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Category">
            <summary>
            Gets or sets the properties of the category axis of the graph.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.CategorySort">
            <summary>
            Gets or sets how the categories are sorted.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Depth">
            <summary>
            Gets or sets the percent the depth is of the width of the graph.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Elevation">
            <summary>
            Gets or sets the angle of front-to-back elevation.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.FocusRectangle">
            <summary>
            Gets or sets a value indicating whether a dotted rectangle (the focus rectangle) frames the control when it has focus.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.GraphType">
            <summary>
            Gets or sets the type of the graph.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Legend">
            <summary>
            Gets or sets the alignment of the text in the graph legend. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.LegendDispAttr">
            <summary>
            Gets or sets the type style for the text in the graph legend
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Render3D">
            <summary>
            Gets or sets a value indicating whether the control is rendered in the new 3D style. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.OverlapPercent">
            <summary>
            Gets or sets the percent of the width of the data markers by which different series in a graph overlap.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Perspective">
            <summary>
            Gets or sets the distance the graph is from the front of the window.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.PieDispAttr">
            <summary>
            Gets or sets properties of the text in pie graph labels
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.PlotNullData">
            <summary>
            Gets or sets a value indicating whether a continuous line is drawn between tics in a line graph when there is no data on the X and Y axes. 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or the file containing the pointer used for the graph.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Rotation">
            <summary>
            Gets or sets how much to rotate the graph from left to right.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Series">
            <summary>
            Gets or sets the series in the graph
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.SeriesSort">
            <summary>
            Gets or sets how the series are sorted
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.ShadeColor">
            <summary>
            Gets or sets the color used for the shading in the graph.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Spacing">
            <summary>
            Gets or sets the space between data markers in the graph as a percent.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.TextColor">
            <summary>
            Gets or sets the color to be used for the text in the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Title">
            <summary>
            Gets or sets the text of the title for the graph
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.TitleDispAttr">
            <summary>
            Gets or sets the type style for the text in the graph title
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBGraph.Values">
            <summary>
            Gets or sets the values of the value axis of the graph.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.SmartClient.UpdaterNotifierResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.SmartClient.UpdaterNotifierResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.SmartClient.UpdaterNotifierResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerTypeEmitter">
            <summary>
            Summary description for EventHandlerTypeEmitter.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerTypeEmitter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="Name">The name, which the is given to assembly, module and class.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerTypeEmitter.GetEventHandlerType(System.Reflection.EventInfo)">
            <summary>
            Emits dynamically a event handler with a given signature, which fills all arguments of the event in an object array 
            and calls a common event.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.WPFSessionFinder">
            <summary>
            the WPFSessionFinder class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.WPFSessionFinder.GetCurrentSession">
            <summary>
            Get the current sesssion 
            </summary>
            <returns> the current session </returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBHProgressBar">
            <summary>
            The PBVProgressBar class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.clickedEvent">
            <summary>
            clicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.doubleClickedEvent">
            <summary>
            doubleclicked event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.getFocusEvent">
            <summary>
            get focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.loseFocusEvent">
            <summary>
            lost focus event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.otherEvent">
            <summary>
            other event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.rbuttonDownEvent">
            <summary>
            right button down event handler 
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBHProgressBar.wpfHProgressBar">
            <summary>
            The inner HProgressBar control
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.#ctor">
            <summary>
            Constructor of PBVProgressBar class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.clicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            When the left mouse button is pressed on the control
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window workspace or control in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace or control in pixels</param>
            <returns>Return code choices (specify in a RETURN statement)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.constructor">
            <summary>
            stub of constructor method
            </summary>
            <returns>Return code choices </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.destructor">
            <summary>
            stub of destructor method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.doubleclicked(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            When the left mouse button is double pressed on the control
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window workspace or control in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace or control in pixels</param>
            <returns>Return code choices (specify in a RETURN statement)</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.getfocus">
            <summary>
            stub of getfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.losefocus">
            <summary>
            stub of lostfocus method
            </summary>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.other(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBLong)">
            <summary>
            stub of other  method
            </summary>
            <param name="i"> UnsignedLong by value </param>
            <param name="j"> Long by value  </param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.rbuttondown(Sybase.PowerBuilder.PBULong,Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            stub of rbuttondown method
            </summary>
            <param name="flags">the modifier keys and mouse buttons that are pressed</param>
            <param name="xpos">the distance of the pointer from the left edge of the window's workspace in pixels</param>
            <param name="ypos">the distance of the pointer from the top of the window's workspace in pixels</param>
            <returns>Return code choices</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.FindEvent(Sybase.PowerBuilder.PBTrigEventValue,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.FindEvent(System.String,Sybase.PowerBuilder.PBEventTokens@)">
            <summary>
            FindEvent of the class
            </summary>
            <param name="e"> the event to be found </param>
            <param name="token">the event token </param>
            <returns> the event handler </returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.OffsetPos(Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the offset for progress bar controls.
            </summary>
            <param name="increment">An integer that is added to the start position of the progress bar control</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.SetRange(Sybase.PowerBuilder.PBInt,Sybase.PowerBuilder.PBInt)">
            <summary>
            Sets the range of the control. The control uses the range and 
            the current position to determine the percentage of the progress bar to fill with the highlight color
            </summary>
            <param name="startPos">Integer indicating the initial position of the range</param>
            <param name="endPos">Integer indicating the terminal position of the range</param>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.StepIt">
            <summary>
            Moves the control's current position by the amount specified by the value of the SetStep property
            </summary>
            <returns>Integer. Returns 1 if it succeeds and -1 if there is an error</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.OnInitialUpdate">
            <summary>
            When initialize the DropDownListBox control, this method will be called
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.WpfControl_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Override getFocus event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.OnMouseLButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The mouse double clicked event handler
            </summary>
            <param name="sender">The control send out the event</param>
            <param name="e">The event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.OnLoseFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            The LoseFocus event handler
            </summary>
            <param name="sender">the source of the event</param>
            <param name="e">the event object</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBHProgressBar.OnMouseRButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Process the rbuttondown event
            </summary>
            <param name="sender">The control sent out the rbuttondown event</param>
            <param name="e">The rbuttondown event.</param>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.ClickedEvent">
            <summary>
            Clicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.ConstructorEvent">
            <summary>
            Constructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DestructorEvent">
            <summary>
            Destructor event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DoubleClickedEvent">
            <summary>
            DoubleClicked event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DragDropEvent">
            <summary>
            DragDrop event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DragEnterEvent">
            <summary>
            DragEnter event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DragLeaveEvent">
            <summary>
            DragLeave event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.DragWithinEvent">
            <summary>
            DragWithin event
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.GetFocusEvent">
            <summary>
            GetFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.LoseFocusEvent">
            <summary>
            LostFocus event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.OtherEvent">
            <summary>
            Other event 
            </summary>
        </member>
        <member name="E:Sybase.PowerBuilder.WPF.PBHProgressBar.RButtonDownEvent">
            <summary>
            rbuttondown event 
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.MaxPosition">
            <summary>
            Gets or sets the value of the Position property when the progress bar is at the right edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.MinPosition">
            <summary>
            Gets or sets the value of the Position property when the progress bar is at the left edge of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.Pointer">
            <summary>
            Gets or sets the name of the stock pointer or file containing the pointer used for the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.Position">
            <summary>
            Gets or sets the value of the current position within the range of the control.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.SetStep">
            <summary>
            Gets or sets a step increment for the progress bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.SmoothScroll">
            <summary>
            Gets or sets a value that indicates the control displays as a smooth scrolling bar instead of the default segmented bar.
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBHProgressBar.InnerControl">
            <summary>
            Gets the inner pbwpf control.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBUltraLite">
            <summary>
            Definition the PBUltraLite class
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUltraLite.SetSyncReg">
            <summary>
            set Synchronize key value
            </summary>
            <returns>1:success, otherwise fail.</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUltraLite.GetSyncReg">
            <summary>
            get Synchronize key value
            </summary>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBUltraLite.GetObjectRevisionFromRegistry(System.Int32@)">
            <summary>
            get object revision from registry.
            </summary>
            <param name="revision">revision value</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.PBMobiLink">
            <summary>
            Definition the PBMobiLink class
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.syncPreviewDelegate">
            <summary>
            mobilink preview event handler
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.databaseUser">
            <summary>
            database user
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.datasource">
            <summary>
            datasource name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.databasePassword">
            <summary>
            database password
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.encryptionKey">
            <summary>
            encryption key
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.commandString">
            <summary>
            command string
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.databaseMLSync">
            <summary>
            database of mobilink Synchronize
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.syncWindowClass">
            <summary>
            Synchronize window class name
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.cmdArgs">
            <summary>
            command argruments
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.exitCode">
            <summary>
            exit code value
            </summary>
        </member>
        <member name="F:Sybase.PowerBuilder.WPF.PBMobiLink.syncProcessHandle">
            <summary>
            Synchronize process handle
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.#ctor">
            <summary>
            PBMobiLink constructor
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlPass">
            <summary>
            get mobilink password
            </summary>
            <returns>mobilink password</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlPass(System.String)">
            <summary>
            set mobilink password
            </summary>
            <param name="s">mobilink password</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlAuthenticateParms">
            <summary>
            get mobilink authenticate parameters
            </summary>
            <returns>mobilink authenticate parameters</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlAuthenticateParms(System.String)">
            <summary>
            set mobilink authenticate parameters
            </summary>
            <param name="s">authenticate parameters</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlHost">
            <summary>
            get mobilink host
            </summary>
            <returns>mobilink host</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlHost(System.String)">
            <summary>
            set mobilink host
            </summary>
            <param name="s">mobilink host</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlPort">
            <summary>
            get mobilink port
            </summary>
            <returns>mobilink port</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlPort(System.String)">
            <summary>
            set mobilink port
            </summary>
            <param name="s">mobilink port</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlUseWindow">
            <summary>
            get the value which indicate whether mobilink use window
            </summary>
            <returns>mobilink use window</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlUseWindow(System.Boolean)">
            <summary>
            set mobilink use window
            </summary>
            <param name="useWnd">use window value</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlUseLogFile">
            <summary>
            get the value which indicate whether mobilink use log file
            </summary>
            <returns>mobilink use log file</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlUseLogFile(System.Boolean)">
            <summary>
            set mobilink use log file
            </summary>
            <param name="useLog">the value indicate whether use log file</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlLogFileName">
            <summary>
            get mobilink log file name
            </summary>
            <returns>mobilink log file name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlLogFileName(System.String)">
            <summary>
            set mobilink log file name
            </summary>
            <param name="s">mobilink log file name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlLogOpts">
            <summary>
            get mobilink log options
            </summary>
            <returns>mobilink log options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlLogOpts(System.String)">
            <summary>
            set mobilink log options
            </summary>
            <param name="s">mobilink log options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLServerVersion">
            <summary>
            get mobilink server version
            </summary>
            <returns>mobilink server version</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLServerVersion(System.Int32)">
            <summary>
            set mobilink server version
            </summary>
            <param name="ver">mobilink server version</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlProcessOption">
            <summary>
            get mobilink process option
            </summary>
            <returns>mobilink process option</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlProcessOption(System.Int32)">
            <summary>
            set mobilink process option
            </summary>
            <param name="option">mobilink process option</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlAdditionalOpts">
            <summary>
            get mobilink additional options
            </summary>
            <returns>mobilink additional options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlAddtionalOpts(System.String)">
            <summary>
            set mobilink additional options
            </summary>
            <param name="s">mobilink additional options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlExtendedOpts">
            <summary>
            get mobilink extended options
            </summary>
            <returns>mobilink extended options</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlExtendedOpts(System.String)">
            <summary>
            set mobilink extended options
            </summary>
            <param name="s">mobilink extended options</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlSyncRegistryKey">
            <summary>
            get mobilink synchronize registry key
            </summary>
            <returns>mobilink synchronize registry key</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlSyncRegistryKey(System.String)">
            <summary>
            set mobilink synchronize registry key
            </summary>
            <param name="s">mobilink synchronize registry key</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLObjectRevision">
            <summary>
            get mobilink object revision
            </summary>
            <returns>mobilink object revision</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLObjectRevision(System.Int32)">
            <summary>
            set mobilink object revision
            </summary>
            <param name="rev">mobilink object revision</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMlErrors">
            <summary>
            get mobilink errors
            </summary>
            <returns>mobilink errors</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMlErrors(System.String,System.Boolean)">
            <summary>
            set mobilink errors
            </summary>
            <param name="s">mobilink errors</param>
            <param name="append">append the error or reset</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLPublication">
            <summary>
            get mobilink publication
            </summary>
            <returns>mobilink publication</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLPublication(System.String)">
            <summary>
            set mobilink publication
            </summary>
            <param name="s">mobilink publication</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLDataSource">
            <summary>
            get mobilink datasource
            </summary>
            <returns>mobilink datasource</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLDataSource(System.String)">
            <summary>
            set mobilink datasource
            </summary>
            <param name="s">mobilink datasource</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLDbUser">
            <summary>
            get mobilink database user
            </summary>
            <returns>mobilink database user</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLDbUser(System.String)">
            <summary>
            set mobilink database user
            </summary>
            <param name="s">mobilink database user</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLDbPass">
            <summary>
            get mobilink database password
            </summary>
            <returns>mobilink database password</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLDbPass(System.String)">
            <summary>
            set mobilink database password
            </summary>
            <param name="s">mobilink database password</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetMLEncryptionKey">
            <summary>
            get mobilink encryption key
            </summary>
            <returns>mobilink encryption key</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetMLEncryptionKey(System.String)">
            <summary>
            set mobilink encryption key
            </summary>
            <param name="s">mobilink encryption key</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetSyncRegistryProperties">
            <summary>
            get synchronize registry properties
            </summary>
            <returns>synchronize registry properties</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetSyncRegistryProperties">
            <summary>
            set synchronize registry properties
            </summary>
            <returns>synhronize registry properties</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetCommandString">
            <summary>
            get command string
            </summary>
            <returns>command string</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetNewMobiLinkPassword(System.IntPtr,System.String)">
            <summary>
            set new mobilink password
            </summary>
            <param name="wnd">the synchronize window handle</param>
            <param name="newpw">the mobilink new password</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDbmlsyncPath">
            <summary>
            get mobilink synchronize path
            </summary>
            <returns>mobilink synchronize path</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDbmlSyncHWND">
            <summary>
            get mobilink synchronize window handle
            </summary>
            <returns>mobilink synchronize window handle</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetObjectRevisionFromRegistry">
            <summary>
            get object revision from registry
            </summary>
            <returns>object revision from registry</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.IsSyncProcessActive">
            <summary>
            get whether synchronize process is active
            </summary>
            <returns>true ,the process is alive,otherwise dead</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetProcessExitCode(System.UInt32)">
            <summary>
            set process exit code
            </summary>
            <param name="code">process exit code</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.Synchronize(System.IntPtr,System.String)">
            <summary>
            synchronize function
            </summary>
            <param name="wnd">synchronize window handle</param>
            <param name="cmdString">command strings</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetSyncReg">
            <summary>
            set synchronize registry key value
            </summary>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetSyncReg">
            <summary>
            get synchronize registry key
            </summary>
            <returns>1:success ,otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetObjectRevisionFromRegistry(System.Int32@)">
            <summary>
            get object revision from registry key
            </summary>
            <param name="revision">object revision value</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetCmdString(System.String@,System.Boolean)">
            <summary>
            get command string
            </summary>
            <param name="cmdString">command string</param>
            <param name="ping">whether execute ping operation</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDbUser">
            <summary>
            get database user
            </summary>
            <returns>database user</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetDbUser(System.String)">
            <summary>
            set database user
            </summary>
            <param name="s">database user</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDatasource">
            <summary>
            get datasource
            </summary>
            <returns>datasource name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetDatasource(System.String)">
            <summary>
            set datasource
            </summary>
            <param name="s">datasource name</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDbPass">
            <summary>
            get database password
            </summary>
            <returns>database password</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetDbPass(System.String)">
            <summary>
            set database password
            </summary>
            <param name="s">database password</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetEncryptionKey">
            <summary>
            get encryption key
            </summary>
            <returns>encryption key</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetEncryptionKey(System.String)">
            <summary>
            set encryption key
            </summary>
            <param name="s">encryption key</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetSyncWindowClass">
            <summary>
            get synchronize window class name
            </summary>
            <returns>synchronize window class name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetCmdExeName">
            <summary>
            get command exe name
            </summary>
            <returns>command exe name</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetCmdArguments">
            <summary>
            get command arguments
            </summary>
            <returns>command arguments</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.AddSyncWindowHandle(System.IntPtr)">
            <summary>
            add synchronize window handle
            </summary>
            <param name="handle">window handle</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetCmdString(System.String)">
            <summary>
            set command string
            </summary>
            <param name="s">command string</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.SetCmdArgs(System.String)">
            <summary>
            set command arguments
            </summary>
            <param name="s">command arguments</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GetDbmlsyncPath(System.String@)">
            <summary>
            get mobilink synchronize path
            </summary>
            <param name="exe">the exe name</param>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.DetermineDbmlSyncPath">
            <summary>
            determine mobilink synchronize path
            </summary>
            <returns>1:success, otherwise fail</returns>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.PBMobiLink.GenerateSyncWindowClassName">
            <summary>
            generate synchronize window class name
            </summary>
        </member>
        <member name="P:Sybase.PowerBuilder.WPF.PBMobiLink.SyncPreviewDelegate">
            <summary>
            Gets or sets a value of mobilink preview event handler
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.CommonEventHandler.CommonEventHandlerDlgt">
            <summary>
            This delegate describes the signature of the event, which is emited by the generated helper classes.
            </summary>
        </member>
        <member name="T:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerFactory">
            <summary>
            Summary description for EventHandlerFactory.
            </summary>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerFactory.#ctor(System.String)">
            <summary>
            Creates the EventHandlerFactory.
            </summary>
            <param name="Name">Name of the Factory. Is used as naming component of the event handlers to create.</param>
        </member>
        <member name="M:Sybase.PowerBuilder.WPF.CommonEventHandler.EventHandlerFactory.GetEventHandler(System.Reflection.EventInfo)">
            <summary>
            Creates an event handler for the specified event
            </summary>
            <param name="Info">The event info class of the event</param>
            <returns>The created event handler help class.</returns>
        </member>
    </members>
</doc>
